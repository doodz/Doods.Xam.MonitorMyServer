//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Doods.Xam.MonitorMyServer.Resx.Webmin.software {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Webmin_software {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Webmin_software() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Doods.Xam.MonitorMyServer.Resx.Webmin.software.Webmin_software", typeof(Webmin_software).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à 1.
        /// </summary>
        internal static string @__norefs {
            get {
                return ResourceManager.GetString("__norefs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à ACCEPT new license agreements?.
        /// </summary>
        internal static string aix_accept {
            get {
                return ResourceManager.GetString("aix_accept", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à AUTOMATICALLY install requisite software?.
        /// </summary>
        internal static string aix_auto {
            get {
                return ResourceManager.GetString("aix_auto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cleanup install failure?.
        /// </summary>
        internal static string aix_clean {
            get {
                return ResourceManager.GetString("aix_clean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à COMMIT software updates?.
        /// </summary>
        internal static string aix_commit {
            get {
                return ResourceManager.GetString("aix_commit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à DETAILED output?.
        /// </summary>
        internal static string aix_detail {
            get {
                return ResourceManager.GetString("aix_detail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à INPUT device / directory for software.
        /// </summary>
        internal static string aix_device {
            get {
                return ResourceManager.GetString("aix_device", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à EXTEND file systems if space needed?.
        /// </summary>
        internal static string aix_extend {
            get {
                return ResourceManager.GetString("aix_extend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Include corresponding LANGUAGE filesets?.
        /// </summary>
        internal static string aix_include {
            get {
                return ResourceManager.GetString("aix_include", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Preview new LICENSE agreements?.
        /// </summary>
        internal static string aix_license {
            get {
                return ResourceManager.GetString("aix_license", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à AIX Package Manager.
        /// </summary>
        internal static string aix_manager {
            get {
                return ResourceManager.GetString("aix_manager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à OVERWRITE same or newer versions?.
        /// </summary>
        internal static string aix_overwrite {
            get {
                return ResourceManager.GetString("aix_overwrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à PREVIEW only? (install operation will NOT occur).
        /// </summary>
        internal static string aix_preview {
            get {
                return ResourceManager.GetString("aix_preview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Process multiple volumes?.
        /// </summary>
        internal static string aix_process {
            get {
                return ResourceManager.GetString("aix_process", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SAVE replaced files?.
        /// </summary>
        internal static string aix_save {
            get {
                return ResourceManager.GetString("aix_save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SOFTWARE to install.
        /// </summary>
        internal static string aix_software {
            get {
                return ResourceManager.GetString("aix_software", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unknown.
        /// </summary>
        internal static string aix_unknown {
            get {
                return ResourceManager.GetString("aix_unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à VERIFY install and check file sizes?.
        /// </summary>
        internal static string aix_verify {
            get {
                return ResourceManager.GetString("aix_verify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgrade Now.
        /// </summary>
        internal static string apt_apply {
            get {
                return ResourceManager.GetString("apt_apply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. install failed!.
        /// </summary>
        internal static string apt_failed {
            get {
                return ResourceManager.GetString("apt_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Search APT ...
        /// </summary>
        internal static string apt_find {
            get {
                return ResourceManager.GetString("apt_find", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgrade All Packages.
        /// </summary>
        internal static string apt_form {
            get {
                return ResourceManager.GetString("apt_form", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à APT package upgrade options.
        /// </summary>
        internal static string apt_header {
            get {
                return ResourceManager.GetString("apt_header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package from APT.
        /// </summary>
        internal static string apt_input {
            get {
                return ResourceManager.GetString("apt_input", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Installing package(s) with command $1 ...
        /// </summary>
        internal static string apt_install {
            get {
                return ResourceManager.GetString("apt_install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgrade mode.
        /// </summary>
        internal static string apt_mode {
            get {
                return ResourceManager.GetString("apt_mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Don&apos;t upgrade.
        /// </summary>
        internal static string apt_mode0 {
            get {
                return ResourceManager.GetString("apt_mode0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Normal upgrade.
        /// </summary>
        internal static string apt_mode1 {
            get {
                return ResourceManager.GetString("apt_mode1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Distribution upgrade (&lt;tt&gt;upgrade-dist&lt;/tt&gt;).
        /// </summary>
        internal static string apt_mode2 {
            get {
                return ResourceManager.GetString("apt_mode2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à APT.
        /// </summary>
        internal static string apt_name {
            get {
                return ResourceManager.GetString("apt_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. install complete..
        /// </summary>
        internal static string apt_ok {
            get {
                return ResourceManager.GetString("apt_ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Missing distribution path.
        /// </summary>
        internal static string apt_repo_epath {
            get {
                return ResourceManager.GetString("apt_repo_epath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Missing or invalid-looking base URL.
        /// </summary>
        internal static string apt_repo_eurl {
            get {
                return ResourceManager.GetString("apt_repo_eurl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Distribution path components.
        /// </summary>
        internal static string apt_repo_path {
            get {
                return ResourceManager.GetString("apt_repo_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Repository base URL.
        /// </summary>
        internal static string apt_repo_url {
            get {
                return ResourceManager.GetString("apt_repo_url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Find packages matching :.
        /// </summary>
        internal static string apt_search {
            get {
                return ResourceManager.GetString("apt_search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Only show which packages would be upgraded.
        /// </summary>
        internal static string apt_sim {
            get {
                return ResourceManager.GetString("apt_sim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Search APT.
        /// </summary>
        internal static string apt_title {
            get {
                return ResourceManager.GetString("apt_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Resynchronize package list (&lt;tt&gt;update&lt;/tt&gt;).
        /// </summary>
        internal static string apt_update {
            get {
                return ResourceManager.GetString("apt_update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Resynchronizing package list with command $1 ...
        /// </summary>
        internal static string apt_updatedesc {
            get {
                return ResourceManager.GetString("apt_updatedesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. resynchronization failed!.
        /// </summary>
        internal static string apt_updatefailed {
            get {
                return ResourceManager.GetString("apt_updatefailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. resynchronization complete..
        /// </summary>
        internal static string apt_updateok {
            get {
                return ResourceManager.GetString("apt_updateok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgrade All Packages.
        /// </summary>
        internal static string apt_upgrade {
            get {
                return ResourceManager.GetString("apt_upgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgrading all packages with command $1 ...
        /// </summary>
        internal static string apt_upgradedesc {
            get {
                return ResourceManager.GetString("apt_upgradedesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Simulating upgrade of all packages with command $1 ...
        /// </summary>
        internal static string apt_upgradedescsim {
            get {
                return ResourceManager.GetString("apt_upgradedescsim", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. upgrade failed!.
        /// </summary>
        internal static string apt_upgradefailed {
            get {
                return ResourceManager.GetString("apt_upgradefailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. upgrade complete..
        /// </summary>
        internal static string apt_upgradeok {
            get {
                return ResourceManager.GetString("apt_upgradeok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Force install if missing prerequisites?.
        /// </summary>
        internal static string bsd_force {
            get {
                return ResourceManager.GetString("bsd_force", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à $1 Package Manager  .
        /// </summary>
        internal static string bsd_manager {
            get {
                return ResourceManager.GetString("bsd_manager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Execute pre and post install scripts?.
        /// </summary>
        internal static string bsd_scripts {
            get {
                return ResourceManager.GetString("bsd_scripts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unknown.
        /// </summary>
        internal static string bsd_unknown {
            get {
                return ResourceManager.GetString("bsd_unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. already installed..
        /// </summary>
        internal static string csw_already {
            get {
                return ResourceManager.GetString("csw_already", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. install failed!.
        /// </summary>
        internal static string csw_failed {
            get {
                return ResourceManager.GetString("csw_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Browse CSW ...
        /// </summary>
        internal static string csw_find {
            get {
                return ResourceManager.GetString("csw_find", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgrade Packages.
        /// </summary>
        internal static string csw_form {
            get {
                return ResourceManager.GetString("csw_form", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package from CSW.
        /// </summary>
        internal static string csw_input {
            get {
                return ResourceManager.GetString("csw_input", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Installing package(s) with command $1 ...
        /// </summary>
        internal static string csw_install {
            get {
                return ResourceManager.GetString("csw_install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à CSW.
        /// </summary>
        internal static string csw_name {
            get {
                return ResourceManager.GetString("csw_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. install complete..
        /// </summary>
        internal static string csw_ok {
            get {
                return ResourceManager.GetString("csw_ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package.
        /// </summary>
        internal static string csw_package {
            get {
                return ResourceManager.GetString("csw_package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. trying again with new dependencies..
        /// </summary>
        internal static string csw_retry {
            get {
                return ResourceManager.GetString("csw_retry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Browse CSW.
        /// </summary>
        internal static string csw_title {
            get {
                return ResourceManager.GetString("csw_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgrading all installed packages with command $1 ...
        /// </summary>
        internal static string csw_updatedesc {
            get {
                return ResourceManager.GetString("csw_updatedesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgrade All Installed Packages.
        /// </summary>
        internal static string csw_upgrade {
            get {
                return ResourceManager.GetString("csw_upgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Version.
        /// </summary>
        internal static string csw_version {
            get {
                return ResourceManager.GetString("csw_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Warning: this script does not appear to have been run.
        /// </summary>
        internal static string cygwin_badpostscript {
            get {
                return ResourceManager.GetString("cygwin_badpostscript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Missing Cygwin packages database $1.
        /// </summary>
        internal static string cygwin_edb {
            get {
                return ResourceManager.GetString("cygwin_edb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Failed to read symlink: $1.
        /// </summary>
        internal static string cygwin_elread {
            get {
                return ResourceManager.GetString("cygwin_elread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Failed to stat symlink: $1.
        /// </summary>
        internal static string cygwin_elstat {
            get {
                return ResourceManager.GetString("cygwin_elstat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Failed to stat file: $1.
        /// </summary>
        internal static string cygwin_estat {
            get {
                return ResourceManager.GetString("cygwin_estat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The file is missing.
        /// </summary>
        internal static string cygwin_fmissing {
            get {
                return ResourceManager.GetString("cygwin_fmissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The file to which the link points is missing.
        /// </summary>
        internal static string cygwin_lmissing {
            get {
                return ResourceManager.GetString("cygwin_lmissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package $1 already exists..
        /// </summary>
        internal static string cygwin_pkgexists {
            get {
                return ResourceManager.GetString("cygwin_pkgexists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Warning: This is not an official interface for managing Cygwin software.  Use at your own risk..
        /// </summary>
        internal static string cygwin_warnuse {
            get {
                return ResourceManager.GetString("cygwin_warnuse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Ignore package conflicts?.
        /// </summary>
        internal static string debian_conflicts {
            get {
                return ResourceManager.GetString("debian_conflicts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Ignore dependancy problems?.
        /// </summary>
        internal static string debian_depends {
            get {
                return ResourceManager.GetString("debian_depends", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Replace newer package with old?.
        /// </summary>
        internal static string debian_downgrade {
            get {
                return ResourceManager.GetString("debian_downgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Debian DPKG.
        /// </summary>
        internal static string debian_manager {
            get {
                return ResourceManager.GetString("debian_manager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Overwrite files from other packages?.
        /// </summary>
        internal static string debian_overwrite {
            get {
                return ResourceManager.GetString("debian_overwrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unknown.
        /// </summary>
        internal static string debian_unknown {
            get {
                return ResourceManager.GetString("debian_unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Removed unused dependencies as well?.
        /// </summary>
        internal static string delete_depstoo {
            get {
                return ResourceManager.GetString("delete_depstoo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Invalid temp file to delete.
        /// </summary>
        internal static string delete_efile {
            get {
                return ResourceManager.GetString("delete_efile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The package $1 does not exist.
        /// </summary>
        internal static string delete_epack {
            get {
                return ResourceManager.GetString("delete_epack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Failed to delete package $1.
        /// </summary>
        internal static string delete_err {
            get {
                return ResourceManager.GetString("delete_err", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Ignore dependencies?.
        /// </summary>
        internal static string delete_nodeps {
            get {
                return ResourceManager.GetString("delete_nodeps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Skip uninstall scripts?.
        /// </summary>
        internal static string delete_noscripts {
            get {
                return ResourceManager.GetString("delete_noscripts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Delete.
        /// </summary>
        internal static string delete_ok {
            get {
                return ResourceManager.GetString("delete_ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Purge configuration files?.
        /// </summary>
        internal static string delete_purge {
            get {
                return ResourceManager.GetString("delete_purge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Are you sure you want to delete the package $1 ? Up to $2 files ($3) will be deleted forever..
        /// </summary>
        internal static string delete_rusure {
            get {
                return ResourceManager.GetString("delete_rusure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Are you sure you want to delete the package $1 ?.
        /// </summary>
        internal static string delete_rusure2 {
            get {
                return ResourceManager.GetString("delete_rusure2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Delete Package.
        /// </summary>
        internal static string delete_title {
            get {
                return ResourceManager.GetString("delete_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Uninstalling packages $1 ...
        /// </summary>
        internal static string deletes_desc {
            get {
                return ResourceManager.GetString("deletes_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No packages selected.
        /// </summary>
        internal static string deletes_enone {
            get {
                return ResourceManager.GetString("deletes_enone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Failed to delete packages.
        /// </summary>
        internal static string deletes_err {
            get {
                return ResourceManager.GetString("deletes_err", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Failed to uninstall $1 : $2.
        /// </summary>
        internal static string deletes_failed1 {
            get {
                return ResourceManager.GetString("deletes_failed1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Uninstallation failed : $1.
        /// </summary>
        internal static string deletes_failed2 {
            get {
                return ResourceManager.GetString("deletes_failed2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Delete them all.
        /// </summary>
        internal static string deletes_ok {
            get {
                return ResourceManager.GetString("deletes_ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Are you sure you want to uninstall the packages $1 ?.
        /// </summary>
        internal static string deletes_rusure {
            get {
                return ResourceManager.GetString("deletes_rusure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Successfully uninstalled $1.
        /// </summary>
        internal static string deletes_success1 {
            get {
                return ResourceManager.GetString("deletes_success1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. uninstallation complete..
        /// </summary>
        internal static string deletes_success2 {
            get {
                return ResourceManager.GetString("deletes_success2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Delete Packages.
        /// </summary>
        internal static string deletes_title {
            get {
                return ResourceManager.GetString("deletes_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Architecture.
        /// </summary>
        internal static string do_arch {
            get {
                return ResourceManager.GetString("do_arch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Class.
        /// </summary>
        internal static string do_class {
            get {
                return ResourceManager.GetString("do_class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Description.
        /// </summary>
        internal static string do_desc {
            get {
                return ResourceManager.GetString("do_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package Details.
        /// </summary>
        internal static string do_details {
            get {
                return ResourceManager.GetString("do_details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Install failed : $1.
        /// </summary>
        internal static string do_efailed {
            get {
                return ResourceManager.GetString("do_efailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You may attempt to install again by going back to the previous page and selecting different install options..
        /// </summary>
        internal static string do_efailedmsg1 {
            get {
                return ResourceManager.GetString("do_efailedmsg1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Failed to install package $1.
        /// </summary>
        internal static string do_err {
            get {
                return ResourceManager.GetString("do_err", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package Files.
        /// </summary>
        internal static string do_files {
            get {
                return ResourceManager.GetString("do_files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Installed.
        /// </summary>
        internal static string do_inst {
            get {
                return ResourceManager.GetString("do_inst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à None.
        /// </summary>
        internal static string do_none {
            get {
                return ResourceManager.GetString("do_none", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package.
        /// </summary>
        internal static string do_pack {
            get {
                return ResourceManager.GetString("do_pack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package $1 was installed successfully.
        /// </summary>
        internal static string do_success {
            get {
                return ResourceManager.GetString("do_success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Install Package.
        /// </summary>
        internal static string do_title {
            get {
                return ResourceManager.GetString("do_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Vendor.
        /// </summary>
        internal static string do_vend {
            get {
                return ResourceManager.GetString("do_vend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Version.
        /// </summary>
        internal static string do_ver {
            get {
                return ResourceManager.GetString("do_ver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Architecture.
        /// </summary>
        internal static string edit_arch {
            get {
                return ResourceManager.GetString("edit_arch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Class.
        /// </summary>
        internal static string edit_class {
            get {
                return ResourceManager.GetString("edit_class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Description.
        /// </summary>
        internal static string edit_desc {
            get {
                return ResourceManager.GetString("edit_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package Details.
        /// </summary>
        internal static string edit_details {
            get {
                return ResourceManager.GetString("edit_details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package is no longer installed.
        /// </summary>
        internal static string edit_egone {
            get {
                return ResourceManager.GetString("edit_egone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Installed.
        /// </summary>
        internal static string edit_inst {
            get {
                return ResourceManager.GetString("edit_inst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à List Files.
        /// </summary>
        internal static string edit_list {
            get {
                return ResourceManager.GetString("edit_list", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Show all the files in this package, and their current verification state..
        /// </summary>
        internal static string edit_listdesc {
            get {
                return ResourceManager.GetString("edit_listdesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à None.
        /// </summary>
        internal static string edit_none {
            get {
                return ResourceManager.GetString("edit_none", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package.
        /// </summary>
        internal static string edit_pack {
            get {
                return ResourceManager.GetString("edit_pack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à package details.
        /// </summary>
        internal static string edit_return {
            get {
                return ResourceManager.GetString("edit_return", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Edit Package.
        /// </summary>
        internal static string edit_title {
            get {
                return ResourceManager.GetString("edit_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Uninstall.
        /// </summary>
        internal static string edit_uninst {
            get {
                return ResourceManager.GetString("edit_uninst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Remove this package from your system..
        /// </summary>
        internal static string edit_uninstdesc {
            get {
                return ResourceManager.GetString("edit_uninstdesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Vendor.
        /// </summary>
        internal static string edit_vend {
            get {
                return ResourceManager.GetString("edit_vend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Version.
        /// </summary>
        internal static string edit_ver {
            get {
                return ResourceManager.GetString("edit_ver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Class.
        /// </summary>
        internal static string emerge_class {
            get {
                return ResourceManager.GetString("emerge_class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Description.
        /// </summary>
        internal static string emerge_desc {
            get {
                return ResourceManager.GetString("emerge_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. install failed!.
        /// </summary>
        internal static string emerge_failed {
            get {
                return ResourceManager.GetString("emerge_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Search ...
        /// </summary>
        internal static string emerge_find {
            get {
                return ResourceManager.GetString("emerge_find", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à From Portage repository.
        /// </summary>
        internal static string emerge_input {
            get {
                return ResourceManager.GetString("emerge_input", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Installing package with command $1 ...
        /// </summary>
        internal static string emerge_install {
            get {
                return ResourceManager.GetString("emerge_install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Portage.
        /// </summary>
        internal static string emerge_name {
            get {
                return ResourceManager.GetString("emerge_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No packages matched your search..
        /// </summary>
        internal static string emerge_none {
            get {
                return ResourceManager.GetString("emerge_none", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Replace existing packages?.
        /// </summary>
        internal static string emerge_noreplace {
            get {
                return ResourceManager.GetString("emerge_noreplace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. install complete..
        /// </summary>
        internal static string emerge_ok {
            get {
                return ResourceManager.GetString("emerge_ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Only install dependencies?.
        /// </summary>
        internal static string emerge_onlydeps {
            get {
                return ResourceManager.GetString("emerge_onlydeps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package.
        /// </summary>
        internal static string emerge_pack {
            get {
                return ResourceManager.GetString("emerge_pack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Search for package:.
        /// </summary>
        internal static string emerge_search {
            get {
                return ResourceManager.GetString("emerge_search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Search Portage.
        /// </summary>
        internal static string emerge_title {
            get {
                return ResourceManager.GetString("emerge_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Version.
        /// </summary>
        internal static string emerge_version {
            get {
                return ResourceManager.GetString("emerge_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Class.
        /// </summary>
        internal static string file_class {
            get {
                return ResourceManager.GetString("file_class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Description.
        /// </summary>
        internal static string file_desc {
            get {
                return ResourceManager.GetString("file_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Group.
        /// </summary>
        internal static string file_group {
            get {
                return ResourceManager.GetString("file_group", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Link To.
        /// </summary>
        internal static string file_link {
            get {
                return ResourceManager.GetString("file_link", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à None.
        /// </summary>
        internal static string file_none {
            get {
                return ResourceManager.GetString("file_none", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No information about $1 is available.
        /// </summary>
        internal static string file_notfound {
            get {
                return ResourceManager.GetString("file_notfound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Owner.
        /// </summary>
        internal static string file_owner {
            get {
                return ResourceManager.GetString("file_owner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package.
        /// </summary>
        internal static string file_pack {
            get {
                return ResourceManager.GetString("file_pack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Path.
        /// </summary>
        internal static string file_path {
            get {
                return ResourceManager.GetString("file_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Permissions.
        /// </summary>
        internal static string file_perms {
            get {
                return ResourceManager.GetString("file_perms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Size.
        /// </summary>
        internal static string file_size {
            get {
                return ResourceManager.GetString("file_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à File Information.
        /// </summary>
        internal static string file_title {
            get {
                return ResourceManager.GetString("file_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Type.
        /// </summary>
        internal static string file_type {
            get {
                return ResourceManager.GetString("file_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Description.
        /// </summary>
        internal static string find_desc {
            get {
                return ResourceManager.GetString("find_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Name.
        /// </summary>
        internal static string find_name {
            get {
                return ResourceManager.GetString("find_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No packages matching your search were found..
        /// </summary>
        internal static string find_none {
            get {
                return ResourceManager.GetString("find_none", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Find packages matching:.
        /// </summary>
        internal static string find_search {
            get {
                return ResourceManager.GetString("find_search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Search For Package.
        /// </summary>
        internal static string find_title {
            get {
                return ResourceManager.GetString("find_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Version.
        /// </summary>
        internal static string find_version {
            get {
                return ResourceManager.GetString("find_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Allow downdate?.
        /// </summary>
        internal static string hpux_allow_downdate {
            get {
                return ResourceManager.GetString("hpux_allow_downdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Allow incompatible?.
        /// </summary>
        internal static string hpux_allow_incompatible {
            get {
                return ResourceManager.GetString("hpux_allow_incompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Allow multiple versions?.
        /// </summary>
        internal static string hpux_allow_multiple_versions {
            get {
                return ResourceManager.GetString("hpux_allow_multiple_versions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Autorecover product?.
        /// </summary>
        internal static string hpux_autorecover_product {
            get {
                return ResourceManager.GetString("hpux_autorecover_product", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Autoselect dependencies?.
        /// </summary>
        internal static string hpux_autoselect_dependencies {
            get {
                return ResourceManager.GetString("hpux_autoselect_dependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Create target path?.
        /// </summary>
        internal static string hpux_create_target_path {
            get {
                return ResourceManager.GetString("hpux_create_target_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Defer configure?.
        /// </summary>
        internal static string hpux_defer_configure {
            get {
                return ResourceManager.GetString("hpux_defer_configure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enforce dependencies?.
        /// </summary>
        internal static string hpux_enforce_dependencies {
            get {
                return ResourceManager.GetString("hpux_enforce_dependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enforce disk space analysis?.
        /// </summary>
        internal static string hpux_enforce_dsa {
            get {
                return ResourceManager.GetString("hpux_enforce_dsa", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enforce scripts?.
        /// </summary>
        internal static string hpux_enforce_scripts {
            get {
                return ResourceManager.GetString("hpux_enforce_scripts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Mount all filesystems?.
        /// </summary>
        internal static string hpux_mount_all_filesystems {
            get {
                return ResourceManager.GetString("hpux_mount_all_filesystems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Reinstall?.
        /// </summary>
        internal static string hpux_reinstall {
            get {
                return ResourceManager.GetString("hpux_reinstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Reinstall files?.
        /// </summary>
        internal static string hpux_reinstall_files {
            get {
                return ResourceManager.GetString("hpux_reinstall_files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Reinstall files use checksum?.
        /// </summary>
        internal static string hpux_reinstall_files_use_cksum {
            get {
                return ResourceManager.GetString("hpux_reinstall_files_use_cksum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Root directory.
        /// </summary>
        internal static string hpux_root {
            get {
                return ResourceManager.GetString("hpux_root", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à All Packages.
        /// </summary>
        internal static string index_all {
            get {
                return ResourceManager.GetString("index_all", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Close all..
        /// </summary>
        internal static string index_close {
            get {
                return ResourceManager.GetString("index_close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No package system was detected!.
        /// </summary>
        internal static string index_echeckpackage {
            get {
                return ResourceManager.GetString("index_echeckpackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No update system was detected!.
        /// </summary>
        internal static string index_echeckupdate {
            get {
                return ResourceManager.GetString("index_echeckupdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The $1 package system requires the $2 command.
        /// </summary>
        internal static string index_epackagecmd {
            get {
                return ResourceManager.GetString("index_epackagecmd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The $1 update system requires the $2 command.
        /// </summary>
        internal static string index_eupdatecmd {
            get {
                return ResourceManager.GetString("index_eupdatecmd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Filter Packages.
        /// </summary>
        internal static string index_filter {
            get {
                return ResourceManager.GetString("index_filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Clear Filter.
        /// </summary>
        internal static string index_filterclear {
            get {
                return ResourceManager.GetString("index_filterclear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Displaying &lt;tt&gt;$1&lt;/tt&gt; packages out of &lt;tt&gt;$2&lt;/tt&gt;.
        /// </summary>
        internal static string index_filtered {
            get {
                return ResourceManager.GetString("index_filtered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à From ftp or http URL.
        /// </summary>
        internal static string index_ftp {
            get {
                return ResourceManager.GetString("index_ftp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Identify a File.
        /// </summary>
        internal static string index_ident {
            get {
                return ResourceManager.GetString("index_ident", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enter a command or the pathname of a file to search the $1 database for..
        /// </summary>
        internal static string index_identmsg {
            get {
                return ResourceManager.GetString("index_identmsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Search For:.
        /// </summary>
        internal static string index_identok {
            get {
                return ResourceManager.GetString("index_identok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Install a New Package.
        /// </summary>
        internal static string index_install {
            get {
                return ResourceManager.GetString("index_install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Installed Packages.
        /// </summary>
        internal static string index_installed {
            get {
                return ResourceManager.GetString("index_installed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select the location to install a new $1 package from...
        /// </summary>
        internal static string index_installmsg {
            get {
                return ResourceManager.GetString("index_installmsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Install.
        /// </summary>
        internal static string index_installok {
            get {
                return ResourceManager.GetString("index_installok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à From local file.
        /// </summary>
        internal static string index_local {
            get {
                return ResourceManager.GetString("index_local", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Open all..
        /// </summary>
        internal static string index_open {
            get {
                return ResourceManager.GetString("index_open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à module index.
        /// </summary>
        internal static string index_return {
            get {
                return ResourceManager.GetString("index_return", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Search For Package:.
        /// </summary>
        internal static string index_search {
            get {
                return ResourceManager.GetString("index_search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Software Packages.
        /// </summary>
        internal static string index_title {
            get {
                return ResourceManager.GetString("index_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package Tree.
        /// </summary>
        internal static string index_tree {
            get {
                return ResourceManager.GetString("index_tree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à package tree.
        /// </summary>
        internal static string index_treturn {
            get {
                return ResourceManager.GetString("index_treturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à From uploaded file.
        /// </summary>
        internal static string index_uploaded {
            get {
                return ResourceManager.GetString("index_uploaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Not a valid $1 directory.
        /// </summary>
        internal static string install_edir {
            get {
                return ResourceManager.GetString("install_edir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Not a valid $1 file.
        /// </summary>
        internal static string install_efile {
            get {
                return ResourceManager.GetString("install_efile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No local file given.
        /// </summary>
        internal static string install_elocal {
            get {
                return ResourceManager.GetString("install_elocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &apos;$1&apos; does not exist.
        /// </summary>
        internal static string install_elocal2 {
            get {
                return ResourceManager.GetString("install_elocal2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Failed to install package.
        /// </summary>
        internal static string install_err {
            get {
                return ResourceManager.GetString("install_err", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No package to install entered.
        /// </summary>
        internal static string install_eupdate {
            get {
                return ResourceManager.GetString("install_eupdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Your browser does not support file uploads.
        /// </summary>
        internal static string install_eupload {
            get {
                return ResourceManager.GetString("install_eupload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Incomprehensible URL &apos;$1&apos;.
        /// </summary>
        internal static string install_eurl {
            get {
                return ResourceManager.GetString("install_eurl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Not a valid compressed or gzipped $1 file.
        /// </summary>
        internal static string install_ezip {
            get {
                return ResourceManager.GetString("install_ezip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Install package.
        /// </summary>
        internal static string install_header {
            get {
                return ResourceManager.GetString("install_header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Install.
        /// </summary>
        internal static string install_ok {
            get {
                return ResourceManager.GetString("install_ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package(s) to be installed.
        /// </summary>
        internal static string install_packs {
            get {
                return ResourceManager.GetString("install_packs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Install Package.
        /// </summary>
        internal static string install_title {
            get {
                return ResourceManager.GetString("install_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Manage IPKG Package.
        /// </summary>
        internal static string IPKG_edit_title {
            get {
                return ResourceManager.GetString("IPKG-edit_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. install failed!.
        /// </summary>
        internal static string IPKG_failed {
            get {
                return ResourceManager.GetString("IPKG_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Browse IPKG ...
        /// </summary>
        internal static string IPKG_find {
            get {
                return ResourceManager.GetString("IPKG_find", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Manage IPKG Packages.
        /// </summary>
        internal static string IPKG_form {
            get {
                return ResourceManager.GetString("IPKG_form", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Manage IPKG Packages.
        /// </summary>
        internal static string IPKG_index_tree {
            get {
                return ResourceManager.GetString("IPKG_index_tree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package from IPKG.
        /// </summary>
        internal static string IPKG_input {
            get {
                return ResourceManager.GetString("IPKG_input", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Installing package(s) with command $1 ...
        /// </summary>
        internal static string IPKG_install {
            get {
                return ResourceManager.GetString("IPKG_install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Install.
        /// </summary>
        internal static string IPKG_install_package {
            get {
                return ResourceManager.GetString("IPKG_install_package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Install this package on your system.
        /// </summary>
        internal static string IPKG_install_packagedesc {
            get {
                return ResourceManager.GetString("IPKG_install_packagedesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à IPKG.
        /// </summary>
        internal static string IPKG_name {
            get {
                return ResourceManager.GetString("IPKG_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package is not installed.
        /// </summary>
        internal static string IPKG_not_installed {
            get {
                return ResourceManager.GetString("IPKG_not_installed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Nothing to upgrade.
        /// </summary>
        internal static string IPKG_noupgrade {
            get {
                return ResourceManager.GetString("IPKG_noupgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. install complete..
        /// </summary>
        internal static string IPKG_ok {
            get {
                return ResourceManager.GetString("IPKG_ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Updating IPKG Databse.
        /// </summary>
        internal static string IPKG_title_update {
            get {
                return ResourceManager.GetString("IPKG_title_update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgrading Installed Packages.
        /// </summary>
        internal static string IPKG_title_upgrade {
            get {
                return ResourceManager.GetString("IPKG_title_upgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Update IPKG Package Database.
        /// </summary>
        internal static string IPKG_update {
            get {
                return ResourceManager.GetString("IPKG_update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Update availible:.
        /// </summary>
        internal static string IPKG_update_avail {
            get {
                return ResourceManager.GetString("IPKG_update_avail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Running command $1 ...
        /// </summary>
        internal static string IPKG_updatedesc {
            get {
                return ResourceManager.GetString("IPKG_updatedesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgrade Installed IPKG Packages.
        /// </summary>
        internal static string IPKG_upgrade {
            get {
                return ResourceManager.GetString("IPKG_upgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. failed!.
        /// </summary>
        internal static string IPKG_upgradefailed {
            get {
                return ResourceManager.GetString("IPKG_upgradefailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. complete..
        /// </summary>
        internal static string IPKG_upgradeok {
            get {
                return ResourceManager.GetString("IPKG_upgradeok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Failed to open $1 : $2.
        /// </summary>
        internal static string list_eview {
            get {
                return ResourceManager.GetString("list_eview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Files for Package $1.
        /// </summary>
        internal static string list_files {
            get {
                return ResourceManager.GetString("list_files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Group.
        /// </summary>
        internal static string list_group {
            get {
                return ResourceManager.GetString("list_group", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à OK.
        /// </summary>
        internal static string list_ok {
            get {
                return ResourceManager.GetString("list_ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Owner.
        /// </summary>
        internal static string list_owner {
            get {
                return ResourceManager.GetString("list_owner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Path.
        /// </summary>
        internal static string list_path {
            get {
                return ResourceManager.GetString("list_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Size.
        /// </summary>
        internal static string list_size {
            get {
                return ResourceManager.GetString("list_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Status.
        /// </summary>
        internal static string list_status {
            get {
                return ResourceManager.GetString("list_status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package Files.
        /// </summary>
        internal static string list_title {
            get {
                return ResourceManager.GetString("list_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Type.
        /// </summary>
        internal static string list_type {
            get {
                return ResourceManager.GetString("list_type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à (View).
        /// </summary>
        internal static string list_view {
            get {
                return ResourceManager.GetString("list_view", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgraded $2 package(s) from APT.
        /// </summary>
        internal static string log_check_apt {
            get {
                return ResourceManager.GetString("log_check_apt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgraded package(s) $1 from APT.
        /// </summary>
        internal static string log_check_apt_l {
            get {
                return ResourceManager.GetString("log_check_apt_l", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgraded $2 package(s) from Redhat Network.
        /// </summary>
        internal static string log_check_rhn {
            get {
                return ResourceManager.GetString("log_check_rhn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgraded package(s) $1 from Redhat Network.
        /// </summary>
        internal static string log_check_rhn_l {
            get {
                return ResourceManager.GetString("log_check_rhn_l", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Uninstalled package $1.
        /// </summary>
        internal static string log_delete {
            get {
                return ResourceManager.GetString("log_delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Uninstalled $1 packages.
        /// </summary>
        internal static string log_deletes {
            get {
                return ResourceManager.GetString("log_deletes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Uninstalled packages $1.
        /// </summary>
        internal static string log_deletes_l {
            get {
                return ResourceManager.GetString("log_deletes_l", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Installed $2 package(s) from APT.
        /// </summary>
        internal static string log_install_apt {
            get {
                return ResourceManager.GetString("log_install_apt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Installed package(s) $1 from APT.
        /// </summary>
        internal static string log_install_apt_l {
            get {
                return ResourceManager.GetString("log_install_apt_l", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Installed package $1.
        /// </summary>
        internal static string log_install_package {
            get {
                return ResourceManager.GetString("log_install_package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Installed $2 package(s) from Redhat Network.
        /// </summary>
        internal static string log_install_rhn {
            get {
                return ResourceManager.GetString("log_install_rhn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Installed package(s) $1 from Redhat Network.
        /// </summary>
        internal static string log_install_rhn_l {
            get {
                return ResourceManager.GetString("log_install_rhn_l", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Installed $2 package(s) from YUM.
        /// </summary>
        internal static string log_install_yum {
            get {
                return ResourceManager.GetString("log_install_yum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Installed package(s) $1 from YUM.
        /// </summary>
        internal static string log_install_yum_l {
            get {
                return ResourceManager.GetString("log_install_yum_l", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Updated IPKG database.
        /// </summary>
        internal static string log_IPKG_update {
            get {
                return ResourceManager.GetString("log_IPKG_update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgraded installed IPKG packages.
        /// </summary>
        internal static string log_IPKG_upgrade {
            get {
                return ResourceManager.GetString("log_IPKG_upgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgraded $2 package(s) from YUM.
        /// </summary>
        internal static string log_upgrade_yum {
            get {
                return ResourceManager.GetString("log_upgrade_yum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgraded package(s) $1 from YUM.
        /// </summary>
        internal static string log_upgrade_yum_l {
            get {
                return ResourceManager.GetString("log_upgrade_yum_l", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Updated available URPMI packages.
        /// </summary>
        internal static string log_urpmi_update {
            get {
                return ResourceManager.GetString("log_urpmi_update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgraded installed URPMI packages.
        /// </summary>
        internal static string log_urpmi_upgrade {
            get {
                return ResourceManager.GetString("log_urpmi_upgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The $1 package can be automatically installed by Webmin using $2..
        /// </summary>
        internal static string missing_msg {
            get {
                return ResourceManager.GetString("missing_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Install Now.
        /// </summary>
        internal static string missing_now {
            get {
                return ResourceManager.GetString("missing_now", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Does not exist.
        /// </summary>
        internal static string msi_missing {
            get {
                return ResourceManager.GetString("msi_missing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Wrong size.
        /// </summary>
        internal static string msi_size {
            get {
                return ResourceManager.GetString("msi_size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Make new application available to.
        /// </summary>
        internal static string msi_users {
            get {
                return ResourceManager.GetString("msi_users", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Nobody.
        /// </summary>
        internal static string msi_users0 {
            get {
                return ResourceManager.GetString("msi_users0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Current user.
        /// </summary>
        internal static string msi_users1 {
            get {
                return ResourceManager.GetString("msi_users1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à All users.
        /// </summary>
        internal static string msi_users2 {
            get {
                return ResourceManager.GetString("msi_users2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. some packages failed.
        /// </summary>
        internal static string pkg_failed {
            get {
                return ResourceManager.GetString("pkg_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Search pkgng.
        /// </summary>
        internal static string pkg_find {
            get {
                return ResourceManager.GetString("pkg_find", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package from pkgng.
        /// </summary>
        internal static string pkg_input {
            get {
                return ResourceManager.GetString("pkg_input", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Installing FreeBSD packages $1 ...
        /// </summary>
        internal static string pkg_install {
            get {
                return ResourceManager.GetString("pkg_install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. install complete.
        /// </summary>
        internal static string pkg_ok {
            get {
                return ResourceManager.GetString("pkg_ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Root directory &apos;$1&apos; does not exist.
        /// </summary>
        internal static string pkgadd_eroot {
            get {
                return ResourceManager.GetString("pkgadd_eroot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à System V Package Manager.
        /// </summary>
        internal static string pkgadd_manager {
            get {
                return ResourceManager.GetString("pkgadd_manager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Root directory.
        /// </summary>
        internal static string pkgadd_root {
            get {
                return ResourceManager.GetString("pkgadd_root", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unknown.
        /// </summary>
        internal static string pkgadd_unknown {
            get {
                return ResourceManager.GetString("pkgadd_unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. some packages failed.
        /// </summary>
        internal static string pkgsrc_failed {
            get {
                return ResourceManager.GetString("pkgsrc_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Search pkgng.
        /// </summary>
        internal static string pkgsrc_find {
            get {
                return ResourceManager.GetString("pkgsrc_find", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package from pkgsrc.
        /// </summary>
        internal static string pkgsrc_input {
            get {
                return ResourceManager.GetString("pkgsrc_input", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Installing pkgsrc packages $1 ...
        /// </summary>
        internal static string pkgsrc_install {
            get {
                return ResourceManager.GetString("pkgsrc_install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. install complete.
        /// </summary>
        internal static string pkgsrc_ok {
            get {
                return ResourceManager.GetString("pkgsrc_ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Download Latest Snapshot.
        /// </summary>
        internal static string ports_apply {
            get {
                return ResourceManager.GetString("ports_apply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. some ports failed.
        /// </summary>
        internal static string ports_failed {
            get {
                return ResourceManager.GetString("ports_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Search Ports.
        /// </summary>
        internal static string ports_find {
            get {
                return ResourceManager.GetString("ports_find", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Update Ports Database.
        /// </summary>
        internal static string ports_form {
            get {
                return ResourceManager.GetString("ports_form", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package from ports.
        /// </summary>
        internal static string ports_input {
            get {
                return ResourceManager.GetString("ports_input", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Installing FreeBSD ports $1 ...
        /// </summary>
        internal static string ports_install {
            get {
                return ResourceManager.GetString("ports_install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à FreeBSD ports.
        /// </summary>
        internal static string ports_name {
            get {
                return ResourceManager.GetString("ports_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. install complete.
        /// </summary>
        internal static string ports_ok {
            get {
                return ResourceManager.GetString("ports_ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Running command $1 ...
        /// </summary>
        internal static string ports_running {
            get {
                return ResourceManager.GetString("ports_running", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Downloading Ports Snapshot.
        /// </summary>
        internal static string ports_upgrade {
            get {
                return ResourceManager.GetString("ports_upgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Save and Apply.
        /// </summary>
        internal static string rhn_apply {
            get {
                return ResourceManager.GetString("rhn_apply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Automatically check for updates?.
        /// </summary>
        internal static string rhn_auto {
            get {
                return ResourceManager.GetString("rhn_auto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Checking For Updates.
        /// </summary>
        internal static string rhn_check {
            get {
                return ResourceManager.GetString("rhn_check", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Checking for updated packages from the Redhat Network with command $1 ...
        /// </summary>
        internal static string rhn_checkdesc {
            get {
                return ResourceManager.GetString("rhn_checkdesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Missing or invalid interval.
        /// </summary>
        internal static string rhn_einterval {
            get {
                return ResourceManager.GetString("rhn_einterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Checking interval must be at least 120 seconds.
        /// </summary>
        internal static string rhn_einterval2 {
            get {
                return ResourceManager.GetString("rhn_einterval2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Missing or invalid proxy server.
        /// </summary>
        internal static string rhn_eproxy {
            get {
                return ResourceManager.GetString("rhn_eproxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Failed to save RHN options.
        /// </summary>
        internal static string rhn_err {
            get {
                return ResourceManager.GetString("rhn_err", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. install failed!.
        /// </summary>
        internal static string rhn_failed {
            get {
                return ResourceManager.GetString("rhn_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Search RHN ...
        /// </summary>
        internal static string rhn_find {
            get {
                return ResourceManager.GetString("rhn_find", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Redhat Network Options.
        /// </summary>
        internal static string rhn_form {
            get {
                return ResourceManager.GetString("rhn_form", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Automatic package upgrade options.
        /// </summary>
        internal static string rhn_header {
            get {
                return ResourceManager.GetString("rhn_header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package from Redhat Network.
        /// </summary>
        internal static string rhn_input {
            get {
                return ResourceManager.GetString("rhn_input", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Installing package(s) with command $1 ...
        /// </summary>
        internal static string rhn_install {
            get {
                return ResourceManager.GetString("rhn_install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Checking interval.
        /// </summary>
        internal static string rhn_interval {
            get {
                return ResourceManager.GetString("rhn_interval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Redhat Network.
        /// </summary>
        internal static string rhn_name {
            get {
                return ResourceManager.GetString("rhn_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. no packages updated..
        /// </summary>
        internal static string rhn_nocheck {
            get {
                return ResourceManager.GetString("rhn_nocheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Disabled.
        /// </summary>
        internal static string rhn_none {
            get {
                return ResourceManager.GetString("rhn_none", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No packages available for update..
        /// </summary>
        internal static string rhn_nonefound {
            get {
                return ResourceManager.GetString("rhn_nonefound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Save and Check Now.
        /// </summary>
        internal static string rhn_now {
            get {
                return ResourceManager.GetString("rhn_now", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. install complete..
        /// </summary>
        internal static string rhn_ok {
            get {
                return ResourceManager.GetString("rhn_ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package.
        /// </summary>
        internal static string rhn_pack {
            get {
                return ResourceManager.GetString("rhn_pack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Proxy server URL for downloading.
        /// </summary>
        internal static string rhn_proxy {
            get {
                return ResourceManager.GetString("rhn_proxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à minutes.
        /// </summary>
        internal static string rhn_secs {
            get {
                return ResourceManager.GetString("rhn_secs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Skip packages matching.
        /// </summary>
        internal static string rhn_skip {
            get {
                return ResourceManager.GetString("rhn_skip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select RHN package.
        /// </summary>
        internal static string rhn_title {
            get {
                return ResourceManager.GetString("rhn_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Version.
        /// </summary>
        internal static string rhn_version {
            get {
                return ResourceManager.GetString("rhn_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Failed $1 check.
        /// </summary>
        internal static string rpm_checkfail {
            get {
                return ResourceManager.GetString("rpm_checkfail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à device.
        /// </summary>
        internal static string rpm_dev {
            get {
                return ResourceManager.GetString("rpm_dev", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Root directory &apos;$1&apos; does not exist.
        /// </summary>
        internal static string rpm_eroot {
            get {
                return ResourceManager.GetString("rpm_eroot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à RPM $1 not found : $2.
        /// </summary>
        internal static string rpm_erpm {
            get {
                return ResourceManager.GetString("rpm_erpm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Install documentation?.
        /// </summary>
        internal static string rpm_excludedocs {
            get {
                return ResourceManager.GetString("rpm_excludedocs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Search rpmfind.net ...
        /// </summary>
        internal static string rpm_find {
            get {
                return ResourceManager.GetString("rpm_find", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Description.
        /// </summary>
        internal static string rpm_finddesc {
            get {
                return ResourceManager.GetString("rpm_finddesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Distribution.
        /// </summary>
        internal static string rpm_finddistro {
            get {
                return ResourceManager.GetString("rpm_finddistro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package filename.
        /// </summary>
        internal static string rpm_findrpm {
            get {
                return ResourceManager.GetString("rpm_findrpm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à file size.
        /// </summary>
        internal static string rpm_fsize {
            get {
                return ResourceManager.GetString("rpm_fsize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à group ownership.
        /// </summary>
        internal static string rpm_group {
            get {
                return ResourceManager.GetString("rpm_group", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Check filesystem sizes?.
        /// </summary>
        internal static string rpm_ignoresize {
            get {
                return ResourceManager.GetString("rpm_ignoresize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à MD5.
        /// </summary>
        internal static string rpm_md5 {
            get {
                return ResourceManager.GetString("rpm_md5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Missing.
        /// </summary>
        internal static string rpm_missing {
            get {
                return ResourceManager.GetString("rpm_missing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à modification time.
        /// </summary>
        internal static string rpm_mtime {
            get {
                return ResourceManager.GetString("rpm_mtime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Ignore dependencies?.
        /// </summary>
        internal static string rpm_nodeps {
            get {
                return ResourceManager.GetString("rpm_nodeps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No packages matching your search were found..
        /// </summary>
        internal static string rpm_none {
            get {
                return ResourceManager.GetString("rpm_none", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Execute install scripts?.
        /// </summary>
        internal static string rpm_noscripts {
            get {
                return ResourceManager.GetString("rpm_noscripts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Run triggered scripts?.
        /// </summary>
        internal static string rpm_notriggers {
            get {
                return ResourceManager.GetString("rpm_notriggers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Replace new version with old?.
        /// </summary>
        internal static string rpm_oldpackage {
            get {
                return ResourceManager.GetString("rpm_oldpackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à permissions.
        /// </summary>
        internal static string rpm_perm {
            get {
                return ResourceManager.GetString("rpm_perm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Overwrite files?.
        /// </summary>
        internal static string rpm_replacefiles {
            get {
                return ResourceManager.GetString("rpm_replacefiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Overwrite package?.
        /// </summary>
        internal static string rpm_replacepkgs {
            get {
                return ResourceManager.GetString("rpm_replacepkgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Root directory.
        /// </summary>
        internal static string rpm_root {
            get {
                return ResourceManager.GetString("rpm_root", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Search rpmfind.net for:.
        /// </summary>
        internal static string rpm_search {
            get {
                return ResourceManager.GetString("rpm_search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à symlink.
        /// </summary>
        internal static string rpm_sym {
            get {
                return ResourceManager.GetString("rpm_sym", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgrade package?.
        /// </summary>
        internal static string rpm_upgrade {
            get {
                return ResourceManager.GetString("rpm_upgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à user ownership.
        /// </summary>
        internal static string rpm_user {
            get {
                return ResourceManager.GetString("rpm_user", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Class.
        /// </summary>
        internal static string search_class {
            get {
                return ResourceManager.GetString("search_class", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Uninstall selected packages.
        /// </summary>
        internal static string search_delete {
            get {
                return ResourceManager.GetString("search_delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Description.
        /// </summary>
        internal static string search_desc {
            get {
                return ResourceManager.GetString("search_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à You did not enter anything to search for!.
        /// </summary>
        internal static string search_esearch {
            get {
                return ResourceManager.GetString("search_esearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Invert selection.
        /// </summary>
        internal static string search_invert {
            get {
                return ResourceManager.GetString("search_invert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Packages matching $1.
        /// </summary>
        internal static string search_match {
            get {
                return ResourceManager.GetString("search_match", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à No packages matched $1.
        /// </summary>
        internal static string search_nomatch {
            get {
                return ResourceManager.GetString("search_nomatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à None.
        /// </summary>
        internal static string search_none {
            get {
                return ResourceManager.GetString("search_none", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package.
        /// </summary>
        internal static string search_pack {
            get {
                return ResourceManager.GetString("search_pack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à search results.
        /// </summary>
        internal static string search_return {
            get {
                return ResourceManager.GetString("search_return", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Select all.
        /// </summary>
        internal static string search_selall {
            get {
                return ResourceManager.GetString("search_selall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package Search.
        /// </summary>
        internal static string search_title {
            get {
                return ResourceManager.GetString("search_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Missing Slackware packages directory $1.
        /// </summary>
        internal static string slack_edir {
            get {
                return ResourceManager.GetString("slack_edir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Missing or invalid root directory.
        /// </summary>
        internal static string slack_eroot {
            get {
                return ResourceManager.GetString("slack_eroot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Slackware Package Manager.
        /// </summary>
        internal static string slack_manager {
            get {
                return ResourceManager.GetString("slack_manager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Missing.
        /// </summary>
        internal static string slack_missing {
            get {
                return ResourceManager.GetString("slack_missing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Root directory.
        /// </summary>
        internal static string slack_root {
            get {
                return ResourceManager.GetString("slack_root", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Other.
        /// </summary>
        internal static string slack_unclass {
            get {
                return ResourceManager.GetString("slack_unclass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unknown.
        /// </summary>
        internal static string slack_unknown {
            get {
                return ResourceManager.GetString("slack_unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Directory.
        /// </summary>
        internal static string soft_dir {
            get {
                return ResourceManager.GetString("soft_dir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Editable File.
        /// </summary>
        internal static string soft_edit {
            get {
                return ResourceManager.GetString("soft_edit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Failed to load functions for $1 package system..
        /// </summary>
        internal static string soft_efunc {
            get {
                return ResourceManager.GetString("soft_efunc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à File is gzipped, but the gzip command was not found on your system..
        /// </summary>
        internal static string soft_egzip {
            get {
                return ResourceManager.GetString("soft_egzip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Failed to gunzip file : $1.
        /// </summary>
        internal static string soft_egzmsg {
            get {
                return ResourceManager.GetString("soft_egzmsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Failed to uncompress file : $1.
        /// </summary>
        internal static string soft_euncmsg {
            get {
                return ResourceManager.GetString("soft_euncmsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à File is compressed, but the &lt;tt&gt;uncompress&lt;/tt&gt; command was not found on your system..
        /// </summary>
        internal static string soft_euncompress {
            get {
                return ResourceManager.GetString("soft_euncompress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Hard Link.
        /// </summary>
        internal static string soft_hard {
            get {
                return ResourceManager.GetString("soft_hard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Regular File.
        /// </summary>
        internal static string soft_reg {
            get {
                return ResourceManager.GetString("soft_reg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Special File.
        /// </summary>
        internal static string soft_spec {
            get {
                return ResourceManager.GetString("soft_spec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Symbolic Link.
        /// </summary>
        internal static string soft_sym {
            get {
                return ResourceManager.GetString("soft_sym", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. failed!.
        /// </summary>
        internal static string uprmi_upgradefailed {
            get {
                return ResourceManager.GetString("uprmi_upgradefailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. install failed!.
        /// </summary>
        internal static string urpmi_failed {
            get {
                return ResourceManager.GetString("urpmi_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Browse URPMI ...
        /// </summary>
        internal static string urpmi_find {
            get {
                return ResourceManager.GetString("urpmi_find", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgrade All Packages.
        /// </summary>
        internal static string urpmi_form {
            get {
                return ResourceManager.GetString("urpmi_form", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package from URPMI.
        /// </summary>
        internal static string urpmi_input {
            get {
                return ResourceManager.GetString("urpmi_input", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Installing package(s) with command $1 ...
        /// </summary>
        internal static string urpmi_install {
            get {
                return ResourceManager.GetString("urpmi_install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à URPMI.
        /// </summary>
        internal static string urpmi_name {
            get {
                return ResourceManager.GetString("urpmi_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. install complete..
        /// </summary>
        internal static string urpmi_ok {
            get {
                return ResourceManager.GetString("urpmi_ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Updating Available Packages.
        /// </summary>
        internal static string urpmi_title_update {
            get {
                return ResourceManager.GetString("urpmi_title_update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgrading Installed Packages.
        /// </summary>
        internal static string urpmi_title_upgrade {
            get {
                return ResourceManager.GetString("urpmi_title_upgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Update Available URPMI Packages.
        /// </summary>
        internal static string urpmi_update {
            get {
                return ResourceManager.GetString("urpmi_update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Running command $1 ...
        /// </summary>
        internal static string urpmi_updatedesc {
            get {
                return ResourceManager.GetString("urpmi_updatedesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgrade Installed URPMI Packages To Latest Versions.
        /// </summary>
        internal static string urpmi_upgrade {
            get {
                return ResourceManager.GetString("urpmi_upgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. complete..
        /// </summary>
        internal static string urpmi_upgradeok {
            get {
                return ResourceManager.GetString("urpmi_upgradeok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgrade All Install Packages from YUM.
        /// </summary>
        internal static string yum_apply {
            get {
                return ResourceManager.GetString("yum_apply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Architecture.
        /// </summary>
        internal static string yum_arch {
            get {
                return ResourceManager.GetString("yum_arch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable repository:.
        /// </summary>
        internal static string yum_enable {
            get {
                return ResourceManager.GetString("yum_enable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. install failed!.
        /// </summary>
        internal static string yum_failed {
            get {
                return ResourceManager.GetString("yum_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Browse YUM ...
        /// </summary>
        internal static string yum_find {
            get {
                return ResourceManager.GetString("yum_find", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgrade All Packages.
        /// </summary>
        internal static string yum_form {
            get {
                return ResourceManager.GetString("yum_form", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package from YUM.
        /// </summary>
        internal static string yum_input {
            get {
                return ResourceManager.GetString("yum_input", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Installing package(s) with command $1 ...
        /// </summary>
        internal static string yum_install {
            get {
                return ResourceManager.GetString("yum_install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à YUM.
        /// </summary>
        internal static string yum_name {
            get {
                return ResourceManager.GetString("yum_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &amp;lt;None&amp;gt;.
        /// </summary>
        internal static string yum_none {
            get {
                return ResourceManager.GetString("yum_none", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. install complete..
        /// </summary>
        internal static string yum_ok {
            get {
                return ResourceManager.GetString("yum_ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package.
        /// </summary>
        internal static string yum_package {
            get {
                return ResourceManager.GetString("yum_package", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Repository file already exists!.
        /// </summary>
        internal static string yum_repo_efile {
            get {
                return ResourceManager.GetString("yum_repo_efile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à GPG cert file missing or does not exist.
        /// </summary>
        internal static string yum_repo_egpg {
            get {
                return ResourceManager.GetString("yum_repo_egpg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Missing or invalid repository ID - only letters and numbers allowed.
        /// </summary>
        internal static string yum_repo_eid {
            get {
                return ResourceManager.GetString("yum_repo_eid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Repository ID is already in use.
        /// </summary>
        internal static string yum_repo_eidclash {
            get {
                return ResourceManager.GetString("yum_repo_eidclash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Missing repository name.
        /// </summary>
        internal static string yum_repo_ename {
            get {
                return ResourceManager.GetString("yum_repo_ename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Missing or invalid repository URL.
        /// </summary>
        internal static string yum_repo_eurl {
            get {
                return ResourceManager.GetString("yum_repo_eurl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à GPG certificate file.
        /// </summary>
        internal static string yum_repo_gpg {
            get {
                return ResourceManager.GetString("yum_repo_gpg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Repository ID.
        /// </summary>
        internal static string yum_repo_id {
            get {
                return ResourceManager.GetString("yum_repo_id", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Repository description.
        /// </summary>
        internal static string yum_repo_name {
            get {
                return ResourceManager.GetString("yum_repo_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Not signed.
        /// </summary>
        internal static string yum_repo_none {
            get {
                return ResourceManager.GetString("yum_repo_none", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Package base URL.
        /// </summary>
        internal static string yum_repo_url {
            get {
                return ResourceManager.GetString("yum_repo_url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Source.
        /// </summary>
        internal static string yum_source {
            get {
                return ResourceManager.GetString("yum_source", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Browse YUM.
        /// </summary>
        internal static string yum_title {
            get {
                return ResourceManager.GetString("yum_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgrade All Packages.
        /// </summary>
        internal static string yum_upgrade {
            get {
                return ResourceManager.GetString("yum_upgrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Upgrading all packages with command $1 ...
        /// </summary>
        internal static string yum_upgradedesc {
            get {
                return ResourceManager.GetString("yum_upgradedesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. upgrade failed!.
        /// </summary>
        internal static string yum_upgradefailed {
            get {
                return ResourceManager.GetString("yum_upgradefailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à .. upgrade complete..
        /// </summary>
        internal static string yum_upgradeok {
            get {
                return ResourceManager.GetString("yum_upgradeok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Version.
        /// </summary>
        internal static string yum_version {
            get {
                return ResourceManager.GetString("yum_version", resourceCulture);
            }
        }
    }
}
