//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Doods.Openmediavault.Mobile.Std.Resources {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class openmediavault_tftp {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal openmediavault_tftp() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Doods.Openmediavault.Mobile.Std.Resources.openmediavault-tftp", typeof(openmediavault_tftp).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Allow new files.
        /// </summary>
        public static string AllowNewFiles {
            get {
                return ResourceManager.GetString("AllowNewFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Allow new files to be created..
        /// </summary>
        public static string AllowNewFilesToBeCreated_ {
            get {
                return ResourceManager.GetString("AllowNewFilesToBeCreated.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Blocksize.
        /// </summary>
        public static string Blocksize {
            get {
                return ResourceManager.GetString("Blocksize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à By default, only files that already exist are allowed to be uploaded..
        /// </summary>
        public static string ByDefault_OnlyFilesThatAlreadyExistAreAllowedToBeUploaded_ {
            get {
                return ResourceManager.GetString("ByDefault,OnlyFilesThatAlreadyExistAreAllowedToBeUploaded.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Determine the default timeout, in microseconds, before the first packet is retransmitted..
        /// </summary>
        public static string DetermineTheDefaultTimeout_InMicroseconds_BeforeTheFirstPacketIsRetransmitted_ {
            get {
                return ResourceManager.GetString("DetermineTheDefaultTimeout,InMicroseconds,BeforeTheFirstPacketIsRetransmitted.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Enable.
        /// </summary>
        public static string Enable {
            get {
                return ResourceManager.GetString("Enable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Extra options.
        /// </summary>
        public static string ExtraOptions {
            get {
                return ResourceManager.GetString("ExtraOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Please make sure that the shared folder is publicly writable if new files are allowed..
        /// </summary>
        public static string PleaseMakeSureThatTheSharedFolderIsPubliclyWritableIfNewFilesAreAllowed_ {
            get {
                return ResourceManager.GetString("PleaseMakeSureThatTheSharedFolderIsPubliclyWritableIfNewFilesAreAllowed.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Port.
        /// </summary>
        public static string Port {
            get {
                return ResourceManager.GetString("Port", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Port to listen on..
        /// </summary>
        public static string PortToListenOn_ {
            get {
                return ResourceManager.GetString("PortToListenOn.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Retry timeout.
        /// </summary>
        public static string RetryTimeout {
            get {
                return ResourceManager.GetString("RetryTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Settings.
        /// </summary>
        public static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Shared folder.
        /// </summary>
        public static string SharedFolder {
            get {
                return ResourceManager.GetString("SharedFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Specifies the maximum permitted block size. The permitted range for this parameter is from 512 to 65464..
        /// </summary>
        public static string SpecifiesTheMaximumPermittedBlockSize_ThePermittedRangeForThisParameterIsFrom512To65464_ {
            get {
                return ResourceManager.GetString("SpecifiesTheMaximumPermittedBlockSize.ThePermittedRangeForThisParameterIsFrom512T" +
                        "o65464.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à TFTP.
        /// </summary>
        public static string TFTP {
            get {
                return ResourceManager.GetString("TFTP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The location of the files to share..
        /// </summary>
        public static string TheLocationOfTheFilesToShare_ {
            get {
                return ResourceManager.GetString("TheLocationOfTheFilesToShare.", resourceCulture);
            }
        }
    }
}
