<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Active" xml:space="preserve">
    <value>Aktiv</value>
  </data>
  <data name="Available" xml:space="preserve">
    <value>Tillgänglig</value>
  </data>
  <data name="Capacity" xml:space="preserve">
    <value>Kapacitet</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Skapa</value>
  </data>
  <data name="CreatedLogicalVolume'{{Name}}'_Dot_" xml:space="preserve">
    <value>Skapade den logiska volymen '{{ name }}'.</value>
  </data>
  <data name="CreatedPhysicalVolume{{Devicefile}}_Dot_" xml:space="preserve">
    <value>Skapade den fysiska volymen {{ devicefile }}.</value>
  </data>
  <data name="CreatedSnapshotOfLogicalVolume'{{Devicefile}}'_Dot_" xml:space="preserve">
    <value>Skapade ögonblicksbild av den logiska volymen '{{ devicefile }}'.</value>
  </data>
  <data name="CreatedVolumeGroup'{{Name}}'_Dot_" xml:space="preserve">
    <value>Skapade volymgruppen '{{ name }}'.</value>
  </data>
  <data name="Device" xml:space="preserve">
    <value>Enhet</value>
  </data>
  <data name="Devices" xml:space="preserve">
    <value>Enheter</value>
  </data>
  <data name="DoYouReallyWantToCreateAPhysicalVolumeOn'{{Devicefile}}'?" xml:space="preserve">
    <value>Vill du verkligen skapa en fysisk volym på '{{ devicefile }}'?</value>
  </data>
  <data name="DoYouReallyWantToResizeTheSelectedPhysicalVolume?" xml:space="preserve">
    <value>Vill du verkligen ändra storlek på den valda fysiska volymen?</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Redigera</value>
  </data>
  <data name="Extend" xml:space="preserve">
    <value>Utöka</value>
  </data>
  <data name="ExtendedLogicalVolume'{{Devicefile}}'_Dot_" xml:space="preserve">
    <value>Utökade den logiska volymen '{{ devicefile }}'.</value>
  </data>
  <data name="ExtendedVolumeGroup'{{Devicefile}}'_Dot_" xml:space="preserve">
    <value>Utökade volymgruppen '{{ devicefile }}'.</value>
  </data>
  <data name="Free" xml:space="preserve">
    <value>Ledigt</value>
  </data>
  <data name="InvalidName" xml:space="preserve">
    <value>Ogiltigt namn</value>
  </data>
  <data name="LogicalVolumeManagement" xml:space="preserve">
    <value>Logisk volymhantering</value>
  </data>
  <data name="LogicalVolumes" xml:space="preserve">
    <value>Logiska volymer</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Namn</value>
  </data>
  <data name="PhysicalVolumes" xml:space="preserve">
    <value>Fysiska volymer</value>
  </data>
  <data name="Reduce" xml:space="preserve">
    <value>Minska</value>
  </data>
  <data name="ReducedVolumeGroup'{{Devicefile}}'_Dot_" xml:space="preserve">
    <value>Minskade volymgruppen '{{ devicefile }}'.</value>
  </data>
  <data name="Resize" xml:space="preserve">
    <value>Ändra storlek</value>
  </data>
  <data name="SelectADevice_Dot__Dot__Dot_" xml:space="preserve">
    <value>Välj en enhet ...</value>
  </data>
  <data name="SelectAVolumeGroup_Dot__Dot__Dot_" xml:space="preserve">
    <value>Välj en volymgrupp ...</value>
  </data>
  <data name="SelectDevices_Dot__Dot__Dot_" xml:space="preserve">
    <value>Välj enheter ...</value>
  </data>
  <data name="SelectTheDevicesUsedToExtendTheVolumeGroup_Dot_" xml:space="preserve">
    <value>Välj de enheter som används för att utöka volymgruppen.</value>
  </data>
  <data name="SelectTheDevicesUsedToReduceFromTheVolumeGroup_Dot_" xml:space="preserve">
    <value>Välj de enheter som används för att minska från volymgruppen.</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>Storlek</value>
  </data>
  <data name="Snapshot" xml:space="preserve">
    <value>Ögonblicksbild</value>
  </data>
  <data name="TheNameOfTheLogicalVolume_Dot_" xml:space="preserve">
    <value>Namnet på den logiska volymen.</value>
  </data>
  <data name="TheNameOfTheVolumeGroup_Dot_" xml:space="preserve">
    <value>Namnet på volymgruppen.</value>
  </data>
  <data name="ThePercentageOfTheTotalSpaceInTheVolumeGroupToAllocateForTheNewLogicalVolume_Dot_" xml:space="preserve">
    <value>Procentandelen av det totala utrymmet i volymgruppen som ska fördelas för den nya logiska volymen.</value>
  </data>
  <data name="ThePercentageOfTheTotalSpaceInTheVolumeGroupToUseByTheLogicalVolume_Dot_" xml:space="preserve">
    <value>Procentandelen av det totala utrymmet i den volymgrupp som ska användas av den logiska volymen.</value>
  </data>
  <data name="UpdatedLogicalVolume'{{Devicefile}}'_Dot_" xml:space="preserve">
    <value>Uppdaterade den logiska volymen '{{ devicefile }}'.</value>
  </data>
  <data name="UpdatedVolumeGroup'{{Devicefile}}'_Dot_" xml:space="preserve">
    <value>Uppdaterade volymgruppen '{{ devicefile }}'.</value>
  </data>
  <data name="Used" xml:space="preserve">
    <value>Använt</value>
  </data>
  <data name="VolumeGroup" xml:space="preserve">
    <value>Volymgrupp</value>
  </data>
  <data name="VolumeGroups" xml:space="preserve">
    <value>Volymgrupper</value>
  </data>
</root>