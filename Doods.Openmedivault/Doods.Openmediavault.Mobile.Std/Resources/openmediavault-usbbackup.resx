<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnEmailMessageWithTheCommandOutput(IfAnyProduced)IsSendToTheAdministrator_Dot_" xml:space="preserve">
    <value>An email message with the command output (if any produced) is send to the administrator.</value>
  </data>
  <data name="Archive" xml:space="preserve">
    <value>Archive</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="Compress" xml:space="preserve">
    <value>Compress</value>
  </data>
  <data name="CompressFileDataDuringTheTransfer_Dot_" xml:space="preserve">
    <value>Compress file data during the transfer.</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="CreatedUSBBackupJob_Dot_" xml:space="preserve">
    <value>Created USB backup job.</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteFilesOnTheReceivingSideThatDon'tExistOnSender_Dot_" xml:space="preserve">
    <value>Delete files on the receiving side that don't exist on sender.</value>
  </data>
  <data name="Device" xml:space="preserve">
    <value>Device</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EnableArchiveMode_Dot_" xml:space="preserve">
    <value>Enable archive mode.</value>
  </data>
  <data name="EnableThisOptionToKeepPartiallyTransferredFiles,OtherwiseTheyWillBeDeletedIfTheTransferIsInterrupted_Dot_" xml:space="preserve">
    <value>Enable this option to keep partially transferred files, otherwise they will be deleted if the transfer is interrupted.</value>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="ExternalStorageDevice" xml:space="preserve">
    <value>External Storage Device</value>
  </data>
  <data name="ExtraOptions" xml:space="preserve">
    <value>Extra options</value>
  </data>
  <data name="FromExternalStorageToSharedFolder" xml:space="preserve">
    <value>From external storage to shared folder</value>
  </data>
  <data name="FromSharedFolderToExternalStorage" xml:space="preserve">
    <value>From shared folder to external storage</value>
  </data>
  <data name="KeepPartiallyTransferredFiles" xml:space="preserve">
    <value>Keep partially transferred files</value>
  </data>
  <data name="Mode" xml:space="preserve">
    <value>Mode</value>
  </data>
  <data name="PleaseCheckThe&lt;AHref='Http://Www_Dot_Samba_Dot_Org/Ftp/Rsync/Rsync_Dot_Html'Target='Blank'&gt;ManualPage&lt;/A&gt;ForMoreDetails_Dot_" xml:space="preserve">
    <value>Please check the &lt;a href='http://www.samba.org/ftp/rsync/rsync.html' target='_blank'&gt;manual page&lt;/a&gt; for more details.</value>
  </data>
  <data name="PreserveAcls" xml:space="preserve">
    <value>Preserve ACLs</value>
  </data>
  <data name="PreserveExtendedAttributes" xml:space="preserve">
    <value>Preserve extended attributes</value>
  </data>
  <data name="PreserveGroup" xml:space="preserve">
    <value>Preserve group</value>
  </data>
  <data name="PreserveModificationTimes" xml:space="preserve">
    <value>Preserve modification times</value>
  </data>
  <data name="PreserveOwner" xml:space="preserve">
    <value>Preserve owner</value>
  </data>
  <data name="PreservePermissions" xml:space="preserve">
    <value>Preserve permissions</value>
  </data>
  <data name="Quiet" xml:space="preserve">
    <value>Quiet</value>
  </data>
  <data name="RecurseIntoDirectories_Dot_" xml:space="preserve">
    <value>Recurse into directories.</value>
  </data>
  <data name="Recursive" xml:space="preserve">
    <value>Recursive</value>
  </data>
  <data name="Run" xml:space="preserve">
    <value>Run</value>
  </data>
  <data name="RunBackupJob" xml:space="preserve">
    <value>Run backup job</value>
  </data>
  <data name="SelectADevice_Dot__Dot__Dot_" xml:space="preserve">
    <value>Select a device ...</value>
  </data>
  <data name="SendEmail" xml:space="preserve">
    <value>Send email</value>
  </data>
  <data name="SetTheDestinationPermissionsToBeTheSameAsTheSourcePermissions_Dot_" xml:space="preserve">
    <value>Set the destination permissions to be the same as the source permissions.</value>
  </data>
  <data name="SetTheGroupOfTheDestinationFileToBeTheSameAsTheSourceFile_Dot_" xml:space="preserve">
    <value>Set the group of the destination file to be the same as the source file.</value>
  </data>
  <data name="SetTheOwnerOfTheDestinationFileToBeTheSameAsTheSourceFile,ButOnlyIfTheReceivingRsyncIsBeingRunAsTheSuper-User_Dot_" xml:space="preserve">
    <value>Set the owner of the destination file to be the same as the source file, but only if the receiving rsync is being run as the super-user.</value>
  </data>
  <data name="SharedFolder" xml:space="preserve">
    <value>Shared folder</value>
  </data>
  <data name="SuppressNon-ErrorMessages_Dot_" xml:space="preserve">
    <value>Suppress non-error messages.</value>
  </data>
  <data name="SynchroniseFrom/ToDirectoryOnExternalStorageDevice" xml:space="preserve">
    <value>Synchronise from/to directory on external storage device</value>
  </data>
  <data name="TheExternalStorageDevice_Dot_PleaseMakeSureThatTheDeviceHasOnlyOneFileSystem_Dot_" xml:space="preserve">
    <value>The external storage device. Please make sure that the device has only one file system.</value>
  </data>
  <data name="TheSharedFolderContentIsSynchronisedFrom/ToTheRootOfTheExternalStorageDeviceIfThisOptionIsNotSet_Dot_TheNameOfTheDirectoryIsTakenFromTheSharedFolder_Dot_" xml:space="preserve">
    <value>The shared folder content is synchronised from/to the root of the external storage device if this option is not set. The name of the directory is taken from the shared folder.</value>
  </data>
  <data name="TheSharedFolderToSynchroniseWhenTheExternalStorageDeviceIsConnected_Dot_" xml:space="preserve">
    <value>The shared folder to synchronise when the external storage device is connected.</value>
  </data>
  <data name="TransferModificationTimesAlongWithTheFilesAndUpdateThemOnTheRemoteSystem_Dot_" xml:space="preserve">
    <value>Transfer modification times along with the files and update them on the remote system.</value>
  </data>
  <data name="USBBackup" xml:space="preserve">
    <value>USB Backup</value>
  </data>
  <data name="UpdateTheDestinationAclsToBeTheSameAsTheSourceAcls_Dot_" xml:space="preserve">
    <value>Update the destination ACLs to be the same as the source ACLs.</value>
  </data>
  <data name="UpdateTheDestinationExtendedAttributesToBeTheSameAsTheLocalOnes_Dot_" xml:space="preserve">
    <value>Update the destination extended attributes to be the same as the local ones.</value>
  </data>
  <data name="UpdatedUSBBackupJob_Dot_" xml:space="preserve">
    <value>Updated USB backup job.</value>
  </data>
  <data name="N/A" xml:space="preserve">
    <value>n/a</value>
  </data>
</root>