<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddBackupJob" xml:space="preserve">
    <value>添加备份任务</value>
  </data>
  <data name="Archive" xml:space="preserve">
    <value>归档</value>
  </data>
  <data name="BackupJobs" xml:space="preserve">
    <value>备份任务</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>注释</value>
  </data>
  <data name="Compress" xml:space="preserve">
    <value>压缩</value>
  </data>
  <data name="CompressFileDataDuringTheTransfer." xml:space="preserve">
    <value>传输时压缩数据。</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="DeleteFilesOnTheReceivingSideThatDon'tExistOnSender." xml:space="preserve">
    <value>删除接收端存在而发送端不存在的文件。</value>
  </data>
  <data name="Device" xml:space="preserve">
    <value>设备</value>
  </data>
  <data name="Done..." xml:space="preserve">
    <value>完成中 ...</value>
  </data>
  <data name="EditBackupJob" xml:space="preserve">
    <value>编辑备份任务</value>
  </data>
  <data name="Enable" xml:space="preserve">
    <value>启用</value>
  </data>
  <data name="EnableArchiveMode." xml:space="preserve">
    <value>启用归档模式。</value>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>已启用</value>
  </data>
  <data name="ExecuteBackupJob" xml:space="preserve">
    <value>执行备份任务</value>
  </data>
  <data name="ExternalStorageDevice" xml:space="preserve">
    <value>外部存储设备</value>
  </data>
  <data name="ExtraOptions" xml:space="preserve">
    <value>额外选项</value>
  </data>
  <data name="FromExternalStorageToSharedFolder" xml:space="preserve">
    <value>从外部存储设备到共享文件夹</value>
  </data>
  <data name="FromSharedFolderToExternalStorage" xml:space="preserve">
    <value>从共享文件夹到外部存储设备</value>
  </data>
  <data name="KeepPartiallyTransferredFiles" xml:space="preserve">
    <value>保留为传输完整的文件</value>
  </data>
  <data name="Mode" xml:space="preserve">
    <value>模式</value>
  </data>
  <data name="PreserveAcls" xml:space="preserve">
    <value>保存 ACLs</value>
  </data>
  <data name="PreserveExtendedAttributes" xml:space="preserve">
    <value>保存扩展属性</value>
  </data>
  <data name="PreserveGroup" xml:space="preserve">
    <value>保存用户组</value>
  </data>
  <data name="PreserveModificationTimes" xml:space="preserve">
    <value>保存修改时间</value>
  </data>
  <data name="PreserveOwner" xml:space="preserve">
    <value>保存拥有者</value>
  </data>
  <data name="PreservePermissions" xml:space="preserve">
    <value>保存权限</value>
  </data>
  <data name="Quiet" xml:space="preserve">
    <value>静默模式</value>
  </data>
  <data name="RecurseIntoDirectories." xml:space="preserve">
    <value>递归到目录。</value>
  </data>
  <data name="Recursive" xml:space="preserve">
    <value>递归</value>
  </data>
  <data name="Run" xml:space="preserve">
    <value>运行</value>
  </data>
  <data name="Scan" xml:space="preserve">
    <value>扫描</value>
  </data>
  <data name="SelectADevice..." xml:space="preserve">
    <value>选择设备 ...</value>
  </data>
  <data name="SendCommandOutputViaEmail." xml:space="preserve">
    <value>通过 Email 发送命令行输出的结果。</value>
  </data>
  <data name="SendEmail" xml:space="preserve">
    <value>发送 Email</value>
  </data>
  <data name="SharedFolder" xml:space="preserve">
    <value>共享文件夹</value>
  </data>
  <data name="SuppressNon-ErrorMessages." xml:space="preserve">
    <value>抑制非错误信息。</value>
  </data>
  <data name="SynchroniseFrom/ToDirectoryOnExternalStorageDevice." xml:space="preserve">
    <value>外部存储设备上要同步到/被 的目录。</value>
  </data>
  <data name="TheExternalStorageDevice." xml:space="preserve">
    <value>外部存储设备。</value>
  </data>
  <data name="USBBackup" xml:space="preserve">
    <value>USB 备份</value>
  </data>
  <data name="UpdateTheDestinationAclsToBeTheSameAsTheSourceAcls." xml:space="preserve">
    <value>更新目标 ACLs 和源 ACLs 一致。</value>
  </data>
  <data name="N/A" xml:space="preserve">
    <value>n/a</value>
  </data>
</root>