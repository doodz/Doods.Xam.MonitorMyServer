<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddOn-AccessScan" xml:space="preserve">
    <value>アクセス時のスキャンを追加</value>
  </data>
  <data name="AddScheduledJob" xml:space="preserve">
    <value>スケジュールされたJobを追加</value>
  </data>
  <data name="AlgorithmicDetection" xml:space="preserve">
    <value>アルゴリズム的検出</value>
  </data>
  <data name="Antivirus" xml:space="preserve">
    <value>アンチウィルス</value>
  </data>
  <data name="BeVerbose." xml:space="preserve">
    <value>詳細に。</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>コメント</value>
  </data>
  <data name="DatabaseChecks" xml:space="preserve">
    <value>データベースチェック</value>
  </data>
  <data name="Date&amp;Time" xml:space="preserve">
    <value>日付 &amp; 時刻</value>
  </data>
  <data name="DayOfMonth" xml:space="preserve">
    <value>月の日</value>
  </data>
  <data name="DayOfWeek" xml:space="preserve">
    <value>曜日</value>
  </data>
  <data name="DetectPUA" xml:space="preserve">
    <value>PUAの検出</value>
  </data>
  <data name="DetectBrokenExecutables" xml:space="preserve">
    <value>壊れた実行ファイルを検出</value>
  </data>
  <data name="Done..." xml:space="preserve">
    <value>完了 ...</value>
  </data>
  <data name="EditOn-AccessScan" xml:space="preserve">
    <value>アクセス時のスキャンを編集</value>
  </data>
  <data name="EditScheduledJob" xml:space="preserve">
    <value>スケジュールされたJobを編集</value>
  </data>
  <data name="Enable" xml:space="preserve">
    <value>有効</value>
  </data>
  <data name="EnableHTMLDetectionAndNormalisation." xml:space="preserve">
    <value>HTMLの検出および正規化を有効にします。</value>
  </data>
  <data name="EnableArchiveScanning." xml:space="preserve">
    <value>圧縮ファイルのスキャンを有効にします。</value>
  </data>
  <data name="EnableOn-AccessVirusScanning" xml:space="preserve">
    <value>オン-アクセスのウィルススキャンを有効にします。</value>
  </data>
  <data name="EnableScanningOfELFFiles." xml:space="preserve">
    <value>ELFファイルのスキャンを有効にします。</value>
  </data>
  <data name="EnableScanningWithinPDFFiles." xml:space="preserve">
    <value>PDFファイル内のスキャンを有効にします。</value>
  </data>
  <data name="EnableTheAlgorithmicDetection." xml:space="preserve">
    <value>アルゴリズム的検出を有効にします。</value>
  </data>
  <data name="EnableTheDetectionOfBrokenExecutables(BothPEAndELF)." xml:space="preserve">
    <value>壊れた実行ファイル（PEとELF両方）の検出を有効にします。</value>
  </data>
  <data name="EnableTheDetectionOfPossiblyUnwantedApplications." xml:space="preserve">
    <value>おそらく不要なアプリケーションの検出を有効にします。</value>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>有効</value>
  </data>
  <data name="EveryNDayOfMonth" xml:space="preserve">
    <value>毎月N日</value>
  </data>
  <data name="EveryNHour" xml:space="preserve">
    <value>N時間ごと</value>
  </data>
  <data name="EveryNMinute" xml:space="preserve">
    <value>N分ごと</value>
  </data>
  <data name="ExecuteScheduledJob" xml:space="preserve">
    <value>スケジュールされたJobを実行</value>
  </data>
  <data name="ExtraOptions" xml:space="preserve">
    <value>その他のオプション</value>
  </data>
  <data name="FollowDirectorySymlinks" xml:space="preserve">
    <value>ディレクトリのシンボリックリンクをたどる</value>
  </data>
  <data name="FollowDirectorySymlinks." xml:space="preserve">
    <value>ディレクトリのシンボリックリンクをたどります。</value>
  </data>
  <data name="FollowFileSymlinks" xml:space="preserve">
    <value>ファイルのシンボリックリンクをたどる</value>
  </data>
  <data name="FollowRegularFileSymlinks." xml:space="preserve">
    <value>通常ファイルのシンボリックリンクをたどります。</value>
  </data>
  <data name="GeneralSettings" xml:space="preserve">
    <value>一般設定</value>
  </data>
  <data name="Hour" xml:space="preserve">
    <value>時</value>
  </data>
  <data name="InfectedFiles" xml:space="preserve">
    <value>感染したファイル</value>
  </data>
  <data name="LogCleanFiles" xml:space="preserve">
    <value>ログファイルの整形</value>
  </data>
  <data name="LogCleanFiles.ThisDrasticallyIncreasesTheLogSize." xml:space="preserve">
    <value>ログファイルを整形します。ログファイルのサイズが劇的に大きくなります。</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>メッセージ</value>
  </data>
  <data name="Minute" xml:space="preserve">
    <value>分</value>
  </data>
  <data name="MonitorTheSharedFolderAndScanNewOrModifiedFiles." xml:space="preserve">
    <value>共有フォルダを監視し、新規または変更されたファイルをスキャンします。</value>
  </data>
  <data name="Month" xml:space="preserve">
    <value>月</value>
  </data>
  <data name="Multiscan" xml:space="preserve">
    <value>マルチスキャン</value>
  </data>
  <data name="NumberOfDatabaseUpdateChecksPerDay.SetTo0ToDisable." xml:space="preserve">
    <value>データベースの更新を1日に何回確認するかを設定します。0に設定すると確認しません。</value>
  </data>
  <data name="OnAccessScans" xml:space="preserve">
    <value>アクセス時のスキャン</value>
  </data>
  <data name="On-Access" xml:space="preserve">
    <value>オン-アクセス</value>
  </data>
  <data name="PerformADeeperAnalysisOfExecutableFiles." xml:space="preserve">
    <value>実行可能ファイルのより詳細な分析を行う。</value>
  </data>
  <data name="Quarantine" xml:space="preserve">
    <value>検疫</value>
  </data>
  <data name="Run" xml:space="preserve">
    <value>実行</value>
  </data>
  <data name="ScanELF" xml:space="preserve">
    <value>ELFのスキャン</value>
  </data>
  <data name="ScanHTML" xml:space="preserve">
    <value>HTMLのスキャン</value>
  </data>
  <data name="ScanOLE2" xml:space="preserve">
    <value>OLE2のスキャン</value>
  </data>
  <data name="ScanPDF" xml:space="preserve">
    <value>PDFのスキャン</value>
  </data>
  <data name="ScanPortableExecutable" xml:space="preserve">
    <value>Portable Executable(PE)のスキャン</value>
  </data>
  <data name="ScanArchives" xml:space="preserve">
    <value>圧縮ファイルのスキャン</value>
  </data>
  <data name="ScanTheDirectoryContentsInParallelUsingAvailableThreads." xml:space="preserve">
    <value>利用可能なスレッドを使用しディレクトリを並行でスキャンします。</value>
  </data>
  <data name="ScheduledJobs" xml:space="preserve">
    <value>スケジュールされたジョブ</value>
  </data>
  <data name="SendCommandOutputViaEmail" xml:space="preserve">
    <value>コマンドの出力を電子メールで送信</value>
  </data>
  <data name="SendEmail" xml:space="preserve">
    <value>電子メールの送信</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="SharedFolder" xml:space="preserve">
    <value>共有フォルダ</value>
  </data>
  <data name="TheLocationOfTheFilesToScanOn-Access." xml:space="preserve">
    <value>アクセス時のスキャンを行うファイルの場所。</value>
  </data>
  <data name="TheLocationOfTheFilesToScan." xml:space="preserve">
    <value>スキャンするファイルの場所。</value>
  </data>
  <data name="TheLocationWhichIsUsedAsQuarantine." xml:space="preserve">
    <value>検疫として使用されている場所。</value>
  </data>
  <data name="TheOption,HowToHandleInfectedFiles." xml:space="preserve">
    <value>感染したファイルをどのように処理するかのオプション。</value>
  </data>
  <data name="Verbose" xml:space="preserve">
    <value>詳細</value>
  </data>
  <data name="N/A" xml:space="preserve">
    <value>n/a</value>
  </data>
</root>