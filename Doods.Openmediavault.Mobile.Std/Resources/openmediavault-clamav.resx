<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddOn-AccessScan" xml:space="preserve">
    <value>Add on-access scan</value>
  </data>
  <data name="AddScheduledJob" xml:space="preserve">
    <value>Add scheduled job</value>
  </data>
  <data name="AlgorithmicDetection" xml:space="preserve">
    <value>Algorithmic detection</value>
  </data>
  <data name="AnEmailMessageWithTheCommandOutput(IfAnyProduced)IsSendToTheAdministrator." xml:space="preserve">
    <value>An email message with the command output (if any produced) is send to the administrator.</value>
  </data>
  <data name="Antivirus" xml:space="preserve">
    <value>Antivirus</value>
  </data>
  <data name="BeVerbose." xml:space="preserve">
    <value>Be verbose.</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="DatabaseChecks" xml:space="preserve">
    <value>Database checks</value>
  </data>
  <data name="Date&amp;Time" xml:space="preserve">
    <value>Date &amp; Time</value>
  </data>
  <data name="DayOfMonth" xml:space="preserve">
    <value>Day of month</value>
  </data>
  <data name="DayOfWeek" xml:space="preserve">
    <value>Day of week</value>
  </data>
  <data name="DetectPUA" xml:space="preserve">
    <value>Detect PUA</value>
  </data>
  <data name="DetectBrokenExecutables" xml:space="preserve">
    <value>Detect broken executables</value>
  </data>
  <data name="Done..." xml:space="preserve">
    <value>Done ...</value>
  </data>
  <data name="EditOn-AccessScan" xml:space="preserve">
    <value>Edit on-access scan</value>
  </data>
  <data name="EditScheduledJob" xml:space="preserve">
    <value>Edit scheduled job</value>
  </data>
  <data name="Enable" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="EnableHTMLDetectionAndNormalisation." xml:space="preserve">
    <value>Enable HTML detection and normalisation.</value>
  </data>
  <data name="EnableArchiveScanning." xml:space="preserve">
    <value>Enable archive scanning.</value>
  </data>
  <data name="EnableOn-AccessVirusScanning" xml:space="preserve">
    <value>Enable on-access virus scanning</value>
  </data>
  <data name="EnableScanningOfELFFiles." xml:space="preserve">
    <value>Enable scanning of ELF files.</value>
  </data>
  <data name="EnableScanningOfOLE2Files,SuchAsMicrosoftOfficeDocumentsAnd.MsiFiles." xml:space="preserve">
    <value>Enable scanning of OLE2 files, such as Microsoft Office documents and .msi files.</value>
  </data>
  <data name="EnableScanningWithinPDFFiles." xml:space="preserve">
    <value>Enable scanning within PDF files.</value>
  </data>
  <data name="EnableTheAlgorithmicDetection." xml:space="preserve">
    <value>Enable the algorithmic detection.</value>
  </data>
  <data name="EnableTheDetectionOfBrokenExecutables(BothPEAndELF)." xml:space="preserve">
    <value>Enable the detection of broken executables (both PE and ELF).</value>
  </data>
  <data name="EnableTheDetectionOfPossiblyUnwantedApplications." xml:space="preserve">
    <value>Enable the detection of possibly unwanted applications.</value>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="EveryNDayOfMonth" xml:space="preserve">
    <value>Every N day of month</value>
  </data>
  <data name="EveryNHour" xml:space="preserve">
    <value>Every N hour</value>
  </data>
  <data name="EveryNMinute" xml:space="preserve">
    <value>Every N minute</value>
  </data>
  <data name="ExecuteScheduledJob" xml:space="preserve">
    <value>Execute scheduled job</value>
  </data>
  <data name="ExtraOptions" xml:space="preserve">
    <value>Extra options</value>
  </data>
  <data name="FollowDirectorySymlinks" xml:space="preserve">
    <value>Follow directory symlinks</value>
  </data>
  <data name="FollowDirectorySymlinks." xml:space="preserve">
    <value>Follow directory symlinks.</value>
  </data>
  <data name="FollowFileSymlinks" xml:space="preserve">
    <value>Follow file symlinks</value>
  </data>
  <data name="FollowRegularFileSymlinks." xml:space="preserve">
    <value>Follow regular file symlinks.</value>
  </data>
  <data name="GeneralSettings" xml:space="preserve">
    <value>General settings</value>
  </data>
  <data name="Hour" xml:space="preserve">
    <value>Hour</value>
  </data>
  <data name="InfectedFiles" xml:space="preserve">
    <value>Infected files</value>
  </data>
  <data name="LogCleanFiles" xml:space="preserve">
    <value>Log clean files</value>
  </data>
  <data name="LogCleanFiles.ThisDrasticallyIncreasesTheLogSize." xml:space="preserve">
    <value>Log clean files. This drastically increases the log size.</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="Minute" xml:space="preserve">
    <value>Minute</value>
  </data>
  <data name="MonitorTheSharedFolderAndScanNewOrModifiedFiles." xml:space="preserve">
    <value>Monitor the shared folder and scan new or modified files.</value>
  </data>
  <data name="Month" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="Multiscan" xml:space="preserve">
    <value>Multiscan</value>
  </data>
  <data name="NumberOfDatabaseUpdateChecksPerDay.SetTo0ToDisable." xml:space="preserve">
    <value>Number of database update checks per day. Set to 0 to disable.</value>
  </data>
  <data name="OnAccessScans" xml:space="preserve">
    <value>On Access Scans</value>
  </data>
  <data name="On-Access" xml:space="preserve">
    <value>On-access</value>
  </data>
  <data name="PerformADeeperAnalysisOfExecutableFiles." xml:space="preserve">
    <value>Perform a deeper analysis of executable files.</value>
  </data>
  <data name="PleaseCheckThe&lt;AHref='Https://Github.Com/Vrtadmin/Clamav-Faq/Raw/Master/Manual/Clamdoc.Pdf'Target='Blank'&gt;ManualPage&lt;/A&gt;ForMoreDetails." xml:space="preserve">
    <value>Please check the &lt;a href='https://github.com/vrtadmin/clamav-faq/raw/master/manual/clamdoc.pdf' target='_blank'&gt;manual page&lt;/a&gt; for more details.</value>
  </data>
  <data name="Quarantine" xml:space="preserve">
    <value>Quarantine</value>
  </data>
  <data name="Run" xml:space="preserve">
    <value>Run</value>
  </data>
  <data name="ScanELF" xml:space="preserve">
    <value>Scan ELF</value>
  </data>
  <data name="ScanHTML" xml:space="preserve">
    <value>Scan HTML</value>
  </data>
  <data name="ScanOLE2" xml:space="preserve">
    <value>Scan OLE2</value>
  </data>
  <data name="ScanPDF" xml:space="preserve">
    <value>Scan PDF</value>
  </data>
  <data name="ScanPortableExecutable" xml:space="preserve">
    <value>Scan Portable Executable</value>
  </data>
  <data name="ScanArchives" xml:space="preserve">
    <value>Scan archives</value>
  </data>
  <data name="ScanTheDirectoryContentsInParallelUsingAvailableThreads." xml:space="preserve">
    <value>Scan the directory contents in parallel using available threads.</value>
  </data>
  <data name="ScheduledJobs" xml:space="preserve">
    <value>Scheduled Jobs</value>
  </data>
  <data name="SendCommandOutputViaEmail" xml:space="preserve">
    <value>Send command output via email</value>
  </data>
  <data name="SendEmail" xml:space="preserve">
    <value>Send email</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SharedFolder" xml:space="preserve">
    <value>Shared folder</value>
  </data>
  <data name="TheLocationOfTheFilesToScanOn-Access." xml:space="preserve">
    <value>The location of the files to scan on-access.</value>
  </data>
  <data name="TheLocationOfTheFilesToScan." xml:space="preserve">
    <value>The location of the files to scan.</value>
  </data>
  <data name="TheLocationWhichIsUsedAsQuarantine." xml:space="preserve">
    <value>The location which is used as quarantine.</value>
  </data>
  <data name="TheOption,HowToHandleInfectedFiles." xml:space="preserve">
    <value>The option, how to handle infected files.</value>
  </data>
  <data name="Verbose" xml:space="preserve">
    <value>Verbose</value>
  </data>
  <data name="N/A" xml:space="preserve">
    <value>n/a</value>
  </data>
</root>