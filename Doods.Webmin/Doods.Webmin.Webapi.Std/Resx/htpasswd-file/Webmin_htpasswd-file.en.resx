<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Manage HTPasswd File</value>
  </data>
  <data name="index_header" xml:space="preserve">
    <value>Password file users</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>No users exist in the configured password file.</value>
  </data>
  <data name="index_add" xml:space="preserve">
    <value>Add a new user to the password file.</value>
  </data>
  <data name="index_file" xml:space="preserve">
    <value>Users in Password File $1</value>
  </data>
  <data name="index_sync" xml:space="preserve">
    <value>Unix User Synchronization</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>user list</value>
  </data>
  <data name="index_synccreate" xml:space="preserve">
    <value>Add a user when a Unix user is created?</value>
  </data>
  <data name="index_syncmodify" xml:space="preserve">
    <value>Re-name or change the password of a user when the corresponding Unix user is modified?</value>
  </data>
  <data name="index_syncdelete" xml:space="preserve">
    <value>Delete a user when the corresponding Unix user is deleted?</value>
  </data>
  <data name="index_ssave" xml:space="preserve">
    <value>Save and Apply</value>
  </data>
  <data name="edit_title1" xml:space="preserve">
    <value>Create User</value>
  </data>
  <data name="edit_title2" xml:space="preserve">
    <value>Edit User</value>
  </data>
  <data name="edit_header" xml:space="preserve">
    <value>Password file user details</value>
  </data>
  <data name="edit_user" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="edit_enabled" xml:space="preserve">
    <value>Enabled?</value>
  </data>
  <data name="edit_pass" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="edit_pass1" xml:space="preserve">
    <value>Leave unchanged</value>
  </data>
  <data name="edit_pass0" xml:space="preserve">
    <value>Set to</value>
  </data>
  <data name="edit_passfrom" xml:space="preserve">
    <value>Change from</value>
  </data>
  <data name="edit_passto" xml:space="preserve">
    <value>to new password</value>
  </data>
  <data name="edit_single" xml:space="preserve">
    <value>User to change</value>
  </data>
  <data name="edit_return" xml:space="preserve">
    <value>password change form</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>Failed to save user</value>
  </data>
  <data name="save_euser1" xml:space="preserve">
    <value>Missing username</value>
  </data>
  <data name="save_euser2" xml:space="preserve">
    <value>Username cannot contain the : character</value>
  </data>
  <data name="save_epass" xml:space="preserve">
    <value>Password cannot contain the : character</value>
  </data>
  <data name="save_eclash" xml:space="preserve">
    <value>A user with the same name already exists</value>
  </data>
  <data name="save_eoldpass" xml:space="preserve">
    <value>Old password is not correct</value>
  </data>
  <data name="save_ecreate" xml:space="preserve">
    <value>You are not allowed to create users</value>
  </data>
  <data name="save_edelete" xml:space="preserve">
    <value>You are not allowed to delete users</value>
  </data>
  <data name="save_euser" xml:space="preserve">
    <value>User does not exist</value>
  </data>
  <data name="save_title" xml:space="preserve">
    <value>User Saved</value>
  </data>
  <data name="save_done" xml:space="preserve">
    <value>The user $1 has been updated.</value>
  </data>
  <data name="acl_repeat" xml:space="preserve">
    <value>Must enter old password when changing?</value>
  </data>
  <data name="acl_create" xml:space="preserve">
    <value>Can create new users?</value>
  </data>
  <data name="acl_rename" xml:space="preserve">
    <value>Can rename users?</value>
  </data>
  <data name="acl_delete" xml:space="preserve">
    <value>Can delete users?</value>
  </data>
  <data name="acl_sync" xml:space="preserve">
    <value>Can configure synchronization?</value>
  </data>
  <data name="acl_enable" xml:space="preserve">
    <value>Can enable and disable users?</value>
  </data>
  <data name="acl_single" xml:space="preserve">
    <value>Skip user list and go direct to password change form?</value>
  </data>
  <data name="sync_ecannot" xml:space="preserve">
    <value>You are not allowed to configure synchronization</value>
  </data>
  <data name="log_sync" xml:space="preserve">
    <value>Changed synchronization options</value>
  </data>
  <data name="log_create" xml:space="preserve">
    <value>Created user $1</value>
  </data>
  <data name="log_delete" xml:space="preserve">
    <value>Deleted user $1</value>
  </data>
  <data name="log_modify" xml:space="preserve">
    <value>Modified user $1</value>
  </data>
  <data name="__norefs" xml:space="preserve">
    <value>1</value>
  </data>
</root>