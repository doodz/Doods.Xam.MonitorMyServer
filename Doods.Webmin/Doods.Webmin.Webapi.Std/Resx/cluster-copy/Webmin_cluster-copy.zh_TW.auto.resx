<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>群集複製文件</value>
  </data>
  <data name="index_add" xml:space="preserve">
    <value>創建一個新的計劃文件副本。</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>尚未定義計劃的文件副本。</value>
  </data>
  <data name="index_servers" xml:space="preserve">
    <value>複製到服務器</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>集群副本列表</value>
  </data>
  <data name="index_more" xml:space="preserve">
    <value>還有 $1 ..</value>
  </data>
  <data name="index_run" xml:space="preserve">
    <value>現在跑步 ..</value>
  </data>
  <data name="index_files" xml:space="preserve">
    <value>要復制的文件</value>
  </data>
  <data name="index_sched" xml:space="preserve">
    <value>預定的？</value>
  </data>
  <data name="index_when" xml:space="preserve">
    <value>是， $1</value>
  </data>
  <data name="index_act" xml:space="preserve">
    <value>行動</value>
  </data>
  <data name="index_exec" xml:space="preserve">
    <value>執行</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>刪除選定的副本</value>
  </data>
  <data name="edit_title" xml:space="preserve">
    <value>編輯集群副本</value>
  </data>
  <data name="create_title" xml:space="preserve">
    <value>創建群集副本</value>
  </data>
  <data name="edit_header" xml:space="preserve">
    <value>集群副本詳細信息</value>
  </data>
  <data name="edit_files" xml:space="preserve">
    <value>要復制的文件</value>
  </data>
  <data name="edit_dest" xml:space="preserve">
    <value>目標目錄</value>
  </data>
  <data name="edit_cmd" xml:space="preserve">
    <value>複製後運行的命令</value>
  </data>
  <data name="edit_before" xml:space="preserve">
    <value>複製前運行的命令</value>
  </data>
  <data name="edit_remote" xml:space="preserve">
    <value>在遠程服務器上</value>
  </data>
  <data name="edit_dmode0" xml:space="preserve">
    <value>複製目錄下的完整路徑</value>
  </data>
  <data name="edit_dmode1" xml:space="preserve">
    <value>複製到此目錄</value>
  </data>
  <data name="edit_servers" xml:space="preserve">
    <value>複製到服務器</value>
  </data>
  <data name="edit_group" xml:space="preserve">
    <value>$1的成員</value>
  </data>
  <data name="edit_this" xml:space="preserve">
    <value>這個服務器</value>
  </data>
  <data name="edit_all" xml:space="preserve">
    <value>&amp;lt;所有主機&amp;gt;</value>
  </data>
  <data name="edit_sched" xml:space="preserve">
    <value>如期復制嗎？</value>
  </data>
  <data name="edit_schedyes" xml:space="preserve">
    <value>是的，有時在下面選擇 ..</value>
  </data>
  <data name="edit_run" xml:space="preserve">
    <value>立即復制</value>
  </data>
  <data name="edit_return" xml:space="preserve">
    <value>集群副本</value>
  </data>
  <data name="edit_email" xml:space="preserve">
    <value>電子郵件輸出到</value>
  </data>
  <data name="edit_none" xml:space="preserve">
    <value>沒有人</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>保存集群Cron作業失敗</value>
  </data>
  <data name="save_efiles" xml:space="preserve">
    <value>沒有輸入要復制的文件</value>
  </data>
  <data name="save_edest" xml:space="preserve">
    <value>缺少目標目錄</value>
  </data>
  <data name="save_eservers" xml:space="preserve">
    <value>沒有要復製到輸入的服務器</value>
  </data>
  <data name="save_efile" xml:space="preserve">
    <value>複製“$1”的文件不是絕對路徑</value>
  </data>
  <data name="save_eemail" xml:space="preserve">
    <value>電子郵件地址丟失或無效</value>
  </data>
  <data name="exec_title" xml:space="preserve">
    <value>複製文件</value>
  </data>
  <data name="exec_files1" xml:space="preserve">
    <value>將 $1文件複製到選定的服務器 $2 ..</value>
  </data>
  <data name="exec_files2" xml:space="preserve">
    <value>將 $1複製到選定的服務器 $2 ..</value>
  </data>
  <data name="exec_under" xml:space="preserve">
    <value>（在目錄 $1下）</value>
  </data>
  <data name="exec_failed" xml:space="preserve">
    <value>無法複製到 $1 : $2</value>
  </data>
  <data name="exec_success" xml:space="preserve">
    <value>將以下文件複製到 $1：</value>
  </data>
  <data name="exec_made" xml:space="preserve">
    <value>在 $1上創建了以下目錄：</value>
  </data>
  <data name="exec_nohosts" xml:space="preserve">
    <value>沒有選擇要在其上運行的主機，或者選定的組不包含任何可用的主機。</value>
  </data>
  <data name="exec_nothing" xml:space="preserve">
    <value>沒有文件成功複製到 $1。</value>
  </data>
  <data name="exec_not" xml:space="preserve">
    <value>無法將以下文件複製到 $1：</value>
  </data>
  <data name="exec_cmd" xml:space="preserve">
    <value>$1上的複制後命令輸出：</value>
  </data>
  <data name="exec_before" xml:space="preserve">
    <value>$1上的複制前命令輸出：</value>
  </data>
  <data name="exec_on" xml:space="preserve">
    <value>無法在 $1上運行： $2</value>
  </data>
  <data name="log_create" xml:space="preserve">
    <value>已創建從 $1到 $2服務器的副本</value>
  </data>
  <data name="log_modify" xml:space="preserve">
    <value>已將 $1的副本複製到 $2服務器</value>
  </data>
  <data name="log_delete" xml:space="preserve">
    <value>已將 $1的副本刪除到 $2服務器</value>
  </data>
  <data name="log_exec" xml:space="preserve">
    <value>已將 $1服務器複製到 $2服務器</value>
  </data>
  <data name="log_deletes" xml:space="preserve">
    <value>已刪除 $1份</value>
  </data>
  <data name="email_subject_succeeded" xml:space="preserve">
    <value>$1的集群副本成功</value>
  </data>
  <data name="email_subject_failed" xml:space="preserve">
    <value>$1的群集副本失敗</value>
  </data>
  <data name="delete_err" xml:space="preserve">
    <value>刪除副本失敗</value>
  </data>
  <data name="delete_enone" xml:space="preserve">
    <value>未選擇</value>
  </data>
</root>