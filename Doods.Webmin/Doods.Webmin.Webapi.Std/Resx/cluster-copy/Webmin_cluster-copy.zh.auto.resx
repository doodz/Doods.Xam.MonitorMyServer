<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>群集复制文件</value>
  </data>
  <data name="index_add" xml:space="preserve">
    <value>创建一个新的计划文件副本。</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>尚未定义计划的文件副本。</value>
  </data>
  <data name="index_servers" xml:space="preserve">
    <value>复制到服务器</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>集群副本列表</value>
  </data>
  <data name="index_more" xml:space="preserve">
    <value>还有 $1 ..</value>
  </data>
  <data name="index_run" xml:space="preserve">
    <value>现在跑步 ..</value>
  </data>
  <data name="index_files" xml:space="preserve">
    <value>要复制的文件</value>
  </data>
  <data name="index_sched" xml:space="preserve">
    <value>预定的？</value>
  </data>
  <data name="index_when" xml:space="preserve">
    <value>是， $1</value>
  </data>
  <data name="index_act" xml:space="preserve">
    <value>行动</value>
  </data>
  <data name="index_exec" xml:space="preserve">
    <value>执行</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>删除选定的副本</value>
  </data>
  <data name="edit_title" xml:space="preserve">
    <value>编辑群集副本</value>
  </data>
  <data name="create_title" xml:space="preserve">
    <value>创建群集副本</value>
  </data>
  <data name="edit_header" xml:space="preserve">
    <value>集群副本详细信息</value>
  </data>
  <data name="edit_files" xml:space="preserve">
    <value>要复制的文件</value>
  </data>
  <data name="edit_dest" xml:space="preserve">
    <value>目标目录</value>
  </data>
  <data name="edit_cmd" xml:space="preserve">
    <value>复制后运行的命令</value>
  </data>
  <data name="edit_before" xml:space="preserve">
    <value>复制前运行的命令</value>
  </data>
  <data name="edit_remote" xml:space="preserve">
    <value>在远程服务器上</value>
  </data>
  <data name="edit_dmode0" xml:space="preserve">
    <value>复制目录下的完整路径</value>
  </data>
  <data name="edit_dmode1" xml:space="preserve">
    <value>复制到此目录</value>
  </data>
  <data name="edit_servers" xml:space="preserve">
    <value>复制到服务器</value>
  </data>
  <data name="edit_group" xml:space="preserve">
    <value>$1的成员</value>
  </data>
  <data name="edit_this" xml:space="preserve">
    <value>这个服务器</value>
  </data>
  <data name="edit_all" xml:space="preserve">
    <value>&amp;lt;所有主机&amp;gt;</value>
  </data>
  <data name="edit_sched" xml:space="preserve">
    <value>如期复制吗？</value>
  </data>
  <data name="edit_schedyes" xml:space="preserve">
    <value>是的，有时在下面选择 ..</value>
  </data>
  <data name="edit_run" xml:space="preserve">
    <value>立即复制</value>
  </data>
  <data name="edit_return" xml:space="preserve">
    <value>集群副本</value>
  </data>
  <data name="edit_email" xml:space="preserve">
    <value>电子邮件输出到</value>
  </data>
  <data name="edit_none" xml:space="preserve">
    <value>没有人</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>无法保存集群cron作业</value>
  </data>
  <data name="save_efiles" xml:space="preserve">
    <value>没有输入要复制的文件</value>
  </data>
  <data name="save_edest" xml:space="preserve">
    <value>缺少目标目录</value>
  </data>
  <data name="save_eservers" xml:space="preserve">
    <value>没有要复制到输入的服务器</value>
  </data>
  <data name="save_efile" xml:space="preserve">
    <value>复制“$1”的文件不是绝对路径</value>
  </data>
  <data name="save_eemail" xml:space="preserve">
    <value>电子邮件地址丢失或无效</value>
  </data>
  <data name="exec_title" xml:space="preserve">
    <value>复制文件</value>
  </data>
  <data name="exec_files1" xml:space="preserve">
    <value>将 $1文件复制到选定的服务器 $2 ..</value>
  </data>
  <data name="exec_files2" xml:space="preserve">
    <value>将 $1复制到选定的服务器 $2 ..</value>
  </data>
  <data name="exec_under" xml:space="preserve">
    <value>（在目录 $1下）</value>
  </data>
  <data name="exec_failed" xml:space="preserve">
    <value>无法复制到 $1 : $2</value>
  </data>
  <data name="exec_success" xml:space="preserve">
    <value>将以下文件复制到 $1：</value>
  </data>
  <data name="exec_made" xml:space="preserve">
    <value>在 $1上创建了以下目录：</value>
  </data>
  <data name="exec_nohosts" xml:space="preserve">
    <value>没有选择要在其上运行的主机，或者选定的组不包含任何可用的主机。</value>
  </data>
  <data name="exec_nothing" xml:space="preserve">
    <value>没有文件成功复制到 $1。</value>
  </data>
  <data name="exec_not" xml:space="preserve">
    <value>无法将以下文件复制到 $1：</value>
  </data>
  <data name="exec_cmd" xml:space="preserve">
    <value>$1上的复制后命令输出：</value>
  </data>
  <data name="exec_before" xml:space="preserve">
    <value>$1上的复制前命令输出：</value>
  </data>
  <data name="exec_on" xml:space="preserve">
    <value>无法在 $1上运行： $2</value>
  </data>
  <data name="log_create" xml:space="preserve">
    <value>已创建从 $1到 $2服务器的副本</value>
  </data>
  <data name="log_modify" xml:space="preserve">
    <value>已将 $1的副本复制到 $2服务器</value>
  </data>
  <data name="log_delete" xml:space="preserve">
    <value>已将 $1的副本删除到 $2服务器</value>
  </data>
  <data name="log_exec" xml:space="preserve">
    <value>已将 $1服务器复制到 $2服务器</value>
  </data>
  <data name="log_deletes" xml:space="preserve">
    <value>已删除 $1份</value>
  </data>
  <data name="email_subject_succeeded" xml:space="preserve">
    <value>$1的集群副本成功</value>
  </data>
  <data name="email_subject_failed" xml:space="preserve">
    <value>$1的群集副本失败</value>
  </data>
  <data name="delete_err" xml:space="preserve">
    <value>删除副本失败</value>
  </data>
  <data name="delete_enone" xml:space="preserve">
    <value>未选择</value>
  </data>
</root>