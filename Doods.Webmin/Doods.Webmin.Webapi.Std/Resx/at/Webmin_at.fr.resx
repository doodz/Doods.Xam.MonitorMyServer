<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Commandes programmées</value>
  </data>
  <data name="index_header" xml:space="preserve">
    <value>Nouvelle commande programmée</value>
  </data>
  <data name="index_user" xml:space="preserve">
    <value>Exécuter en tant qu'utilisateur</value>
  </data>
  <data name="index_date" xml:space="preserve">
    <value>Date d'exécution</value>
  </data>
  <data name="index_time" xml:space="preserve">
    <value>Heure d'exécution</value>
  </data>
  <data name="index_cmd" xml:space="preserve">
    <value>Commandes à exécuter</value>
  </data>
  <data name="index_mail" xml:space="preserve">
    <value>Envoyer un mail une fois complété ?</value>
  </data>
  <data name="index_id" xml:space="preserve">
    <value>ID de la tâche</value>
  </data>
  <data name="index_exec" xml:space="preserve">
    <value>Exécutée le</value>
  </data>
  <data name="index_created" xml:space="preserve">
    <value>Créée le</value>
  </data>
  <data name="index_dir" xml:space="preserve">
    <value>Exécutée dans un répertoire</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>à la liste des commandes</value>
  </data>
  <data name="index_cdate" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="index_ctime" xml:space="preserve">
    <value>Heure</value>
  </data>
  <data name="index_allow" xml:space="preserve">
    <value>Autoriser les utilisateurs des commandes programmées</value>
  </data>
  <data name="index_amode" xml:space="preserve">
    <value>Utilisateurs à autoriser</value>
  </data>
  <data name="index_amode0" xml:space="preserve">
    <value>Tous les utilisateurs Unix</value>
  </data>
  <data name="index_amode1" xml:space="preserve">
    <value>Seulement la liste ci-dessous</value>
  </data>
  <data name="index_amode2" xml:space="preserve">
    <value>Tous, sauf la liste ci-dessous</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>Annuler les commandes sélectionnées</value>
  </data>
  <data name="edit_title" xml:space="preserve">
    <value>Commande programmée</value>
  </data>
  <data name="edit_cmd" xml:space="preserve">
    <value>Script complet à exécuter</value>
  </data>
  <data name="edit_shortcmd" xml:space="preserve">
    <value>Commande à exécuter</value>
  </data>
  <data name="edit_header" xml:space="preserve">
    <value>Détail des commandes programmées</value>
  </data>
  <data name="edit_delete" xml:space="preserve">
    <value>Annuler cette commande</value>
  </data>
  <data name="edit_run" xml:space="preserve">
    <value>Exécuter maintenant</value>
  </data>
  <data name="edit_ejob" xml:space="preserve">
    <value>La commande programmée n'existe plus !</value>
  </data>
  <data name="edit_ecannot" xml:space="preserve">
    <value>Vous n'êtes pas autorisé à modifier cette commande programmée</value>
  </data>
  <data name="edit_showfull" xml:space="preserve">
    <value>Montrer le script complet.</value>
  </data>
  <data name="create_err" xml:space="preserve">
    <value>Impossible de créer la commande programmée</value>
  </data>
  <data name="create_euser" xml:space="preserve">
    <value>Nom d'utilisateur manquant ou invalide</value>
  </data>
  <data name="create_edate" xml:space="preserve">
    <value>Date ou heure manquante ou invalide</value>
  </data>
  <data name="create_ecmd" xml:space="preserve">
    <value>Aucune commande saisie</value>
  </data>
  <data name="create_efuture" xml:space="preserve">
    <value>La date et l'heure sont passées</value>
  </data>
  <data name="create_edir" xml:space="preserve">
    <value>Répertoire manquant ou invalide</value>
  </data>
  <data name="create_ecannot" xml:space="preserve">
    <value>Vous n'êtes pas autorisé à créer des commandes programmées pour cet utilisateur</value>
  </data>
  <data name="create_eallow" xml:space="preserve">
    <value>L'utilisateur indiqué n'est pas autorisé à exécuter une commande programmée</value>
  </data>
  <data name="delete_err" xml:space="preserve">
    <value>Impossible d'annuler la commande</value>
  </data>
  <data name="delete_egone" xml:space="preserve">
    <value>Commande déjà exécutée ou supprimée</value>
  </data>
  <data name="acl_users" xml:space="preserve">
    <value>Peut modifier des commandes programmées pour</value>
  </data>
  <data name="acl_all" xml:space="preserve">
    <value>Tous les utilisateurs</value>
  </data>
  <data name="acl_this" xml:space="preserve">
    <value>Utilisateur Webmin actuel</value>
  </data>
  <data name="acl_only" xml:space="preserve">
    <value>Seulement les utilisateurs</value>
  </data>
  <data name="acl_except" xml:space="preserve">
    <value>Tous les utilisateurs sauf</value>
  </data>
  <data name="acl_allow" xml:space="preserve">
    <value>Peut éditer les utilisateurs autorisés pour At ?</value>
  </data>
  <data name="run_title" xml:space="preserve">
    <value>Exécution de la commande</value>
  </data>
  <data name="run_output" xml:space="preserve">
    <value>Sortie de la commande programmée...</value>
  </data>
  <data name="run_none" xml:space="preserve">
    <value>Aucune sortie générée</value>
  </data>
  <data name="allow_err" xml:space="preserve">
    <value>Echec lors de la sauvegarde des utilisateurs autorisés</value>
  </data>
  <data name="allow_ecannot" xml:space="preserve">
    <value>Vous n'avez pas les droits nécessaires pour gérer les utilisateurs autorisés</value>
  </data>
  <data name="allow_eusers" xml:space="preserve">
    <value>Aucun utilisateur entré</value>
  </data>
  <data name="deletes_err" xml:space="preserve">
    <value>Echec lors de l'annulation des commandes</value>
  </data>
  <data name="deletes_enone" xml:space="preserve">
    <value>Aucune sélection</value>
  </data>
</root>