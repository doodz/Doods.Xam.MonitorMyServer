<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_mail" xml:space="preserve">
    <value>完成時發送電子郵件嗎？</value>
  </data>
  <data name="index_allow" xml:space="preserve">
    <value>允許預定的命令用戶</value>
  </data>
  <data name="index_amode" xml:space="preserve">
    <value>用戶允許</value>
  </data>
  <data name="index_amode0" xml:space="preserve">
    <value>所有Unix用戶</value>
  </data>
  <data name="index_amode1" xml:space="preserve">
    <value>僅列出的用戶 ..</value>
  </data>
  <data name="index_amode2" xml:space="preserve">
    <value>除列出的用戶外的所有 ..</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>取消選擇的命令</value>
  </data>
  <data name="index_noat" xml:space="preserve">
    <value>在您的系統上找不到 $1命令-可能尚未安裝，或者對您的操作系統不可用。</value>
  </data>
  <data name="index_nostyle" xml:space="preserve">
    <value>Webmin不知道如何在此操作系統上管理調度命令。</value>
  </data>
  <data name="index_stop" xml:space="preserve">
    <value>停止計劃的命令服務器</value>
  </data>
  <data name="index_stopdesc" xml:space="preserve">
    <value>關閉運行計劃的命令的&lt;tt&gt;atd&lt;/tt&gt;後台服務器進程。這將阻止命令在其指定時間執行。</value>
  </data>
  <data name="index_start" xml:space="preserve">
    <value>啟動計劃的命令服務器</value>
  </data>
  <data name="index_startdesc" xml:space="preserve">
    <value>啟動運行計劃的命令的&lt;tt&gt;atd&lt;/tt&gt;後台服務器進程。這是命令在其指定時間執行所必需的。</value>
  </data>
  <data name="index_boot" xml:space="preserve">
    <value>在啟動時啟動服務器？</value>
  </data>
  <data name="index_bootdesc" xml:space="preserve">
    <value>更改此設置以啟用或禁用在系統引導時啟動計劃的命令服務器。</value>
  </data>
  <data name="edit_shortcmd" xml:space="preserve">
    <value>執行命令</value>
  </data>
  <data name="edit_run" xml:space="preserve">
    <value>現在跑步</value>
  </data>
  <data name="edit_showfull" xml:space="preserve">
    <value>顯示完整腳本。</value>
  </data>
  <data name="create_eallow" xml:space="preserve">
    <value>指定的用戶不允許運行計劃的命令</value>
  </data>
  <data name="acl_allow" xml:space="preserve">
    <value>可以編輯允許的At用戶嗎？</value>
  </data>
  <data name="run_title" xml:space="preserve">
    <value>運行命令</value>
  </data>
  <data name="run_output" xml:space="preserve">
    <value>計劃命令的輸出 ..</value>
  </data>
  <data name="run_none" xml:space="preserve">
    <value>沒有輸出</value>
  </data>
  <data name="allow_err" xml:space="preserve">
    <value>無法保存允許的用戶</value>
  </data>
  <data name="allow_ecannot" xml:space="preserve">
    <value>您無權管理允許的用戶</value>
  </data>
  <data name="allow_eusers" xml:space="preserve">
    <value>沒有用戶輸入</value>
  </data>
  <data name="deletes_err" xml:space="preserve">
    <value>取消命令失敗</value>
  </data>
  <data name="deletes_enone" xml:space="preserve">
    <value>未選擇</value>
  </data>
  <data name="log_allow" xml:space="preserve">
    <value>更改了允許的用戶</value>
  </data>
  <data name="log_create_job" xml:space="preserve">
    <value>為 $1創建了計劃的命令</value>
  </data>
  <data name="log_delete_job" xml:space="preserve">
    <value>已取消 $1的預定命令</value>
  </data>
  <data name="log_exec_job" xml:space="preserve">
    <value>已為 $1執行計劃的命令</value>
  </data>
  <data name="log_delete_jobs" xml:space="preserve">
    <value>已取消 $1個計劃的命令</value>
  </data>
  <data name="log_stop" xml:space="preserve">
    <value>停止調度的命令服務器</value>
  </data>
  <data name="log_start" xml:space="preserve">
    <value>啟動計劃的命令服務器</value>
  </data>
  <data name="log_bootup" xml:space="preserve">
    <value>引導時啟用計劃的命令服務器</value>
  </data>
  <data name="log_bootdown" xml:space="preserve">
    <value>引導時禁用調度的命令服務器</value>
  </data>
  <data name="stop_err" xml:space="preserve">
    <value>無法停止服務器</value>
  </data>
  <data name="start_err" xml:space="preserve">
    <value>無法啟動服務器</value>
  </data>
</root>