<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Comandos Programados</value>
  </data>
  <data name="index_header" xml:space="preserve">
    <value>Nuevo comando programado</value>
  </data>
  <data name="index_user" xml:space="preserve">
    <value>Ejecutar como  usuario</value>
  </data>
  <data name="index_date" xml:space="preserve">
    <value>Ejecutar en fecha</value>
  </data>
  <data name="index_time" xml:space="preserve">
    <value>Ejecutar en hora</value>
  </data>
  <data name="index_cmd" xml:space="preserve">
    <value>Comandos a ejecutar</value>
  </data>
  <data name="index_id" xml:space="preserve">
    <value>ID de trabajo</value>
  </data>
  <data name="index_exec" xml:space="preserve">
    <value>Ejecutar a</value>
  </data>
  <data name="index_created" xml:space="preserve">
    <value>Creado en</value>
  </data>
  <data name="index_dir" xml:space="preserve">
    <value>Ejecutar en el directorio</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>lista de comandos</value>
  </data>
  <data name="index_cdate" xml:space="preserve">
    <value>Fecha actual</value>
  </data>
  <data name="index_ctime" xml:space="preserve">
    <value>Hora actual</value>
  </data>
  <data name="index_allow" xml:space="preserve">
    <value>Usuarios autorizados de comandos planificados</value>
  </data>
  <data name="index_amode" xml:space="preserve">
    <value>Usuarios a los que autorizar</value>
  </data>
  <data name="index_amode0" xml:space="preserve">
    <value>Todos los usuarios Unix</value>
  </data>
  <data name="index_amode1" xml:space="preserve">
    <value>Sólo los usuarios listados ..</value>
  </data>
  <data name="index_amode2" xml:space="preserve">
    <value>Todos excepto los usuarios listados ..</value>
  </data>
  <data name="edit_title" xml:space="preserve">
    <value>Comando programado</value>
  </data>
  <data name="edit_cmd" xml:space="preserve">
    <value>Script completo a ejecutar</value>
  </data>
  <data name="edit_header" xml:space="preserve">
    <value>Detalles de comando programado</value>
  </data>
  <data name="edit_delete" xml:space="preserve">
    <value>Cancelar este comando</value>
  </data>
  <data name="edit_run" xml:space="preserve">
    <value>Ejecutar Ahora</value>
  </data>
  <data name="edit_ejob" xml:space="preserve">
    <value>¡El comando planificado ya no existe!</value>
  </data>
  <data name="edit_ecannot" xml:space="preserve">
    <value>No está autorizado a editar este comando programado</value>
  </data>
  <data name="create_err" xml:space="preserve">
    <value>Fallo al crear el comando programado</value>
  </data>
  <data name="create_euser" xml:space="preserve">
    <value>Nombre de usuario no ingresado o no válido</value>
  </data>
  <data name="create_edate" xml:space="preserve">
    <value>Fecha u hora no ingresada o no válida</value>
  </data>
  <data name="create_ecmd" xml:space="preserve">
    <value>No se introdujeron comandos</value>
  </data>
  <data name="create_efuture" xml:space="preserve">
    <value>Fecha y hora ya pasadas</value>
  </data>
  <data name="create_edir" xml:space="preserve">
    <value>Directorio no ingresado o no válido</value>
  </data>
  <data name="create_ecannot" xml:space="preserve">
    <value>No está autorizado a crear comandos programados para este usuario</value>
  </data>
  <data name="create_eallow" xml:space="preserve">
    <value>El usuario especificado no está autorizado a ejecutar comandos planificados</value>
  </data>
  <data name="delete_err" xml:space="preserve">
    <value>Fallo al cancelar el comando</value>
  </data>
  <data name="delete_egone" xml:space="preserve">
    <value>El comando ya se ejecutó o eliminó</value>
  </data>
  <data name="acl_users" xml:space="preserve">
    <value>Puede editar comandos programados para</value>
  </data>
  <data name="acl_all" xml:space="preserve">
    <value>Todos los usuarios</value>
  </data>
  <data name="acl_this" xml:space="preserve">
    <value>Usuario actual Webmin</value>
  </data>
  <data name="acl_only" xml:space="preserve">
    <value>Solo usuarios</value>
  </data>
  <data name="acl_except" xml:space="preserve">
    <value>Todos excepto los usuarios</value>
  </data>
  <data name="acl_allow" xml:space="preserve">
    <value>¿Puede editar los usuarios autorizados?</value>
  </data>
  <data name="run_title" xml:space="preserve">
    <value>Ejecutando Comando</value>
  </data>
  <data name="run_output" xml:space="preserve">
    <value>Salida del comando planificado ..</value>
  </data>
  <data name="run_none" xml:space="preserve">
    <value>No se generó salida</value>
  </data>
  <data name="allow_err" xml:space="preserve">
    <value>Fallo al salvar usuarios autorizados</value>
  </data>
  <data name="allow_ecannot" xml:space="preserve">
    <value>No está autorizado a configurar los usuarios autorizados</value>
  </data>
  <data name="allow_eusers" xml:space="preserve">
    <value>No se introdujeron usuarios</value>
  </data>
</root>