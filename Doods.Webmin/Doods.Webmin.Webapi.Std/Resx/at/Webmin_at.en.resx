<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Scheduled Commands</value>
  </data>
  <data name="index_header" xml:space="preserve">
    <value>New scheduled command</value>
  </data>
  <data name="index_user" xml:space="preserve">
    <value>Run as user</value>
  </data>
  <data name="index_date" xml:space="preserve">
    <value>Run on date</value>
  </data>
  <data name="index_time" xml:space="preserve">
    <value>Run at time</value>
  </data>
  <data name="index_cmd" xml:space="preserve">
    <value>Commands to execute</value>
  </data>
  <data name="index_mail" xml:space="preserve">
    <value>Send email on completion?</value>
  </data>
  <data name="index_id" xml:space="preserve">
    <value>Job ID</value>
  </data>
  <data name="index_exec" xml:space="preserve">
    <value>Run at</value>
  </data>
  <data name="index_created" xml:space="preserve">
    <value>Created on</value>
  </data>
  <data name="index_dir" xml:space="preserve">
    <value>Run in directory</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>commands list</value>
  </data>
  <data name="index_cdate" xml:space="preserve">
    <value>Current date</value>
  </data>
  <data name="index_ctime" xml:space="preserve">
    <value>Current time</value>
  </data>
  <data name="index_allow" xml:space="preserve">
    <value>Allowed scheduled command users</value>
  </data>
  <data name="index_amode" xml:space="preserve">
    <value>Users to allow</value>
  </data>
  <data name="index_amode0" xml:space="preserve">
    <value>All Unix users</value>
  </data>
  <data name="index_amode1" xml:space="preserve">
    <value>Only listed users ..</value>
  </data>
  <data name="index_amode2" xml:space="preserve">
    <value>All except listed users ..</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>Cancel Selected Commands</value>
  </data>
  <data name="index_noat" xml:space="preserve">
    <value>The $1 command was not found on your system - maybe it is not installed, or not available for your operating system.</value>
  </data>
  <data name="index_nostyle" xml:space="preserve">
    <value>Webmin does not know how to manage schedule commands on this operating system.</value>
  </data>
  <data name="index_stop" xml:space="preserve">
    <value>Stop Scheduled Commands Server</value>
  </data>
  <data name="index_stopdesc" xml:space="preserve">
    <value>Shut down the &lt;tt&gt;atd&lt;/tt&gt; background server process that runs scheduled commands. This will prevent commands from executing at their specified times.</value>
  </data>
  <data name="index_start" xml:space="preserve">
    <value>Start Scheduled Commands Server</value>
  </data>
  <data name="index_startdesc" xml:space="preserve">
    <value>Start up the &lt;tt&gt;atd&lt;/tt&gt; background server process that runs scheduled commands. This is required for commands to execute at their specified times.</value>
  </data>
  <data name="index_boot" xml:space="preserve">
    <value>Start Server At Boot?</value>
  </data>
  <data name="index_bootdesc" xml:space="preserve">
    <value>Change this setting to enable or disable starting the scheduled commands server at system boot time.</value>
  </data>
  <data name="edit_title" xml:space="preserve">
    <value>Scheduled Command</value>
  </data>
  <data name="edit_cmd" xml:space="preserve">
    <value>Full script to execute</value>
  </data>
  <data name="edit_shortcmd" xml:space="preserve">
    <value>Command to execute</value>
  </data>
  <data name="edit_header" xml:space="preserve">
    <value>Scheduled command details</value>
  </data>
  <data name="edit_delete" xml:space="preserve">
    <value>Cancel this command</value>
  </data>
  <data name="edit_run" xml:space="preserve">
    <value>Run Now</value>
  </data>
  <data name="edit_ejob" xml:space="preserve">
    <value>Scheduled command no longer exists!</value>
  </data>
  <data name="edit_ecannot" xml:space="preserve">
    <value>You are not allowed to edit this scheduled command</value>
  </data>
  <data name="edit_showfull" xml:space="preserve">
    <value>Show full script.</value>
  </data>
  <data name="create_err" xml:space="preserve">
    <value>Failed to created schedule command</value>
  </data>
  <data name="create_euser" xml:space="preserve">
    <value>Missing or invalid username</value>
  </data>
  <data name="create_edate" xml:space="preserve">
    <value>Missing or invalid date or time</value>
  </data>
  <data name="create_ecmd" xml:space="preserve">
    <value>No commands entered</value>
  </data>
  <data name="create_efuture" xml:space="preserve">
    <value>Date and time is in the past</value>
  </data>
  <data name="create_edir" xml:space="preserve">
    <value>Missing or invalid directory</value>
  </data>
  <data name="create_ecannot" xml:space="preserve">
    <value>You are not allowed to create scheduled commands for this user</value>
  </data>
  <data name="create_eallow" xml:space="preserve">
    <value>The specified user is not allowed to run scheduled commands</value>
  </data>
  <data name="delete_err" xml:space="preserve">
    <value>Failed to cancel command</value>
  </data>
  <data name="delete_egone" xml:space="preserve">
    <value>Command already run or deleted</value>
  </data>
  <data name="acl_users" xml:space="preserve">
    <value>Can edit scheduled commands for</value>
  </data>
  <data name="acl_all" xml:space="preserve">
    <value>All users</value>
  </data>
  <data name="acl_this" xml:space="preserve">
    <value>Current Webmin user</value>
  </data>
  <data name="acl_only" xml:space="preserve">
    <value>Only users</value>
  </data>
  <data name="acl_except" xml:space="preserve">
    <value>All except users</value>
  </data>
  <data name="acl_allow" xml:space="preserve">
    <value>Can edit allowed At users?</value>
  </data>
  <data name="acl_stop" xml:space="preserve">
    <value>Can stop and start &lt;tt&gt;atd&lt;/tt&gt;?</value>
  </data>
  <data name="run_title" xml:space="preserve">
    <value>Running Command</value>
  </data>
  <data name="run_output" xml:space="preserve">
    <value>Output from scheduled command ..</value>
  </data>
  <data name="run_none" xml:space="preserve">
    <value>No output generated</value>
  </data>
  <data name="allow_err" xml:space="preserve">
    <value>Failed to save allowed users</value>
  </data>
  <data name="allow_ecannot" xml:space="preserve">
    <value>You are not allowed to manage allowed users</value>
  </data>
  <data name="allow_eusers" xml:space="preserve">
    <value>No users entered</value>
  </data>
  <data name="deletes_err" xml:space="preserve">
    <value>Failed to cancel commands</value>
  </data>
  <data name="deletes_enone" xml:space="preserve">
    <value>None selected</value>
  </data>
  <data name="log_allow" xml:space="preserve">
    <value>Changed allowed users</value>
  </data>
  <data name="log_create_job" xml:space="preserve">
    <value>Created scheduled command for $1</value>
  </data>
  <data name="log_delete_job" xml:space="preserve">
    <value>Cancelled scheduled command for $1</value>
  </data>
  <data name="log_exec_job" xml:space="preserve">
    <value>Executed scheduled command for $1</value>
  </data>
  <data name="log_delete_jobs" xml:space="preserve">
    <value>Cancelled $1 scheduled commands</value>
  </data>
  <data name="log_stop" xml:space="preserve">
    <value>Stopped scheduled commands server</value>
  </data>
  <data name="log_start" xml:space="preserve">
    <value>Started scheduled commands server</value>
  </data>
  <data name="log_bootup" xml:space="preserve">
    <value>Enabled scheduled commands server at boot</value>
  </data>
  <data name="log_bootdown" xml:space="preserve">
    <value>Disabled scheduled commands server at boot</value>
  </data>
  <data name="stop_err" xml:space="preserve">
    <value>Failed to stop server</value>
  </data>
  <data name="start_err" xml:space="preserve">
    <value>Failed to start server</value>
  </data>
  <data name="stop_ecannot" xml:space="preserve">
    <value>You are not allowed to stop the server</value>
  </data>
  <data name="start_ecannot" xml:space="preserve">
    <value>You are not allowed to start the server</value>
  </data>
  <data name="bootup_ecannot" xml:space="preserve">
    <value>You are not allowed to enable the server at boot</value>
  </data>
  <data name="__norefs" xml:space="preserve">
    <value>1</value>
  </data>
</root>