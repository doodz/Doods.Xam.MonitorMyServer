<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>指令排程</value>
  </data>
  <data name="index_header" xml:space="preserve">
    <value>新指令排程</value>
  </data>
  <data name="index_user" xml:space="preserve">
    <value>使用者</value>
  </data>
  <data name="index_date" xml:space="preserve">
    <value>日期</value>
  </data>
  <data name="index_time" xml:space="preserve">
    <value>時間</value>
  </data>
  <data name="index_cmd" xml:space="preserve">
    <value>執行指令</value>
  </data>
  <data name="index_id" xml:space="preserve">
    <value>工作識別碼</value>
  </data>
  <data name="index_exec" xml:space="preserve">
    <value>執行時間</value>
  </data>
  <data name="index_created" xml:space="preserve">
    <value>建立時間</value>
  </data>
  <data name="index_dir" xml:space="preserve">
    <value>在哪目錄執行</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>指令清單</value>
  </data>
  <data name="index_cdate" xml:space="preserve">
    <value>今天日期</value>
  </data>
  <data name="index_ctime" xml:space="preserve">
    <value>目前時間</value>
  </data>
  <data name="edit_title" xml:space="preserve">
    <value>指令排程</value>
  </data>
  <data name="edit_cmd" xml:space="preserve">
    <value>執行腳本已經滿了</value>
  </data>
  <data name="edit_header" xml:space="preserve">
    <value>指令排程內</value>
  </data>
  <data name="edit_delete" xml:space="preserve">
    <value>取消這個指令</value>
  </data>
  <data name="edit_ejob" xml:space="preserve">
    <value>指令排程不存在！</value>
  </data>
  <data name="edit_ecannot" xml:space="preserve">
    <value>您沒有權限編輯這個指令排程</value>
  </data>
  <data name="create_err" xml:space="preserve">
    <value>新增指令排程失敗</value>
  </data>
  <data name="create_euser" xml:space="preserve">
    <value>沒有輸入或無效的使用者名稱</value>
  </data>
  <data name="create_edate" xml:space="preserve">
    <value>沒有輸入或無效的日期或時間</value>
  </data>
  <data name="create_ecmd" xml:space="preserve">
    <value>沒有輸入指令</value>
  </data>
  <data name="create_efuture" xml:space="preserve">
    <value>日期和時間是過去的</value>
  </data>
  <data name="create_edir" xml:space="preserve">
    <value>沒有輸入或無效的目錄</value>
  </data>
  <data name="create_ecannot" xml:space="preserve">
    <value>您沒有權限對這個使用者新增這個指令排程</value>
  </data>
  <data name="delete_err" xml:space="preserve">
    <value>取消指令失敗</value>
  </data>
  <data name="delete_egone" xml:space="preserve">
    <value>指令已經在執行或被刪除了</value>
  </data>
  <data name="acl_users" xml:space="preserve">
    <value>可以編輯指令排程給</value>
  </data>
  <data name="acl_all" xml:space="preserve">
    <value>所有使用者</value>
  </data>
  <data name="acl_this" xml:space="preserve">
    <value>目前的 Webmin 使用者</value>
  </data>
  <data name="acl_only" xml:space="preserve">
    <value>只有使用者</value>
  </data>
  <data name="acl_except" xml:space="preserve">
    <value>所有使用者，除了</value>
  </data>
</root>