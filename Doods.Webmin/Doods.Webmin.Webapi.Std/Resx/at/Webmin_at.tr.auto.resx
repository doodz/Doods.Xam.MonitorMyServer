<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_mail" xml:space="preserve">
    <value>Tamamlandığında e-posta gönderilsin mi?</value>
  </data>
  <data name="index_allow" xml:space="preserve">
    <value>İzin verilen zamanlanmış komut kullanıcıları</value>
  </data>
  <data name="index_amode" xml:space="preserve">
    <value>İzin verilecek kullanıcılar</value>
  </data>
  <data name="index_amode0" xml:space="preserve">
    <value>Tüm Unix kullanıcıları</value>
  </data>
  <data name="index_amode1" xml:space="preserve">
    <value>Sadece listelenen kullanıcılar ..</value>
  </data>
  <data name="index_amode2" xml:space="preserve">
    <value>Listelenen kullanıcılar hariç tümü.</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>Seçilen Komutları İptal Et</value>
  </data>
  <data name="index_noat" xml:space="preserve">
    <value>$1 komutu sisteminizde bulunamadı - belki yüklü değil veya işletim sisteminizde kullanılamıyor.</value>
  </data>
  <data name="index_nostyle" xml:space="preserve">
    <value>Webmin, bu işletim sisteminde zamanlama komutlarını nasıl yöneteceğini bilmiyor.</value>
  </data>
  <data name="index_stop" xml:space="preserve">
    <value>Planlanmış Komutlar Sunucusunu Durdur</value>
  </data>
  <data name="index_stopdesc" xml:space="preserve">
    <value>Zamanlanmış komutları çalıştıran &lt;tt&gt;atd&lt;/tt&gt; arka plan sunucusu işlemini kapatın. Bu, komutların belirtilen zamanlarda yürütülmesini engelleyecektir.</value>
  </data>
  <data name="index_start" xml:space="preserve">
    <value>Planlanmış Komutlar Sunucusunu Başlat</value>
  </data>
  <data name="index_startdesc" xml:space="preserve">
    <value>Zamanlanmış komutları çalıştıran &lt;tt&gt;atd&lt;/tt&gt; arka plan sunucusu işlemini başlatın. Bu, komutların belirtilen zamanlarda çalıştırılması için gereklidir.</value>
  </data>
  <data name="index_boot" xml:space="preserve">
    <value>Önyüklemede Sunucu Başlatılsın mı?</value>
  </data>
  <data name="index_bootdesc" xml:space="preserve">
    <value>Sistem önyükleme zamanında zamanlanmış komut sunucusunu başlatmayı etkinleştirmek veya devre dışı bırakmak için bu ayarı değiştirin.</value>
  </data>
  <data name="edit_shortcmd" xml:space="preserve">
    <value>Yürütme komutu</value>
  </data>
  <data name="edit_showfull" xml:space="preserve">
    <value>Komut dosyasının tamamını göster.</value>
  </data>
  <data name="create_eallow" xml:space="preserve">
    <value>Belirtilen kullanıcının zamanlanmış komutları çalıştırmasına izin verilmiyor</value>
  </data>
  <data name="acl_allow" xml:space="preserve">
    <value>Kullanıcılara düzenlemeye izin verilebilir mi?</value>
  </data>
  <data name="allow_err" xml:space="preserve">
    <value>İzin verilen kullanıcılar kaydedilemedi</value>
  </data>
  <data name="allow_ecannot" xml:space="preserve">
    <value>İzin verilen kullanıcıları yönetme izniniz yok</value>
  </data>
  <data name="allow_eusers" xml:space="preserve">
    <value>Kullanıcı girmedi</value>
  </data>
  <data name="deletes_err" xml:space="preserve">
    <value>Komutlar iptal edilemedi</value>
  </data>
  <data name="deletes_enone" xml:space="preserve">
    <value>Hiçbiri seçilmedi</value>
  </data>
  <data name="log_allow" xml:space="preserve">
    <value>İzin verilen kullanıcılar değiştirildi</value>
  </data>
  <data name="log_create_job" xml:space="preserve">
    <value>$1 için zamanlanmış komut oluşturuldu</value>
  </data>
  <data name="log_delete_job" xml:space="preserve">
    <value>$1 için zamanlanmış komut iptal edildi</value>
  </data>
  <data name="log_exec_job" xml:space="preserve">
    <value>$1 için zamanlanmış komut yürütüldü</value>
  </data>
  <data name="log_delete_jobs" xml:space="preserve">
    <value>$1 zamanlanmış komut iptal edildi</value>
  </data>
  <data name="log_stop" xml:space="preserve">
    <value>Programlanmış komut sunucusu durduruldu</value>
  </data>
  <data name="log_start" xml:space="preserve">
    <value>Zamanlanmış komut sunucusu başlatıldı</value>
  </data>
  <data name="log_bootup" xml:space="preserve">
    <value>Önyüklemede zamanlanmış komut sunucusu etkinleştirildi</value>
  </data>
  <data name="log_bootdown" xml:space="preserve">
    <value>Önyüklemede devre dışı bırakılan zamanlanmış komut sunucusu</value>
  </data>
  <data name="stop_err" xml:space="preserve">
    <value>Sunucu durdurulamadı</value>
  </data>
  <data name="start_err" xml:space="preserve">
    <value>Sunucu başlatılamadı</value>
  </data>
</root>