<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>软件包</value>
  </data>
  <data name="index_installed" xml:space="preserve">
    <value>安装的软件包</value>
  </data>
  <data name="index_close" xml:space="preserve">
    <value>全部关闭</value>
  </data>
  <data name="index_open" xml:space="preserve">
    <value>全部打开</value>
  </data>
  <data name="index_search" xml:space="preserve">
    <value>搜索软件包：</value>
  </data>
  <data name="index_install" xml:space="preserve">
    <value>安装新软件包</value>
  </data>
  <data name="index_installmsg" xml:space="preserve">
    <value>选择安装新软件包 $1 的位置..</value>
  </data>
  <data name="index_local" xml:space="preserve">
    <value>从本地文件</value>
  </data>
  <data name="index_uploaded" xml:space="preserve">
    <value>从上载的文件</value>
  </data>
  <data name="index_ftp" xml:space="preserve">
    <value>从ftp 或 http 的 URL</value>
  </data>
  <data name="index_installok" xml:space="preserve">
    <value>安装</value>
  </data>
  <data name="index_ident" xml:space="preserve">
    <value>标识一个文件</value>
  </data>
  <data name="index_identmsg" xml:space="preserve">
    <value>输入命令或文件的路径以为其搜索 $1 数据库。</value>
  </data>
  <data name="index_identok" xml:space="preserve">
    <value>搜索：</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>软件包列表</value>
  </data>
  <data name="search_title" xml:space="preserve">
    <value>软件包搜索</value>
  </data>
  <data name="search_nomatch" xml:space="preserve">
    <value>没有软件包匹配 $1</value>
  </data>
  <data name="search_none" xml:space="preserve">
    <value>没有</value>
  </data>
  <data name="search_desc" xml:space="preserve">
    <value>描述</value>
  </data>
  <data name="search_class" xml:space="preserve">
    <value>类</value>
  </data>
  <data name="search_pack" xml:space="preserve">
    <value>软件包</value>
  </data>
  <data name="search_match" xml:space="preserve">
    <value>匹配 $1 的软件包</value>
  </data>
  <data name="search_return" xml:space="preserve">
    <value>搜索结果</value>
  </data>
  <data name="edit_title" xml:space="preserve">
    <value>编辑软件包</value>
  </data>
  <data name="edit_details" xml:space="preserve">
    <value>软件包详情</value>
  </data>
  <data name="edit_desc" xml:space="preserve">
    <value>描述</value>
  </data>
  <data name="edit_pack" xml:space="preserve">
    <value>软件包</value>
  </data>
  <data name="edit_class" xml:space="preserve">
    <value>类</value>
  </data>
  <data name="edit_none" xml:space="preserve">
    <value>无</value>
  </data>
  <data name="edit_ver" xml:space="preserve">
    <value>版本</value>
  </data>
  <data name="edit_vend" xml:space="preserve">
    <value>厂商</value>
  </data>
  <data name="edit_arch" xml:space="preserve">
    <value>体系结构</value>
  </data>
  <data name="edit_inst" xml:space="preserve">
    <value>已安装</value>
  </data>
  <data name="edit_list" xml:space="preserve">
    <value>表出文件</value>
  </data>
  <data name="edit_uninst" xml:space="preserve">
    <value>卸除安装</value>
  </data>
  <data name="edit_return" xml:space="preserve">
    <value>软件包详情</value>
  </data>
  <data name="list_title" xml:space="preserve">
    <value>软件包文件</value>
  </data>
  <data name="list_files" xml:space="preserve">
    <value>软件包 $1 的文件</value>
  </data>
  <data name="list_path" xml:space="preserve">
    <value>路径</value>
  </data>
  <data name="list_owner" xml:space="preserve">
    <value>所有者</value>
  </data>
  <data name="list_group" xml:space="preserve">
    <value>小组</value>
  </data>
  <data name="list_type" xml:space="preserve">
    <value>类型</value>
  </data>
  <data name="list_size" xml:space="preserve">
    <value>大小</value>
  </data>
  <data name="list_status" xml:space="preserve">
    <value>状态</value>
  </data>
  <data name="delete_err" xml:space="preserve">
    <value>删除软件包 $1 失败</value>
  </data>
  <data name="delete_epack" xml:space="preserve">
    <value>软件包 $1 不存在</value>
  </data>
  <data name="delete_title" xml:space="preserve">
    <value>删除软件包</value>
  </data>
  <data name="delete_rusure" xml:space="preserve">
    <value>确实要删除软件包 $1? 达 $2 个文件 ($3) 将永久删除。</value>
  </data>
  <data name="delete_ok" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="file_title" xml:space="preserve">
    <value>文件信息</value>
  </data>
  <data name="file_notfound" xml:space="preserve">
    <value>没有有关 $1 的信息</value>
  </data>
  <data name="file_path" xml:space="preserve">
    <value>路径</value>
  </data>
  <data name="file_type" xml:space="preserve">
    <value>类型</value>
  </data>
  <data name="file_perms" xml:space="preserve">
    <value>许可</value>
  </data>
  <data name="file_owner" xml:space="preserve">
    <value>所有者</value>
  </data>
  <data name="file_group" xml:space="preserve">
    <value>小组</value>
  </data>
  <data name="file_size" xml:space="preserve">
    <value>大小</value>
  </data>
  <data name="file_link" xml:space="preserve">
    <value>链接到</value>
  </data>
  <data name="file_pack" xml:space="preserve">
    <value>软件包</value>
  </data>
  <data name="file_class" xml:space="preserve">
    <value>类</value>
  </data>
  <data name="file_desc" xml:space="preserve">
    <value>描述</value>
  </data>
  <data name="file_none" xml:space="preserve">
    <value>无</value>
  </data>
  <data name="install_err" xml:space="preserve">
    <value>安装软件包失败</value>
  </data>
  <data name="install_elocal" xml:space="preserve">
    <value>没有给出本地文件</value>
  </data>
  <data name="install_elocal2" xml:space="preserve">
    <value>'$1' 不存在</value>
  </data>
  <data name="install_eupload" xml:space="preserve">
    <value>浏览器不支持文件上载功能</value>
  </data>
  <data name="install_eurl" xml:space="preserve">
    <value>错误的 URL '$1'</value>
  </data>
  <data name="install_edir" xml:space="preserve">
    <value>非法目录 $1</value>
  </data>
  <data name="install_ezip" xml:space="preserve">
    <value>错误的压缩文件$1</value>
  </data>
  <data name="install_efile" xml:space="preserve">
    <value>非法文件 $1</value>
  </data>
  <data name="install_title" xml:space="preserve">
    <value>安装软件包</value>
  </data>
  <data name="install_header" xml:space="preserve">
    <value>安装软件包</value>
  </data>
  <data name="install_packs" xml:space="preserve">
    <value>即将安装的软建包</value>
  </data>
  <data name="install_ok" xml:space="preserve">
    <value>安装</value>
  </data>
  <data name="do_err" xml:space="preserve">
    <value>安装软件包 $1 失败</value>
  </data>
  <data name="do_title" xml:space="preserve">
    <value>安装软件包</value>
  </data>
  <data name="do_efailed" xml:space="preserve">
    <value>安装失败 : $1</value>
  </data>
  <data name="do_efailedmsg1" xml:space="preserve">
    <value>可以返回前页选择不同选项重新安装</value>
  </data>
  <data name="do_success" xml:space="preserve">
    <value>软件包 $1 安装成功</value>
  </data>
  <data name="do_details" xml:space="preserve">
    <value>软件包明细</value>
  </data>
  <data name="do_desc" xml:space="preserve">
    <value>描述</value>
  </data>
  <data name="do_class" xml:space="preserve">
    <value>类</value>
  </data>
  <data name="do_pack" xml:space="preserve">
    <value>软件包</value>
  </data>
  <data name="do_ver" xml:space="preserve">
    <value>版本</value>
  </data>
  <data name="do_vend" xml:space="preserve">
    <value>厂商</value>
  </data>
  <data name="do_arch" xml:space="preserve">
    <value>体系结构</value>
  </data>
  <data name="do_inst" xml:space="preserve">
    <value>已安装</value>
  </data>
  <data name="do_none" xml:space="preserve">
    <value>无</value>
  </data>
  <data name="do_files" xml:space="preserve">
    <value>软件包文件</value>
  </data>
  <data name="pkgadd_root" xml:space="preserve">
    <value>根目录</value>
  </data>
  <data name="pkgadd_eroot" xml:space="preserve">
    <value>根目录 '$1' 不存在</value>
  </data>
  <data name="pkgadd_unknown" xml:space="preserve">
    <value>未知</value>
  </data>
  <data name="rpm_upgrade" xml:space="preserve">
    <value>更新软件包？</value>
  </data>
  <data name="rpm_replacepkgs" xml:space="preserve">
    <value>覆盖软件包？</value>
  </data>
  <data name="rpm_nodeps" xml:space="preserve">
    <value>忽略依赖性？</value>
  </data>
  <data name="rpm_oldpackage" xml:space="preserve">
    <value>用旧版本替换新版本？</value>
  </data>
  <data name="rpm_noscripts" xml:space="preserve">
    <value>执行安装脚本？</value>
  </data>
  <data name="rpm_excludedocs" xml:space="preserve">
    <value>安装文挡？</value>
  </data>
  <data name="rpm_replacefiles" xml:space="preserve">
    <value>覆盖文件？</value>
  </data>
  <data name="rpm_root" xml:space="preserve">
    <value>根目录</value>
  </data>
  <data name="rpm_eroot" xml:space="preserve">
    <value>根目录'$1' 不存在</value>
  </data>
  <data name="bsd_unknown" xml:space="preserve">
    <value>未知</value>
  </data>
  <data name="bsd_scripts" xml:space="preserve">
    <value>执行安装前和安装后脚本？</value>
  </data>
  <data name="bsd_force" xml:space="preserve">
    <value>如果丢失前提，强行安装？</value>
  </data>
  <data name="slack_unclass" xml:space="preserve">
    <value>其它</value>
  </data>
  <data name="slack_unknown" xml:space="preserve">
    <value>未知</value>
  </data>
  <data name="slack_missing" xml:space="preserve">
    <value>丢失</value>
  </data>
  <data name="slack_root" xml:space="preserve">
    <value>根目录</value>
  </data>
  <data name="slack_eroot" xml:space="preserve">
    <value>没有或非法的根目录</value>
  </data>
  <data name="debian_unknown" xml:space="preserve">
    <value>未知</value>
  </data>
  <data name="debian_depends" xml:space="preserve">
    <value>忽略依赖性问题？</value>
  </data>
  <data name="debian_conflicts" xml:space="preserve">
    <value>忽略软件包冲突？</value>
  </data>
  <data name="debian_overwrite" xml:space="preserve">
    <value>覆盖其它软件包的文件？</value>
  </data>
  <data name="debian_downgrade" xml:space="preserve">
    <value>用旧软件包替换新软件包？</value>
  </data>
  <data name="log_install_package" xml:space="preserve">
    <value>已安装软件包 $1</value>
  </data>
  <data name="log_delete" xml:space="preserve">
    <value>已删除软件包 $1</value>
  </data>
</root>