<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>NFS Exports</value>
  </data>
  <data name="index_dir" xml:space="preserve">
    <value>Directory</value>
  </data>
  <data name="index_inactive" xml:space="preserve">
    <value>Inactive</value>
  </data>
  <data name="index_to" xml:space="preserve">
    <value>Exported to...</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>You are not exporting any directories yet.</value>
  </data>
  <data name="index_add" xml:space="preserve">
    <value>Add a new export.</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>Apply Changes</value>
  </data>
  <data name="index_applymsg" xml:space="preserve">
    <value>Click this button to apply the current file exports configuration. This will make all the directories listed above available with the options specified.</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>exports list</value>
  </data>
  <data name="index_return_edit" xml:space="preserve">
    <value>edit exports</value>
  </data>
  <data name="index_eprog" xml:space="preserve">
    <value>The NFS server executable was not found on your system. The NFS package does not appear to be installed.</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>Delete Selected Exports</value>
  </data>
  <data name="index_disable" xml:space="preserve">
    <value>Disable Selected</value>
  </data>
  <data name="index_enable" xml:space="preserve">
    <value>Enable Selected</value>
  </data>
  <data name="index_vr" xml:space="preserve">
    <value>virtual root</value>
  </data>
  <data name="edit_title" xml:space="preserve">
    <value>Edit Export</value>
  </data>
  <data name="create_title" xml:space="preserve">
    <value>Create Export</value>
  </data>
  <data name="edit_details" xml:space="preserve">
    <value>Export details</value>
  </data>
  <data name="edit_dir" xml:space="preserve">
    <value>Directory to export</value>
  </data>
  <data name="edit_vers" xml:space="preserve">
    <value>NFS Version</value>
  </data>
  <data name="edit_nfs_vers" xml:space="preserve">
    <value>NFS Version</value>
  </data>
  <data name="edit_pfs" xml:space="preserve">
    <value>NFSv4 Pseudofilesystem to export</value>
  </data>
  <data name="edit_ispfs" xml:space="preserve">
    <value>NFSv4 root</value>
  </data>
  <data name="edit_active" xml:space="preserve">
    <value>Active?</value>
  </data>
  <data name="edit_to" xml:space="preserve">
    <value>Export to...</value>
  </data>
  <data name="edit_to_detail" xml:space="preserve">
    <value>(hosts and associated security flavors)</value>
  </data>
  <data name="edit_all" xml:space="preserve">
    <value>Everyone</value>
  </data>
  <data name="edit_host" xml:space="preserve">
    <value>Host(s)</value>
  </data>
  <data name="edit_webnfs" xml:space="preserve">
    <value>WebNFS clients</value>
  </data>
  <data name="edit_netgroup" xml:space="preserve">
    <value>NIS Netgroup</value>
  </data>
  <data name="edit_network" xml:space="preserve">
    <value>Network</value>
  </data>
  <data name="edit_netmask" xml:space="preserve">
    <value>Netmask</value>
  </data>
  <data name="edit_address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="edit_prefix" xml:space="preserve">
    <value>/</value>
  </data>
  <data name="edit_relative" xml:space="preserve">
    <value>Make symbolic links relative?</value>
  </data>
  <data name="edit_insecure" xml:space="preserve">
    <value>Clients must be on secure port?</value>
  </data>
  <data name="edit_security" xml:space="preserve">
    <value>Export options</value>
  </data>
  <data name="edit_mode" xml:space="preserve">
    <value>Access mode</value>
  </data>
  <data name="edit_ro" xml:space="preserve">
    <value>Read-only?</value>
  </data>
  <data name="edit_subtree_check" xml:space="preserve">
    <value>Disable subtree checking?</value>
  </data>
  <data name="edit_hide" xml:space="preserve">
    <value>Hide the filesystem?</value>
  </data>
  <data name="edit_auth" xml:space="preserve">
    <value>(with or without Authentication)</value>
  </data>
  <data name="edit_sec" xml:space="preserve">
    <value>Security level</value>
  </data>
  <data name="edit_integrity" xml:space="preserve">
    <value>Integrity</value>
  </data>
  <data name="edit_privacy" xml:space="preserve">
    <value>Privacy (including Integrity)</value>
  </data>
  <data name="edit_v2opts" xml:space="preserve">
    <value>NFSv2-specific options</value>
  </data>
  <data name="edit_noaccess" xml:space="preserve">
    <value>Deny access to directory?</value>
  </data>
  <data name="edit_squash" xml:space="preserve">
    <value>Trust remote users</value>
  </data>
  <data name="edit_everyone" xml:space="preserve">
    <value>Everyone</value>
  </data>
  <data name="edit_except" xml:space="preserve">
    <value>Everyone except root</value>
  </data>
  <data name="edit_nobody" xml:space="preserve">
    <value>Nobody</value>
  </data>
  <data name="edit_uids" xml:space="preserve">
    <value>Don't trust UIDs</value>
  </data>
  <data name="edit_none" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="edit_gids" xml:space="preserve">
    <value>Don't trust GIDs</value>
  </data>
  <data name="edit_anonuid" xml:space="preserve">
    <value>Treat untrusted users as</value>
  </data>
  <data name="edit_default" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="edit_anongid" xml:space="preserve">
    <value>Treat untrusted groups as</value>
  </data>
  <data name="edit_sync" xml:space="preserve">
    <value>Immediately sync all writes?</value>
  </data>
  <data name="edit_sync1" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="edit_sync2" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="edit_sync0" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="edit_in" xml:space="preserve">
    <value>Bind to</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>Failed to save export</value>
  </data>
  <data name="save_edir" xml:space="preserve">
    <value>Directory '$1' does not exist</value>
  </data>
  <data name="save_enetgroup" xml:space="preserve">
    <value>Invalid or missing netgroup</value>
  </data>
  <data name="save_enetwork" xml:space="preserve">
    <value>'$1' is not a valid network</value>
  </data>
  <data name="save_enetmask" xml:space="preserve">
    <value>'$1' is not a valid netmask</value>
  </data>
  <data name="save_eaddress" xml:space="preserve">
    <value>'$1' is not a valid IPv6 address</value>
  </data>
  <data name="save_eprefix" xml:space="preserve">
    <value>'$1' is not a valid IPv6 prefix</value>
  </data>
  <data name="save_ehost" xml:space="preserve">
    <value>'$1' is not a valid hostname</value>
  </data>
  <data name="save_euids" xml:space="preserve">
    <value>UIDs not to trust must be a comma-separated list of numbers or ranges</value>
  </data>
  <data name="save_egids" xml:space="preserve">
    <value>GIDs not to trust must be a comma-separated list of numbers or ranges</value>
  </data>
  <data name="save_pfs" xml:space="preserve">
    <value>'$1' is already exported as a directory</value>
  </data>
  <data name="save_create_dir" xml:space="preserve">
    <value>Can't create the directory '$1'</value>
  </data>
  <data name="exports_webnfs" xml:space="preserve">
    <value>WebNFS&amp;nbsp;clients</value>
  </data>
  <data name="exports_ngroup" xml:space="preserve">
    <value>Netgroup&amp;nbsp;$1</value>
  </data>
  <data name="exports_net" xml:space="preserve">
    <value>Network&amp;nbsp;$1</value>
  </data>
  <data name="exports_all" xml:space="preserve">
    <value>Everyone</value>
  </data>
  <data name="exports_hosts" xml:space="preserve">
    <value>Hosts&amp;nbsp;$1</value>
  </data>
  <data name="exports_host" xml:space="preserve">
    <value>Host&amp;nbsp;$1</value>
  </data>
  <data name="exports_gss" xml:space="preserve">
    <value>Authenticated network:&amp;nbsp;$1</value>
  </data>
  <data name="log_modify" xml:space="preserve">
    <value>Modified NFS export $1</value>
  </data>
  <data name="log_modify_l" xml:space="preserve">
    <value>Modified NFS export $1 to $2</value>
  </data>
  <data name="log_delete" xml:space="preserve">
    <value>Deleted NFS export $1</value>
  </data>
  <data name="log_delete_l" xml:space="preserve">
    <value>Deleted NFS export $1 to $2</value>
  </data>
  <data name="log_create" xml:space="preserve">
    <value>Created NFS export $1</value>
  </data>
  <data name="log_create_l" xml:space="preserve">
    <value>Created NFS export $1 to $2</value>
  </data>
  <data name="log_apply" xml:space="preserve">
    <value>Applied configuration</value>
  </data>
  <data name="log_delete_exports" xml:space="preserve">
    <value>Deleted $1 NFS exports</value>
  </data>
  <data name="alert_no_nfsv4root" xml:space="preserve">
    <value>No NFSv4 virtual root has been defined!\n You should first define a directory as being the NFSv4 root and then bind some directories under this root.</value>
  </data>
  <data name="hostsec_host" xml:space="preserve">
    <value>Host selection</value>
  </data>
  <data name="hostsec_flavors" xml:space="preserve">
    <value>Ordered list of security flavors allowed for this host</value>
  </data>
  <data name="hostsec_up" xml:space="preserve">
    <value>Up</value>
  </data>
  <data name="hostsec_down" xml:space="preserve">
    <value>Down</value>
  </data>
  <data name="hostsec_supported" xml:space="preserve">
    <value>Supported</value>
  </data>
  <data name="hostsec_enabled" xml:space="preserve">
    <value>Enabled</value>
  </data>
</root>