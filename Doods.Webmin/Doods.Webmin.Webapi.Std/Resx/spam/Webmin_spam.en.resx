<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>SpamAssassin Mail Filter</value>
  </data>
  <data name="index_ecmd2" xml:space="preserve">
    <value>The SpamAssassin command $1 was not found on your system.</value>
  </data>
  <data name="index_unknown" xml:space="preserve">
    <value>unknown</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>SpamAssassin version $1</value>
  </data>
  <data name="index_warn_usermin" xml:space="preserve">
    <value>SpamAssassin does not appear to be set up in your Procmail configuration file $2 or the global file $1, so any configuration done using this module will have no effect unless SpamAssassin has been setup globally.</value>
  </data>
  <data name="index_warn_webmin" xml:space="preserve">
    <value>SpamAssassin does not appear to be set up in the system's Procmail configuration file $1, so any configuration done using this module will have no effect unless users have it set up individually.</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>module index</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>Apply Changes</value>
  </data>
  <data name="index_applydesc" xml:space="preserve">
    <value>Click this button to apply the current SpamAssassin configuration by sending a HUP signal to all running $1 processes.</value>
  </data>
  <data name="index_spamassassin" xml:space="preserve">
    <value>SpamAssassin</value>
  </data>
  <data name="index_ecannot" xml:space="preserve">
    <value>You are not allowed to manage the SpamAssassin configuration file $1</value>
  </data>
  <data name="white_title" xml:space="preserve">
    <value>Allowed and Denied Addresses</value>
  </data>
  <data name="white_desc" xml:space="preserve">
    <value>The tables on this page allow you to specify From: and To: addresses for email that is always or never categorized as spam. Any other email will be processed as normal by SpamAssassin's rules. All email addresses can contain wildcards, like *@foo.com or *.foo.com to match entire domains.</value>
  </data>
  <data name="white_from" xml:space="preserve">
    <value>Senders to never classify as spam</value>
  </data>
  <data name="white_gfrom" xml:space="preserve">
    <value>System-wide senders to never classify as spam</value>
  </data>
  <data name="white_unfrom" xml:space="preserve">
    <value>Exceptions for senders to never classify as spam</value>
  </data>
  <data name="white_addr" xml:space="preserve">
    <value>Sender's address</value>
  </data>
  <data name="white_addr2" xml:space="preserve">
    <value>Recipient's address</value>
  </data>
  <data name="white_rcvd2" xml:space="preserve">
    <value>Sender to never classify as spam</value>
  </data>
  <data name="white_rcvdhost" xml:space="preserve">
    <value>Domain in Received header</value>
  </data>
  <data name="white_gunfrom" xml:space="preserve">
    <value>System-wide exceptions for senders to never classify as spam</value>
  </data>
  <data name="white_black" xml:space="preserve">
    <value>Senders to always classify as spam</value>
  </data>
  <data name="white_gblack" xml:space="preserve">
    <value>System-wide senders to always classify as spam</value>
  </data>
  <data name="white_unblack" xml:space="preserve">
    <value>Exceptions for senders always classify as spam</value>
  </data>
  <data name="white_gunblack" xml:space="preserve">
    <value>System-wide exceptions for senders to always classify as spam</value>
  </data>
  <data name="white_to" xml:space="preserve">
    <value>To: or Cc: addresses to allow some or all spam to</value>
  </data>
  <data name="white_level" xml:space="preserve">
    <value>Allow</value>
  </data>
  <data name="white_level0" xml:space="preserve">
    <value>Some spam</value>
  </data>
  <data name="white_level1" xml:space="preserve">
    <value>More spam</value>
  </data>
  <data name="white_level2" xml:space="preserve">
    <value>All spam</value>
  </data>
  <data name="white_err" xml:space="preserve">
    <value>Failed to save white and black lists</value>
  </data>
  <data name="white_efrom" xml:space="preserve">
    <value>'$1' is not a valid From: address</value>
  </data>
  <data name="white_ercvd" xml:space="preserve">
    <value>'$1' is not a valid domain name</value>
  </data>
  <data name="white_importdesc" xml:space="preserve">
    <value>This form can be used to add email addresses from a file (such as an exported Outlook or Eudora address book) to the allowed list.</value>
  </data>
  <data name="white_import" xml:space="preserve">
    <value>Import addresses from file</value>
  </data>
  <data name="white_sort" xml:space="preserve">
    <value>Sort allowed addresses after import?</value>
  </data>
  <data name="white_importok" xml:space="preserve">
    <value>Import Now</value>
  </data>
  <data name="white_return" xml:space="preserve">
    <value>allowed and denied addresses</value>
  </data>
  <data name="white_tabham" xml:space="preserve">
    <value>Allowed addresses</value>
  </data>
  <data name="white_tabspam" xml:space="preserve">
    <value>Denied addresses</value>
  </data>
  <data name="white_tabsome" xml:space="preserve">
    <value>Destination addresses</value>
  </data>
  <data name="white_tabimport" xml:space="preserve">
    <value>Import addresses</value>
  </data>
  <data name="score_title" xml:space="preserve">
    <value>Spam Classification</value>
  </data>
  <data name="score_desc" xml:space="preserve">
    <value>SpamAssassin assigns a score to each message based on its content and headers. The options on this page determine the score above which a message is considered spam, and some of the methods via which that score is calculated.</value>
  </data>
  <data name="score_header" xml:space="preserve">
    <value>Spam message classification options</value>
  </data>
  <data name="score_score" xml:space="preserve">
    <value>SpamAssassin test scores</value>
  </data>
  <data name="score_name" xml:space="preserve">
    <value>Test name</value>
  </data>
  <data name="score_points" xml:space="preserve">
    <value>Points</value>
  </data>
  <data name="score_hits" xml:space="preserve">
    <value>Hits above which a message is considered spam</value>
  </data>
  <data name="score_rbl" xml:space="preserve">
    <value>Skip RBL open-relay check?</value>
  </data>
  <data name="score_mx" xml:space="preserve">
    <value>Number of times to check From: address MX</value>
  </data>
  <data name="score_mxdelay" xml:space="preserve">
    <value>Seconds to wait between MX checks</value>
  </data>
  <data name="score_langs" xml:space="preserve">
    <value>Languages in email that are not considered potential spam</value>
  </data>
  <data name="score_langsall" xml:space="preserve">
    <value>All languages</value>
  </data>
  <data name="score_langssel" xml:space="preserve">
    <value>Selected languages ..</value>
  </data>
  <data name="score_locales" xml:space="preserve">
    <value>Character sets in email that are not considered potential spam</value>
  </data>
  <data name="score_localesall" xml:space="preserve">
    <value>All character sets</value>
  </data>
  <data name="score_localessel" xml:space="preserve">
    <value>Selected character sets ..</value>
  </data>
  <data name="score_auto" xml:space="preserve">
    <value>Whitelist score factor</value>
  </data>
  <data name="score_timeout" xml:space="preserve">
    <value>Seconds to wait for RBL queries</value>
  </data>
  <data name="score_received" xml:space="preserve">
    <value>Number of Received: headers to check with RBL</value>
  </data>
  <data name="score_trusted" xml:space="preserve">
    <value>Networks and hosts to trust</value>
  </data>
  <data name="score_describe" xml:space="preserve">
    <value>Test descriptions for report</value>
  </data>
  <data name="score_descr" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="score_err" xml:space="preserve">
    <value>Failed to save message scoring</value>
  </data>
  <data name="score_ename" xml:space="preserve">
    <value>'$1' is not a valid test name</value>
  </data>
  <data name="score_epoints" xml:space="preserve">
    <value>'$1' is not a valid number of points</value>
  </data>
  <data name="score_edesc" xml:space="preserve">
    <value>Missing description for score '$1'</value>
  </data>
  <data name="score_ehits" xml:space="preserve">
    <value>Missing or invalid number of hits above which a message is considered spam</value>
  </data>
  <data name="score_eauto" xml:space="preserve">
    <value>Missing or invalid whitelist score factor (must be between 0 and 1)</value>
  </data>
  <data name="score_emx" xml:space="preserve">
    <value>Missing or invalid number of times to check From: address MX</value>
  </data>
  <data name="score_emxdelay" xml:space="preserve">
    <value>Missing or invalid seconds to wait between MX checks</value>
  </data>
  <data name="score_etimeout" xml:space="preserve">
    <value>Missing or invalid seconds to wait for RBL queries</value>
  </data>
  <data name="score_ereceived" xml:space="preserve">
    <value>Missing or invalid number of Received: headers to check with RBL</value>
  </data>
  <data name="score_bayes" xml:space="preserve">
    <value>Use Bayesian learning classifier?</value>
  </data>
  <data name="report_title" xml:space="preserve">
    <value>Message Modification</value>
  </data>
  <data name="report_desc" xml:space="preserve">
    <value>The options on this page control the modifications that SpamAssassin makes to the headers and body of all messages that it analyzes, and modifications that it makes to those classified as spam.</value>
  </data>
  <data name="report_header" xml:space="preserve">
    <value>Analysed and spam message modification options</value>
  </data>
  <data name="report_report" xml:space="preserve">
    <value>Report attached to messages exceeding the spam threshold</value>
  </data>
  <data name="report_clear" xml:space="preserve">
    <value>Use just text below ..</value>
  </data>
  <data name="report_noclear" xml:space="preserve">
    <value>Add text below to default message ..</value>
  </data>
  <data name="report_terse" xml:space="preserve">
    <value>Report attached to spam messages when in terse mode</value>
  </data>
  <data name="report_rsubject" xml:space="preserve">
    <value>Prepend text to Subject: header</value>
  </data>
  <data name="report_rfrom" xml:space="preserve">
    <value>Prepend text to From: header</value>
  </data>
  <data name="report_rto" xml:space="preserve">
    <value>Prepend text to To: header</value>
  </data>
  <data name="report_leave" xml:space="preserve">
    <value>Leave unchanged</value>
  </data>
  <data name="report_rewrite" xml:space="preserve">
    <value>Modify Subject: header of spam?</value>
  </data>
  <data name="report_subject" xml:space="preserve">
    <value>Text to prepend to spam Subject: header</value>
  </data>
  <data name="report_rheader" xml:space="preserve">
    <value>Put report in X-Spam-Status: header instead of body?</value>
  </data>
  <data name="report_useterse" xml:space="preserve">
    <value>Only generate terse report?</value>
  </data>
  <data name="report_fold" xml:space="preserve">
    <value>Split X-Spam-Status: header over multiple lines?</value>
  </data>
  <data name="report_safe" xml:space="preserve">
    <value>Put original message into attachment?</value>
  </data>
  <data name="report_safe2" xml:space="preserve">
    <value>Yes, as plain text</value>
  </data>
  <data name="report_detail" xml:space="preserve">
    <value>Include details of spam phrases?</value>
  </data>
  <data name="report_stars" xml:space="preserve">
    <value>Include X-Spam-Level: header?</value>
  </data>
  <data name="report_char" xml:space="preserve">
    <value>X-Spam-Level: header character</value>
  </data>
  <data name="report_defang" xml:space="preserve">
    <value>Change MIME type of spam to text/plain?</value>
  </data>
  <data name="report_err" xml:space="preserve">
    <value>Failed to save spam report options</value>
  </data>
  <data name="report_echar" xml:space="preserve">
    <value>A single character must be entered for the X-Spam-Level: header</value>
  </data>
  <data name="report_adds" xml:space="preserve">
    <value>Additional headers to add</value>
  </data>
  <data name="report_addfor" xml:space="preserve">
    <value>Message type</value>
  </data>
  <data name="report_addheader" xml:space="preserve">
    <value>Header</value>
  </data>
  <data name="report_addtext" xml:space="preserve">
    <value>Text for header</value>
  </data>
  <data name="report_addspam" xml:space="preserve">
    <value>Spam</value>
  </data>
  <data name="report_addham" xml:space="preserve">
    <value>Ham</value>
  </data>
  <data name="report_addall" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="report_eaddheader" xml:space="preserve">
    <value>Missing or invalid additional header to add $1</value>
  </data>
  <data name="user_title" xml:space="preserve">
    <value>Miscellaneous User Options</value>
  </data>
  <data name="user_desc" xml:space="preserve">
    <value>The options on this page are mostly related to the paths and settings that SpamAssassin uses for the external spam identification packages Razor, DCC and Pyzor. You can also tell SpamAssassin if it will be able to perform DNS lookups or not.</value>
  </data>
  <data name="user_header" xml:space="preserve">
    <value>Miscellaneous user-level options</value>
  </data>
  <data name="user_dns" xml:space="preserve">
    <value>Can SpamAssassin do DNS lookups?</value>
  </data>
  <data name="user_dnslist" xml:space="preserve">
    <value>Test by checking servers</value>
  </data>
  <data name="user_dnstest" xml:space="preserve">
    <value>Test</value>
  </data>
  <data name="user_razor" xml:space="preserve">
    <value>Razor request timeout in seconds</value>
  </data>
  <data name="user_dcc" xml:space="preserve">
    <value>Location of DCC client program</value>
  </data>
  <data name="user_inpath" xml:space="preserve">
    <value>In PATH</value>
  </data>
  <data name="user_bodymax" xml:space="preserve">
    <value>DCC body checksum count before match</value>
  </data>
  <data name="user_fuz1max" xml:space="preserve">
    <value>DCC fuz1 checksum count before match</value>
  </data>
  <data name="user_fuz2max" xml:space="preserve">
    <value>DCC fuz2 checksum count before match</value>
  </data>
  <data name="user_timeout" xml:space="preserve">
    <value>DCC request timeout in seconds</value>
  </data>
  <data name="user_dheader" xml:space="preserve">
    <value>Add DCC header to messages?</value>
  </data>
  <data name="user_pyzor" xml:space="preserve">
    <value>Location of Pyzor client program</value>
  </data>
  <data name="user_pbodymax" xml:space="preserve">
    <value>Pyzor body checksum count before match</value>
  </data>
  <data name="user_ptimeout" xml:space="preserve">
    <value>Pyzor request timeout in seconds</value>
  </data>
  <data name="user_pheader" xml:space="preserve">
    <value>Add Pyzor header to messages?</value>
  </data>
  <data name="user_err" xml:space="preserve">
    <value>Failed to save user options</value>
  </data>
  <data name="user_etimeout" xml:space="preserve">
    <value>'$1' is not a valid timeout</value>
  </data>
  <data name="user_epath" xml:space="preserve">
    <value>'$1' is not a valid client program path</value>
  </data>
  <data name="user_emax" xml:space="preserve">
    <value>'$1' is not a valid checksum count</value>
  </data>
  <data name="header_title" xml:space="preserve">
    <value>Header and Body Tests</value>
  </data>
  <data name="header_desc" xml:space="preserve">
    <value>This page allows you to define additional tests that SpamAssassin will apply to email, based on message headers, the body content, URLs found in the body, or combinations of other tests. The name assigned to each test is up to you, but is usually something like CONTAINS_FOO. The actual score that SpamAssassin adds to messages matching a test can be set by entering your own or built-in test names in the tables at the bottom of the page.</value>
  </data>
  <data name="header_switch" xml:space="preserve">
    <value>Switch to simple mode ..</value>
  </data>
  <data name="header_header" xml:space="preserve">
    <value>Additional header and body tests</value>
  </data>
  <data name="header_allow" xml:space="preserve">
    <value>Allow users to define tests?</value>
  </data>
  <data name="header_test" xml:space="preserve">
    <value>Header tests</value>
  </data>
  <data name="header_tname" xml:space="preserve">
    <value>Test name</value>
  </data>
  <data name="header_name" xml:space="preserve">
    <value>For header</value>
  </data>
  <data name="header_op" xml:space="preserve">
    <value>Check if</value>
  </data>
  <data name="header_op0" xml:space="preserve">
    <value>Matches..</value>
  </data>
  <data name="header_op1" xml:space="preserve">
    <value>Doesn't match..</value>
  </data>
  <data name="header_op2" xml:space="preserve">
    <value>Exists</value>
  </data>
  <data name="header_op3" xml:space="preserve">
    <value>Evaluate..</value>
  </data>
  <data name="header_pat" xml:space="preserve">
    <value>Regular expession</value>
  </data>
  <data name="header_default" xml:space="preserve">
    <value>Default value</value>
  </data>
  <data name="header_uri" xml:space="preserve">
    <value>Email URL tests</value>
  </data>
  <data name="header_body" xml:space="preserve">
    <value>Body tests</value>
  </data>
  <data name="header_mode" xml:space="preserve">
    <value>Body part</value>
  </data>
  <data name="header_mode0" xml:space="preserve">
    <value>Plain text</value>
  </data>
  <data name="header_mode1" xml:space="preserve">
    <value>All text</value>
  </data>
  <data name="header_mode2" xml:space="preserve">
    <value>Raw text</value>
  </data>
  <data name="header_mode3" xml:space="preserve">
    <value>Entire mail</value>
  </data>
  <data name="header_meta" xml:space="preserve">
    <value>Tests based on others</value>
  </data>
  <data name="header_bool" xml:space="preserve">
    <value>Boolean test expression</value>
  </data>
  <data name="header_err" xml:space="preserve">
    <value>Failed to save tests</value>
  </data>
  <data name="header_ename" xml:space="preserve">
    <value>'$1' is not a valid test name</value>
  </data>
  <data name="header_eclash" xml:space="preserve">
    <value>Test name '$1' is appears more than once</value>
  </data>
  <data name="header_eregexp2" xml:space="preserve">
    <value>Missing expression for test '$1'</value>
  </data>
  <data name="header_eflags" xml:space="preserve">
    <value>'$1' are not valid regular expression flags</value>
  </data>
  <data name="header_eeval" xml:space="preserve">
    <value>'$1' is not a valid evaluation function</value>
  </data>
  <data name="header_eheader" xml:space="preserve">
    <value>'$1' is not a valid email header</value>
  </data>
  <data name="header_eregexp" xml:space="preserve">
    <value>'$1' is not a valid regular expression (must be like /expression/)</value>
  </data>
  <data name="header_emeta" xml:space="preserve">
    <value>Missing test expression for test '$1'</value>
  </data>
  <data name="priv_title" xml:space="preserve">
    <value>Miscellaneous Privileged Options</value>
  </data>
  <data name="priv_desc" xml:space="preserve">
    <value>The options on this can only be set globally, rather than in individual users' configuration files. They control with paths to various configuration and logging file.</value>
  </data>
  <data name="priv_header" xml:space="preserve">
    <value>Miscellaneous privilege-level settings</value>
  </data>
  <data name="priv_white" xml:space="preserve">
    <value>Automatic whitelist file path</value>
  </data>
  <data name="priv_mode" xml:space="preserve">
    <value>Whitelist octal file mode</value>
  </data>
  <data name="priv_dcc" xml:space="preserve">
    <value>DCC command arguments</value>
  </data>
  <data name="priv_log" xml:space="preserve">
    <value>Timing log files path</value>
  </data>
  <data name="priv_razor" xml:space="preserve">
    <value>Razor configuration file path</value>
  </data>
  <data name="priv_phrases" xml:space="preserve">
    <value>Spam indicator phrases</value>
  </data>
  <data name="priv_phrase" xml:space="preserve">
    <value>Two-word phrase</value>
  </data>
  <data name="priv_score" xml:space="preserve">
    <value>Score</value>
  </data>
  <data name="priv_highest" xml:space="preserve">
    <value>Highest phrase score</value>
  </data>
  <data name="priv_err" xml:space="preserve">
    <value>Failed to save privileged options</value>
  </data>
  <data name="priv_epath" xml:space="preserve">
    <value>'$1' is not a valid path</value>
  </data>
  <data name="priv_emode" xml:space="preserve">
    <value>'$1' is not a 4-digit octal file mode</value>
  </data>
  <data name="priv_eargs" xml:space="preserve">
    <value>'$1' is not a valid list of arguments</value>
  </data>
  <data name="priv_emscore" xml:space="preserve">
    <value>'$1' is not a valid highest phrase score</value>
  </data>
  <data name="priv_ephrase" xml:space="preserve">
    <value>'$1' is not a valid two-word spam phrase</value>
  </data>
  <data name="priv_escore" xml:space="preserve">
    <value>Missing or invalid score for spam phrase '$1'</value>
  </data>
  <data name="usually" xml:space="preserve">
    <value>Usually $1</value>
  </data>
  <data name="ecannot" xml:space="preserve">
    <value>You are not allowed to use this page</value>
  </data>
  <data name="setup_title" xml:space="preserve">
    <value>Setup Procmail For SpamAssassin</value>
  </data>
  <data name="setup_desc_webmin" xml:space="preserve">
    <value>This form can be used to setup Procmail in $1 to run SpamAssassin on all email messages received by your system. However, this will only have any effect if your mail server has been configured to use Procmail for local delivery, or for users whose &lt;tt&gt;.forward&lt;/tt&gt; files are set up to run Procmail.</value>
  </data>
  <data name="setup_desc_usermin" xml:space="preserve">
    <value>This form can be used to setup Procmail in $1 to run SpamAssassin on all email messages sent to your account. However, this will only have any effect if the mail server has been configured to use Procmail for local delivery, or if your &lt;tt&gt;.forward&lt;/tt&gt; files is set up to feed all email to Procmail.</value>
  </data>
  <data name="setup_head" xml:space="preserve">
    <value>All messages processed by SpamAssassin will have the &lt;tt&gt;X-Spam&lt;/tt&gt; headers set, so that they can be further filtered by mail clients.</value>
  </data>
  <data name="setup_rel" xml:space="preserve">
    <value>Any non-absolute mail file or directory paths entered above will be relative to the home directory of the user receiving email.</value>
  </data>
  <data name="setup_home" xml:space="preserve">
    <value>The variable &lt;tt&gt;$HOME&lt;/tt&gt; can be used in the paths above, which will be replaced with the home directory of the user receiving email.</value>
  </data>
  <data name="setup_to" xml:space="preserve">
    <value>Action for messages classified as spam</value>
  </data>
  <data name="setup_null" xml:space="preserve">
    <value>Throw away</value>
  </data>
  <data name="setup_default" xml:space="preserve">
    <value>Deliver normally</value>
  </data>
  <data name="setup_file" xml:space="preserve">
    <value>Append to mbox-format mail file ..</value>
  </data>
  <data name="setup_maildir" xml:space="preserve">
    <value>Append to Qmail-style mail directory ..</value>
  </data>
  <data name="setup_mhdir" xml:space="preserve">
    <value>Append to MH-style mail directory ..</value>
  </data>
  <data name="setup_drop" xml:space="preserve">
    <value>Run SpamAssassin and write to file as</value>
  </data>
  <data name="setup_drop1" xml:space="preserve">
    <value>Recipient Unix user</value>
  </data>
  <data name="setup_drop0" xml:space="preserve">
    <value>&lt;tt&gt;root&lt;/tt&gt; user</value>
  </data>
  <data name="setup_ok" xml:space="preserve">
    <value>Setup Procmail for SpamAssassin</value>
  </data>
  <data name="setup_email" xml:space="preserve">
    <value>Forward to email address</value>
  </data>
  <data name="setup_err" xml:space="preserve">
    <value>Failed to setup SpamAssassin</value>
  </data>
  <data name="setup_efile" xml:space="preserve">
    <value>Missing or invalid mbox-format file</value>
  </data>
  <data name="setup_emaildir" xml:space="preserve">
    <value>Missing or invalid Qmail mail directory</value>
  </data>
  <data name="setup_emhdir" xml:space="preserve">
    <value>Missing or invalid MH mail directory</value>
  </data>
  <data name="setup_eemail" xml:space="preserve">
    <value>Missing or invalid email address</value>
  </data>
  <data name="log_white" xml:space="preserve">
    <value>Modified allowed and denied addresses</value>
  </data>
  <data name="log_score" xml:space="preserve">
    <value>Modified spam classification</value>
  </data>
  <data name="log_report" xml:space="preserve">
    <value>Modified message modification</value>
  </data>
  <data name="log_user" xml:space="preserve">
    <value>Modified miscellaneous user options</value>
  </data>
  <data name="log_header" xml:space="preserve">
    <value>Modified header and body tests</value>
  </data>
  <data name="log_priv" xml:space="preserve">
    <value>Modified miscellaneous privileged options</value>
  </data>
  <data name="log_setup" xml:space="preserve">
    <value>Setup Procmail for SpamAssassin</value>
  </data>
  <data name="log_procmail" xml:space="preserve">
    <value>Changed Procmail configuration</value>
  </data>
  <data name="log_import" xml:space="preserve">
    <value>Imported $1 allowed addresses</value>
  </data>
  <data name="log_manual" xml:space="preserve">
    <value>Manually edited configuration file</value>
  </data>
  <data name="import_title" xml:space="preserve">
    <value>Import Addresses</value>
  </data>
  <data name="import_err" xml:space="preserve">
    <value>Failed to import addresses</value>
  </data>
  <data name="import_efile" xml:space="preserve">
    <value>No file to import from selected</value>
  </data>
  <data name="import_enone" xml:space="preserve">
    <value>No email addresses found in file</value>
  </data>
  <data name="import_ok1" xml:space="preserve">
    <value>$2 email addresses were found in the file, of which $1 were new and have been added to the alllowed addresses list.</value>
  </data>
  <data name="import_ok2" xml:space="preserve">
    <value>$1 email addresses were found in the file, but they were all already in the allowed addresses list.</value>
  </data>
  <data name="mail_title" xml:space="preserve">
    <value>Spam Mail</value>
  </data>
  <data name="mail_desc" xml:space="preserve">
    <value>This page lists messages that have been classified as spam, and are awaiting some action. Messages that have been incorrectly indentified can be moved to your Inbox, while those that are really spam can be deleted.</value>
  </data>
  <data name="mail_level" xml:space="preserve">
    <value>Score</value>
  </data>
  <data name="mail_level2" xml:space="preserve">
    <value>Spam score</value>
  </data>
  <data name="mail_inbox" xml:space="preserve">
    <value>Move to Inbox</value>
  </data>
  <data name="mail_whitelist2" xml:space="preserve">
    <value>Allow Sender &amp;amp; Inbox</value>
  </data>
  <data name="mail_razor" xml:space="preserve">
    <value>Report as Spam &amp;amp; Delete</value>
  </data>
  <data name="mail_ham" xml:space="preserve">
    <value>Report as Ham &amp;amp; Inbox</value>
  </data>
  <data name="mail_delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="mail_return" xml:space="preserve">
    <value>spam mail list</value>
  </data>
  <data name="mail_pos" xml:space="preserve">
    <value>Spam messages $1 to $2 of $3</value>
  </data>
  <data name="mail_none" xml:space="preserve">
    <value>There are no messages in your spam folder</value>
  </data>
  <data name="mail_refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="mail_will" xml:space="preserve">
    <value>Automatic refresh in $1 minutes</value>
  </data>
  <data name="mail_wills" xml:space="preserve">
    <value>Automatic refresh in $1 seconds</value>
  </data>
  <data name="mail_delall" xml:space="preserve">
    <value>Delete All Spam</value>
  </data>
  <data name="mail_search3" xml:space="preserve">
    <value>Search for score above:</value>
  </data>
  <data name="process_eclean" xml:space="preserve">
    <value>An error occurred removing the SpamAssassin headers from this email</value>
  </data>
  <data name="process_ereport" xml:space="preserve">
    <value>Failed to report email to SpamAssassin : $1</value>
  </data>
  <data name="apply_err" xml:space="preserve">
    <value>Failed to apply changes</value>
  </data>
  <data name="apply_none" xml:space="preserve">
    <value>No SpamAssassin daemon processes found!</value>
  </data>
  <data name="acl_avail" xml:space="preserve">
    <value>Icons available to user</value>
  </data>
  <data name="acl_file" xml:space="preserve">
    <value>SpamAssassin configuration file to edit</value>
  </data>
  <data name="acl_filedef" xml:space="preserve">
    <value>Global config file</value>
  </data>
  <data name="acl_awl" xml:space="preserve">
    <value>Allowed users for auto-whitelist editing</value>
  </data>
  <data name="acl_awl0" xml:space="preserve">
    <value>All users</value>
  </data>
  <data name="acl_awl1" xml:space="preserve">
    <value>Only listed users $1</value>
  </data>
  <data name="acl_awl2" xml:space="preserve">
    <value>Only members of groups $1</value>
  </data>
  <data name="search_escore" xml:space="preserve">
    <value>Missing or invalid spam score</value>
  </data>
  <data name="search_results5" xml:space="preserve">
    <value>$1 mail messages with spam score at or above $2 ..</value>
  </data>
  <data name="razor_title" xml:space="preserve">
    <value>Setup Razor Spam Detector</value>
  </data>
  <data name="razor_desc" xml:space="preserve">
    <value>Vipul's Razor is a collaborative spam detection and reporting system that can improve the classification of spam sent to your address. However, before it can be used you must register for a Razor account, using the form below.</value>
  </data>
  <data name="razor_user" xml:space="preserve">
    <value>Razor username</value>
  </data>
  <data name="razor_pass" xml:space="preserve">
    <value>Razor password</value>
  </data>
  <data name="razor_auto" xml:space="preserve">
    <value>Choose automatically</value>
  </data>
  <data name="razor_enter" xml:space="preserve">
    <value>Entered</value>
  </data>
  <data name="razor_ok" xml:space="preserve">
    <value>Setup Now</value>
  </data>
  <data name="razor_ecmd" xml:space="preserve">
    <value>The Razor setup command $1 was not found on your system, indicating that Razor is not installed.</value>
  </data>
  <data name="razor_err" xml:space="preserve">
    <value>Failed to setup Razor</value>
  </data>
  <data name="razor_euser" xml:space="preserve">
    <value>Missing username</value>
  </data>
  <data name="razor_epass" xml:space="preserve">
    <value>Missing password</value>
  </data>
  <data name="razor_doing" xml:space="preserve">
    <value>Now attempting to register and setup Razor ..</value>
  </data>
  <data name="razor_done" xml:space="preserve">
    <value>.. done.</value>
  </data>
  <data name="razor_failed" xml:space="preserve">
    <value>.. failed! See the error output above for the reason why.</value>
  </data>
  <data name="amavisd_title" xml:space="preserve">
    <value>Amavisd Spam Delivery</value>
  </data>
  <data name="amavisd_desc" xml:space="preserve">
    <value>The form can be used to change the Amavisd configuration that determines what happens to messages classified as spam.</value>
  </data>
  <data name="amavis_ok" xml:space="preserve">
    <value>Change Amavisd Delivery</value>
  </data>
  <data name="amavis_tab_config" xml:space="preserve">
    <value>Amavisd Configuration</value>
  </data>
  <data name="amavis_tab_quarantine" xml:space="preserve">
    <value>Spam Quarantine</value>
  </data>
  <data name="amavis_warn" xml:space="preserve">
    <value>If you use Amavisd for Spam filtering, some options will be ignored.</value>
  </data>
  <data name="amavis_hits" xml:space="preserve">
    <value>Hits above which a message is considered spam.</value>
  </data>
  <data name="amavis_ehit" xml:space="preserve">
    <value>Hits above which a message is considered spam is not a value!</value>
  </data>
  <data name="amavis_ekill" xml:space="preserve">
    <value>Hits above which a Spam message is Quarantined is not a value!</value>
  </data>
  <data name="amavis_edsn" xml:space="preserve">
    <value>Hits above which no notification is sent to sender is not a value!</value>
  </data>
  <data name="amavis_ecut" xml:space="preserve">
    <value>Hits above which a Spam message is deleted is not a value!</value>
  </data>
  <data name="amavis_eheader" xml:space="preserve">
    <value>Value for Modify Subject: header is not a value!</value>
  </data>
  <data name="amavis_esize" xml:space="preserve">
    <value>Value for size above witch a message is not checked for Spam is not a value!</value>
  </data>
  <data name="amavis_echar" xml:space="preserve">
    <value>A single character must be entered for the X-Spam-Level: header</value>
  </data>
  <data name="amavis_esubject" xml:space="preserve">
    <value>Value for Prepend text to Subject: header is not a value!</value>
  </data>
  <data name="amavis_elocal" xml:space="preserve">
    <value>Value for disable Internet sources is not a value!</value>
  </data>
  <data name="amavis_quarantine_level" xml:space="preserve">
    <value>Hits above which a Spam message is Quarantined.</value>
  </data>
  <data name="amavis_dsn_level" xml:space="preserve">
    <value>Hits above which no notification is sent to sender.</value>
  </data>
  <data name="amavis_delete_level" xml:space="preserve">
    <value>Hits above which a Spam message is deleted.</value>
  </data>
  <data name="amavis_report_header" xml:space="preserve">
    <value>Insert X-Spam-Header in Spam message?</value>
  </data>
  <data name="amavis_level_char" xml:space="preserve">
    <value>Character used to display Spam-Level in X-Spam-Level: header.</value>
  </data>
  <data name="amavis_rewrite" xml:space="preserve">
    <value>Modify Subject: header of spam?</value>
  </data>
  <data name="amavis_rsubject" xml:space="preserve">
    <value>Prepend text to Subject: header</value>
  </data>
  <data name="amavis_size_limit" xml:space="preserve">
    <value>Message size in bytes above witch a message is not checked for Spam.</value>
  </data>
  <data name="amavis_local_only" xml:space="preserve">
    <value>Disable Internet sources for Spam checks?</value>
  </data>
  <data name="amavis_quarantine_desc" xml:space="preserve">
    <value>Show where Spam is Quarantined by Amavisd, display also Spam Stats if local Quarantine is enabled. If Quarantine is disabled or forwarded to a mail adress, Spam Stats can not be displayed.</value>
  </data>
  <data name="amavis_quarantine_off" xml:space="preserve">
    <value>Spam Quarantine is disabled on your system. Change &lt;tt&gt;spam_Quarantine_to&lt;/tt&gt; to &lt;tt&gt;spam-quarantine&lt;/tt&gt; in file &lt;tt&gt;$1&lt;/tt&gt; to enable Quaratine.</value>
  </data>
  <data name="amavis_nostat" xml:space="preserve">
    <value>It's not possible to display Spam Stats.</value>
  </data>
  <data name="amavis_spam_admin" xml:space="preserve">
    <value>Mail adress where notifications are sent from (Spam admin)</value>
  </data>
  <data name="amavis_quarantine_mail" xml:space="preserve">
    <value>Spam in Quarantine is forwarded to mail adress</value>
  </data>
  <data name="amavis_quarantine_bsmtp" xml:space="preserve">
    <value>Spam is Quarantined in BSMTP format on local file system as</value>
  </data>
  <data name="amavis_quarantine_local" xml:space="preserve">
    <value>Spam is Quarantined in MBOX format on local file system as </value>
  </data>
  <data name="amavis_quarantine_today" xml:space="preserve">
    <value>Spam mails in Quarantine today (24h)</value>
  </data>
  <data name="amavis_quarantine_week" xml:space="preserve">
    <value>Spam mails in Quarantine this week (7 days)</value>
  </data>
  <data name="amavis_quarantine_month" xml:space="preserve">
    <value>Spam mails in Quarantine this month (30 days)</value>
  </data>
  <data name="amavis_quarantine_total" xml:space="preserve">
    <value>Total number of Spam mails in Quarantine</value>
  </data>
  <data name="procmail_title" xml:space="preserve">
    <value>Procmail Spam Delivery</value>
  </data>
  <data name="procmail_ok" xml:space="preserve">
    <value>Change Procmail Delivery</value>
  </data>
  <data name="procmail_desc" xml:space="preserve">
    <value>The form can be used to change the Procmail configuration that determines what happens to messages classified as spam.</value>
  </data>
  <data name="simple_title" xml:space="preserve">
    <value>Header and Body Tests</value>
  </data>
  <data name="simple_desc" xml:space="preserve">
    <value>This page allows you to define additional tests that SpamAssassin will apply to email, based on message headers, the body content, URLs found in the body. The name assigned to each test is up to you, but is usually something like CONTAINS_FOO.</value>
  </data>
  <data name="simple_switch" xml:space="preserve">
    <value>Switch to advanced mode ..</value>
  </data>
  <data name="simple_header" xml:space="preserve">
    <value>Message tests to apply</value>
  </data>
  <data name="simple_name" xml:space="preserve">
    <value>Test name</value>
  </data>
  <data name="simple_for" xml:space="preserve">
    <value>Check</value>
  </data>
  <data name="simple_regexp" xml:space="preserve">
    <value>Match expression</value>
  </data>
  <data name="simple_score" xml:space="preserve">
    <value>Score to apply</value>
  </data>
  <data name="simple_describe" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="simple_err" xml:space="preserve">
    <value>Failed to save message tests</value>
  </data>
  <data name="before_ecmd" xml:space="preserve">
    <value>Before-saving command failed : $1</value>
  </data>
  <data name="after_ecmd" xml:space="preserve">
    <value>After-saving command failed : $1</value>
  </data>
  <data name="connect_emysql" xml:space="preserve">
    <value>Failed to load the database driver $1</value>
  </data>
  <data name="connect_elogin" xml:space="preserve">
    <value>Failed to login to the database $1 : $2.</value>
  </data>
  <data name="connect_equery" xml:space="preserve">
    <value>The database $1 does not contain the preferences table $2</value>
  </data>
  <data name="connect_eldapmod" xml:space="preserve">
    <value>Perl module $1 needed to communicate with LDAP is not installed or not loadable</value>
  </data>
  <data name="connect_eldap" xml:space="preserve">
    <value>Failed to connect to LDAP server $1 on port $2</value>
  </data>
  <data name="connect_eldaplogin" xml:space="preserve">
    <value>Failed to login to LDAP server $1 as $2 : $3</value>
  </data>
  <data name="connect_ebase" xml:space="preserve">
    <value>LDAP base DN $1 is not valid : $2</value>
  </data>
  <data name="eldap" xml:space="preserve">
    <value>LDAP operation failed : $1</value>
  </data>
  <data name="esql" xml:space="preserve">
    <value>SQL failed : $1</value>
  </data>
  <data name="ldap_euser" xml:space="preserve">
    <value>Could not find LDAP user object for $1</value>
  </data>
  <data name="db_title" xml:space="preserve">
    <value>SQL and LDAP Databases</value>
  </data>
  <data name="db_header" xml:space="preserve">
    <value>Configuration storage database options</value>
  </data>
  <data name="db_dsn" xml:space="preserve">
    <value>Store user configurations in</value>
  </data>
  <data name="db_mode0" xml:space="preserve">
    <value>Configuration files</value>
  </data>
  <data name="db_mode1" xml:space="preserve">
    <value>SQL database</value>
  </data>
  <data name="db_mode3" xml:space="preserve">
    <value>LDAP database</value>
  </data>
  <data name="db_mode4" xml:space="preserve">
    <value>Other DSN</value>
  </data>
  <data name="db_user" xml:space="preserve">
    <value>SQL database username</value>
  </data>
  <data name="db_pass" xml:space="preserve">
    <value>SQL database password</value>
  </data>
  <data name="db_luser" xml:space="preserve">
    <value>LDAP server username</value>
  </data>
  <data name="db_lpass" xml:space="preserve">
    <value>LDAP server password</value>
  </data>
  <data name="db_dbdriver" xml:space="preserve">
    <value>Database type</value>
  </data>
  <data name="db_dbhost" xml:space="preserve">
    <value>Database server hostname</value>
  </data>
  <data name="db_dbdb" xml:space="preserve">
    <value>Database name</value>
  </data>
  <data name="db_dbport" xml:space="preserve">
    <value>Port number</value>
  </data>
  <data name="db_err" xml:space="preserve">
    <value>Failed to save databases</value>
  </data>
  <data name="db_edbhost" xml:space="preserve">
    <value>Missing or invalid SQL server hostname</value>
  </data>
  <data name="db_edbdb" xml:space="preserve">
    <value>Missing or invalid-looking database name</value>
  </data>
  <data name="db_edbport" xml:space="preserve">
    <value>Missing or invalid SQL server port number</value>
  </data>
  <data name="db_edsn" xml:space="preserve">
    <value>Missing other DSN</value>
  </data>
  <data name="db_eusername" xml:space="preserve">
    <value>Missing or invalid database username - no spaces are allowed</value>
  </data>
  <data name="db_ldaphost" xml:space="preserve">
    <value>LDAP server hostname</value>
  </data>
  <data name="db_ldapport" xml:space="preserve">
    <value>Port number</value>
  </data>
  <data name="db_ldapdn" xml:space="preserve">
    <value>Base DN for users</value>
  </data>
  <data name="db_ldapattr" xml:space="preserve">
    <value>Attribute for SpamAssassin preferences</value>
  </data>
  <data name="db_ldapscope" xml:space="preserve">
    <value>Search depth</value>
  </data>
  <data name="db_ldapsub" xml:space="preserve">
    <value>Entire subtree</value>
  </data>
  <data name="db_ldapone" xml:space="preserve">
    <value>One level</value>
  </data>
  <data name="db_ldapbase" xml:space="preserve">
    <value>Base only</value>
  </data>
  <data name="db_ldapuid" xml:space="preserve">
    <value>Attribute for username</value>
  </data>
  <data name="db_eldaphost" xml:space="preserve">
    <value>Missing or invalid LDAP server hostname</value>
  </data>
  <data name="db_eldapport" xml:space="preserve">
    <value>Missing or invalid LDAP server port number</value>
  </data>
  <data name="db_eldapdn" xml:space="preserve">
    <value>Missing or invalid base DN - no spaces are allowed</value>
  </data>
  <data name="db_eldapattr" xml:space="preserve">
    <value>Missing or invalid SpamAssassin attribute</value>
  </data>
  <data name="db_eldapuid" xml:space="preserve">
    <value>Missing or invalid username attribute</value>
  </data>
  <data name="awl_title" xml:space="preserve">
    <value>Manage Auto-Whitelists</value>
  </data>
  <data name="awl_search" xml:space="preserve">
    <value>Search whitelist for:</value>
  </data>
  <data name="awl_ok" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="awl_searching" xml:space="preserve">
    <value>Showing auto-whitelist entries matching $1 ..</value>
  </data>
  <data name="awl_email" xml:space="preserve">
    <value>Email address</value>
  </data>
  <data name="awl_ip" xml:space="preserve">
    <value>Sender's IP or network</value>
  </data>
  <data name="awl_count" xml:space="preserve">
    <value>Messages received</value>
  </data>
  <data name="awl_score" xml:space="preserve">
    <value>Score to apply</value>
  </data>
  <data name="awl_none" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="awl_unknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="awl_delete" xml:space="preserve">
    <value>Remove Selected Entries</value>
  </data>
  <data name="awl_white" xml:space="preserve">
    <value>Permanently Allow</value>
  </data>
  <data name="awl_black" xml:space="preserve">
    <value>Permanently Deny</value>
  </data>
  <data name="awl_cannot" xml:space="preserve">
    <value>Usermin could not open your auto-whitelist file &lt;tt&gt;$1&lt;/tt&gt;, perhaps because it is in an un-supported format.</value>
  </data>
  <data name="awl_empty" xml:space="preserve">
    <value>Your auto-whitelist file &lt;tt&gt;$1&lt;/tt&gt; does not contain any entries. It will be populated by SpamAssassin as mail is processed by the system.</value>
  </data>
  <data name="awl_user" xml:space="preserve">
    <value>Show auto-whitelist for user:</value>
  </data>
  <data name="awl_uok" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="awl_nofile" xml:space="preserve">
    <value>The user $1 does not have an auto-whitelist file.</value>
  </data>
  <data name="awl_nouser" xml:space="preserve">
    <value>The user $1 does not exist.</value>
  </data>
  <data name="awl_cannotuser" xml:space="preserve">
    <value>You are not allowed to edit the auto-whitelist for user $1.</value>
  </data>
  <data name="awl_toomany" xml:space="preserve">
    <value>There are $1 entries in the auto-whitelist, but at most $2 can be displayed. Use the search form above to limit those shown.</value>
  </data>
  <data name="awl_deleteone" xml:space="preserve">
    <value>Clear Auto-Whitelist</value>
  </data>
  <data name="awl_deleteonedesc" xml:space="preserve">
    <value>Remove all auto-whitelist entries for the user $1.</value>
  </data>
  <data name="awl_deleteall" xml:space="preserve">
    <value>Clear All Auto-Whitelists</value>
  </data>
  <data name="awl_deletealldesc" xml:space="preserve">
    <value>Remove all auto-whitelist entries for all users on the system.</value>
  </data>
  <data name="dawl_err" xml:space="preserve">
    <value>Failed to delete from auto-whitelist</value>
  </data>
  <data name="dawl_eopen" xml:space="preserve">
    <value>Could not open whitelist</value>
  </data>
  <data name="dawl_enone" xml:space="preserve">
    <value>No addresses to delete selected</value>
  </data>
  <data name="dawl_ecannot" xml:space="preserve">
    <value>You are not allowed to manage the auto-whitelist for this user</value>
  </data>
  <data name="dawl_doing" xml:space="preserve">
    <value>Deleting auto-whitelists for all users ..</value>
  </data>
  <data name="dawl_done" xml:space="preserve">
    <value>.. deleted $2 entries from $1 users.</value>
  </data>
  <data name="dawl_title" xml:space="preserve">
    <value>Delete All Auto-Whitelists</value>
  </data>
  <data name="manual_title" xml:space="preserve">
    <value>Edit Config Files</value>
  </data>
  <data name="manual_file" xml:space="preserve">
    <value>Edit config file:</value>
  </data>
  <data name="manual_ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="manual_efile" xml:space="preserve">
    <value>Invalid configuration file!</value>
  </data>
  <data name="manual_err" xml:space="preserve">
    <value>Failed to save configuration file</value>
  </data>
  <data name="__norefs" xml:space="preserve">
    <value>1</value>
  </data>
</root>