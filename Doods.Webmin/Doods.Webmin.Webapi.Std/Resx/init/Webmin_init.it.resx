<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Avvio e Spegnimento</value>
  </data>
  <data name="index_add" xml:space="preserve">
    <value>Crea una nuova azione di avvio o spegnimento</value>
  </data>
  <data name="index_reboot" xml:space="preserve">
    <value>Riavvia Sistema</value>
  </data>
  <data name="index_rebootmsg" xml:space="preserve">
    <value>Clicca questo pulsante per riavviare immediatamente il</value>
  </data>
  <data name="index_shutdown" xml:space="preserve">
    <value>Spegni Sistema</value>
  </data>
  <data name="index_shutdownmsg" xml:space="preserve">
    <value>Clicca questo pulsante per spegnere immediatamente il</value>
  </data>
  <data name="index_script" xml:space="preserve">
    <value>Lo script $1 verrà lanciato all'avvio. Puoi aggiungere i</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>azioni di avvio e spegnimento</value>
  </data>
  <data name="edit_title" xml:space="preserve">
    <value>Edit Action</value>
  </data>
  <data name="create_title" xml:space="preserve">
    <value>Create Action</value>
  </data>
  <data name="edit_ecannot" xml:space="preserve">
    <value>You are not allowed to edit bootup actions</value>
  </data>
  <data name="edit_details" xml:space="preserve">
    <value>Action Details</value>
  </data>
  <data name="edit_name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="edit_desc" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="edit_startmsg" xml:space="preserve">
    <value>Bootup message</value>
  </data>
  <data name="edit_stopmsg" xml:space="preserve">
    <value>Shutdown message</value>
  </data>
  <data name="edit_start" xml:space="preserve">
    <value>Bootup commands</value>
  </data>
  <data name="edit_stop" xml:space="preserve">
    <value>Shutdown commands</value>
  </data>
  <data name="edit_script" xml:space="preserve">
    <value>Action Script</value>
  </data>
  <data name="edit_badS" xml:space="preserve">
    <value>Because this action was not created properly, it is started only in runlevel $1.</value>
  </data>
  <data name="edit_badK" xml:space="preserve">
    <value>Because this action was not created properly, it is stopped only in runlevel $1.</value>
  </data>
  <data name="edit_fix" xml:space="preserve">
    <value>Click here to make this action available to other runlevels</value>
  </data>
  <data name="edit_levels" xml:space="preserve">
    <value>Runlevels to start and stop in</value>
  </data>
  <data name="edit_rl" xml:space="preserve">
    <value>Runlevel $1</value>
  </data>
  <data name="edit_startat" xml:space="preserve">
    <value>Start at</value>
  </data>
  <data name="edit_stopat" xml:space="preserve">
    <value>Stop at</value>
  </data>
  <data name="edit_startnow" xml:space="preserve">
    <value>Start Now</value>
  </data>
  <data name="edit_stopnow" xml:space="preserve">
    <value>Stop Now</value>
  </data>
  <data name="edit_return" xml:space="preserve">
    <value>action</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>Failed to save action</value>
  </data>
  <data name="save_ecannot" xml:space="preserve">
    <value>You are not allowed to edit bootup actions</value>
  </data>
  <data name="save_ealready" xml:space="preserve">
    <value>An action called '$1' already exists</value>
  </data>
  <data name="save_ewrite" xml:space="preserve">
    <value>Failed to write to $1 : $2</value>
  </data>
  <data name="ss_ecannot" xml:space="preserve">
    <value>You are not allowed to start or stop bootup actions</value>
  </data>
  <data name="ss_start" xml:space="preserve">
    <value>Start Action</value>
  </data>
  <data name="ss_stop" xml:space="preserve">
    <value>Stop Action</value>
  </data>
  <data name="ss_exec" xml:space="preserve">
    <value>Executing $1 ..</value>
  </data>
  <data name="shutdown_ecannot" xml:space="preserve">
    <value>You are not allowed to shutdown the system</value>
  </data>
  <data name="shutdown_title" xml:space="preserve">
    <value>Shutdown</value>
  </data>
  <data name="shutdown_rusure" xml:space="preserve">
    <value>Are you sure you want to shutdown the system with the command $1 ?</value>
  </data>
  <data name="shutdown_ok" xml:space="preserve">
    <value>Shutdown System</value>
  </data>
  <data name="shutdown_exec" xml:space="preserve">
    <value>Shutting down with command $1 ..</value>
  </data>
  <data name="reboot_ecannot" xml:space="preserve">
    <value>You are not allowed to reboot the system</value>
  </data>
  <data name="reboot_title" xml:space="preserve">
    <value>Reboot</value>
  </data>
  <data name="reboot_rusure" xml:space="preserve">
    <value>Are you sure you want to reboot the system with the command $1 ?</value>
  </data>
  <data name="reboot_ok" xml:space="preserve">
    <value>Reboot System</value>
  </data>
  <data name="reboot_exec" xml:space="preserve">
    <value>Rebooting with command $1 ..</value>
  </data>
  <data name="acl_script" xml:space="preserve">
    <value>Can edit the bootup script?</value>
  </data>
  <data name="acl_actions" xml:space="preserve">
    <value>Can edit, create and delete actions?</value>
  </data>
  <data name="acl_reboot" xml:space="preserve">
    <value>Can reboot the system?</value>
  </data>
  <data name="acl_shutdown" xml:space="preserve">
    <value>Can shutdown the system?</value>
  </data>
</root>