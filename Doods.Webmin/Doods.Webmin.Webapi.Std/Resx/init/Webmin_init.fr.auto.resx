<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_mode" xml:space="preserve">
    <value>Système de démarrage : $1 </value>
  </data>
  <data name="index_downscript" xml:space="preserve">
    <value>De même, le script $1 répertorié ci-dessous sera exécuté au moment de l'arrêt. Vous pouvez ajouter vos propres commandes pour que les démons ou les serveurs s'arrêtent proprement lorsque le système est arrêté.</value>
  </data>
  <data name="index_sname" xml:space="preserve">
    <value>Nom de l'action</value>
  </data>
  <data name="index_sstate" xml:space="preserve">
    <value>État actuel</value>
  </data>
  <data name="index_sboot" xml:space="preserve">
    <value>Commencez au démarrage?</value>
  </data>
  <data name="index_sstate4" xml:space="preserve">
    <value>Fonctionnement</value>
  </data>
  <data name="index_rname" xml:space="preserve">
    <value>Nom de l'action</value>
  </data>
  <data name="index_rboot" xml:space="preserve">
    <value>Commencez au démarrage?</value>
  </data>
  <data name="index_radd" xml:space="preserve">
    <value>Créez une nouvelle action.</value>
  </data>
  <data name="index_unknown" xml:space="preserve">
    <value>Inconnue</value>
  </data>
  <data name="index_uname" xml:space="preserve">
    <value>Nom du service</value>
  </data>
  <data name="index_udesc" xml:space="preserve">
    <value>Description du service</value>
  </data>
  <data name="index_uboot" xml:space="preserve">
    <value>Commencez au démarrage?</value>
  </data>
  <data name="index_ustatus" xml:space="preserve">
    <value>Vous courez maintenant?</value>
  </data>
  <data name="index_uadd" xml:space="preserve">
    <value>Créez un nouveau service parvenu.</value>
  </data>
  <data name="index_sadd" xml:space="preserve">
    <value>Créez un nouveau service systemd.</value>
  </data>
  <data name="index_always" xml:space="preserve">
    <value>Toujours</value>
  </data>
  <data name="index_ladd" xml:space="preserve">
    <value>Créez un nouvel agent launchd.</value>
  </data>
  <data name="index_lname" xml:space="preserve">
    <value>Nom d'agent</value>
  </data>
  <data name="edit_egone" xml:space="preserve">
    <value>L'action n'existe plus</value>
  </data>
  <data name="edit_startcmd" xml:space="preserve">
    <value>Commande de démarrage</value>
  </data>
  <data name="edit_stopcmd" xml:space="preserve">
    <value>Commande d'arrêt</value>
  </data>
  <data name="edit_statuscmd" xml:space="preserve">
    <value>Commande d'état</value>
  </data>
  <data name="edit_reloadnow2" xml:space="preserve">
    <value>Relire le fichier de configuration</value>
  </data>
  <data name="save_ename" xml:space="preserve">
    <value>Nom d'action manquant ou non valide</value>
  </data>
  <data name="save_eclash" xml:space="preserve">
    <value>Une action du même nom existe déjà</value>
  </data>
  <data name="save_escript" xml:space="preserve">
    <value>Aucun script d'action entré</value>
  </data>
  <data name="save_estartcmd" xml:space="preserve">
    <value>Commande de démarrage manquante</value>
  </data>
  <data name="ss_doingstart" xml:space="preserve">
    <value>Démarrage de l'action $1 ..</value>
  </data>
  <data name="ss_doingstop" xml:space="preserve">
    <value>Arrêt de l'action $1 ..</value>
  </data>
  <data name="ss_doingstatus" xml:space="preserve">
    <value>Demande d'état de l'action $1 ..</value>
  </data>
  <data name="acl_runonly" xml:space="preserve">
    <value>Exécuter uniquement</value>
  </data>
  <data name="log_restart" xml:space="preserve">
    <value>Action redémarrée $1 </value>
  </data>
  <data name="log_condrestart" xml:space="preserve">
    <value>Action redémarrée conditionnellement $1 </value>
  </data>
  <data name="log_reload" xml:space="preserve">
    <value>Action rechargée $1 </value>
  </data>
  <data name="log_status" xml:space="preserve">
    <value>État récupéré de l'action $1 </value>
  </data>
  <data name="log_massstart" xml:space="preserve">
    <value>Actions démarrées $1 </value>
  </data>
  <data name="log_massstop" xml:space="preserve">
    <value>Actions arrêtées $1 </value>
  </data>
  <data name="log_massrestart" xml:space="preserve">
    <value>Actions redémarrées $1 </value>
  </data>
  <data name="log_telinit" xml:space="preserve">
    <value>Passé au niveau d'exécution $1 </value>
  </data>
  <data name="edit_hostconfig_startup" xml:space="preserve">
    <value>Le script $1 est exécuté au démarrage du système si cette action est active. Vous pouvez le modifier ci-dessous</value>
  </data>
  <data name="edit_hostconfig_plist" xml:space="preserve">
    <value>Le fichier $1 définit certains paramètres en respectant le script de démarrage. Vous pouvez le modifier ci-dessous</value>
  </data>
  <data name="edit_hostconfig_noquotes" xml:space="preserve">
    <value>N'utilisez de guillemets dans aucun champ à l'exception du champ $1.</value>
  </data>
  <data name="edit_hostconfig_startitems" xml:space="preserve">
    <value>Le champ $1 ne doit pas commencer par un nombre ou un trait de soulignement, et par convention, tous les caractères alphabétiques doivent être en majuscules. Le champ $2 doit être un nom de fichier légal et ne doit pas contenir de point.</value>
  </data>
  <data name="edit_hostconfig_array" xml:space="preserve">
    <value>Les champs $1, $2 et $3 sont des champs de tableau et peuvent contenir plusieurs valeurs. Délimitez plusieurs valeurs avec deux points.</value>
  </data>
  <data name="edit_hostconfig_further" xml:space="preserve">
    <value>Après avoir créé la nouvelle action de démarrage, vous serez redirigé vers une page où vous pourrez modifier le script de démarrage et la liste des paramètres si nécessaire.</value>
  </data>
  <data name="edit_hostconfig_hostconfig" xml:space="preserve">
    <value>Le fichier $1 contrôle les services et les démons à l'échelle du système qui sont démarrés au démarrage du système. Vous pouvez le modifier ci-dessous</value>
  </data>
  <data name="edit_hostconfig_title" xml:space="preserve">
    <value>Modifier Hostconfig</value>
  </data>
  <data name="mass_enone" xml:space="preserve">
    <value>Aucune action sélectionnée</value>
  </data>
  <data name="mass_enone2" xml:space="preserve">
    <value>Aucun service sélectionné</value>
  </data>
  <data name="mass_restart" xml:space="preserve">
    <value>Redémarrage des actions</value>
  </data>
  <data name="mass_ebroken" xml:space="preserve">
    <value>L'action interrompue $1 ne peut pas être activée ou désactivée au démarrage</value>
  </data>
  <data name="mass_enable" xml:space="preserve">
    <value>Activation de l'action $1 au démarrage.</value>
  </data>
  <data name="mass_starting" xml:space="preserve">
    <value>Démarrage de l'action $1 ..</value>
  </data>
  <data name="mass_stopping" xml:space="preserve">
    <value>Arrêt de l'action $1 ..</value>
  </data>
  <data name="mass_failed" xml:space="preserve">
    <value>.. échoué!</value>
  </data>
  <data name="mass_ustart" xml:space="preserve">
    <value>Démarrage des services</value>
  </data>
  <data name="mass_urestart" xml:space="preserve">
    <value>Redémarrer les services</value>
  </data>
  <data name="mass_ustop" xml:space="preserve">
    <value>Arrêt des services</value>
  </data>
  <data name="mass_uenable" xml:space="preserve">
    <value>Activation du service $1 au démarrage.</value>
  </data>
  <data name="mass_udisable" xml:space="preserve">
    <value>Désactivation du service $1 au démarrage.</value>
  </data>
  <data name="mass_ustarting" xml:space="preserve">
    <value>Démarrage du service $1 ..</value>
  </data>
  <data name="mass_ustopping" xml:space="preserve">
    <value>Arrêt du service $1 ..</value>
  </data>
  <data name="mass_urestarting" xml:space="preserve">
    <value>Redémarrage du service $1 ..</value>
  </data>
  <data name="change_err" xml:space="preserve">
    <value>Vous n'êtes pas autorisé à changer de niveau d'exécution</value>
  </data>
  <data name="change_title" xml:space="preserve">
    <value>Switch Runlevel</value>
  </data>
  <data name="change_cmd" xml:space="preserve">
    <value>Passage au niveau d'exécution $1 avec la commande $2. Cela peut prendre un certain temps et Webmin peut ne plus être disponible après le changement.</value>
  </data>
  <data name="mode_init" xml:space="preserve">
    <value>Init SysV</value>
  </data>
  <data name="mode_osx" xml:space="preserve">
    <value>MacOS</value>
  </data>
  <data name="mode_local" xml:space="preserve">
    <value>Script de démarrage unique</value>
  </data>
  <data name="mode_win32" xml:space="preserve">
    <value>Services Windows</value>
  </data>
  <data name="mode_rc" xml:space="preserve">
    <value>Scripts FreeBSD RC</value>
  </data>
  <data name="mode_upstart" xml:space="preserve">
    <value>Parvenu</value>
  </data>
  <data name="mode_systemd" xml:space="preserve">
    <value>Systemd</value>
  </data>
  <data name="mode_launchd" xml:space="preserve">
    <value>LaunchD</value>
  </data>
  <data name="upstart_title1" xml:space="preserve">
    <value>Créer un service Upstart</value>
  </data>
  <data name="upstart_title2" xml:space="preserve">
    <value>Modifier le service Upstart</value>
  </data>
  <data name="upstart_egone" xml:space="preserve">
    <value>Le service n'existe plus!</value>
  </data>
  <data name="upstart_elegacy" xml:space="preserve">
    <value>Pas un service parvenu!</value>
  </data>
  <data name="upstart_header" xml:space="preserve">
    <value>Détails du service Upstart</value>
  </data>
  <data name="upstart_name" xml:space="preserve">
    <value>Nom du service</value>
  </data>
  <data name="upstart_desc" xml:space="preserve">
    <value>Description du service</value>
  </data>
  <data name="upstart_prestart" xml:space="preserve">
    <value>Commandes à exécuter avant de démarrer le serveur &lt;br&gt; (Facultatif)</value>
  </data>
  <data name="upstart_server" xml:space="preserve">
    <value>Programme et paramètres du serveur</value>
  </data>
  <data name="upstart_fork" xml:space="preserve">
    <value>Le serveur bifurque en arrière-plan?</value>
  </data>
  <data name="upstart_conf" xml:space="preserve">
    <value>Fichier de configuration</value>
  </data>
  <data name="upstart_boot" xml:space="preserve">
    <value>Commencez au démarrage?</value>
  </data>
  <data name="upstart_status" xml:space="preserve">
    <value>Statut actuel</value>
  </data>
  <data name="upstart_status0" xml:space="preserve">
    <value>Ne pas courrir</value>
  </data>
  <data name="upstart_status1" xml:space="preserve">
    <value>Exécution avec PID $1 </value>
  </data>
  <data name="upstart_err" xml:space="preserve">
    <value>Échec de l'enregistrement du service parvenu</value>
  </data>
  <data name="upstart_econf" xml:space="preserve">
    <value>Aucun contenu de fichier de configuration entré</value>
  </data>
  <data name="upstart_ename" xml:space="preserve">
    <value>Nom du service par défaut de recherche manquante ou non valide</value>
  </data>
  <data name="upstart_eclash" xml:space="preserve">
    <value>Un service du même nom existe déjà</value>
  </data>
  <data name="upstart_edesc" xml:space="preserve">
    <value>Description du service manquante</value>
  </data>
  <data name="upstart_eserver" xml:space="preserve">
    <value>Aucune commande serveur entrée</value>
  </data>
  <data name="upstart_eserver2" xml:space="preserve">
    <value>La commande serveur n'existe pas</value>
  </data>
  <data name="upstart_eserver3" xml:space="preserve">
    <value>Une seule commande serveur peut être entrée</value>
  </data>
  <data name="upstart_return" xml:space="preserve">
    <value>service parvenu</value>
  </data>
  <data name="systemd_title1" xml:space="preserve">
    <value>Créer un service Systemd</value>
  </data>
  <data name="systemd_title2" xml:space="preserve">
    <value>Modifier le service Systemd</value>
  </data>
  <data name="systemd_egone" xml:space="preserve">
    <value>Le service n'existe plus!</value>
  </data>
  <data name="systemd_elegacy" xml:space="preserve">
    <value>Pas un service systemd!</value>
  </data>
  <data name="systemd_header" xml:space="preserve">
    <value>Détails du service Systemd</value>
  </data>
  <data name="systemd_name" xml:space="preserve">
    <value>Nom du service</value>
  </data>
  <data name="systemd_desc" xml:space="preserve">
    <value>Description du service</value>
  </data>
  <data name="systemd_start" xml:space="preserve">
    <value>Commandes à exécuter au démarrage</value>
  </data>
  <data name="systemd_stop" xml:space="preserve">
    <value>Commandes à exécuter à l'arrêt</value>
  </data>
  <data name="systemd_conf" xml:space="preserve">
    <value>Configuration de Systemd</value>
  </data>
  <data name="systemd_boot" xml:space="preserve">
    <value>Commencez au démarrage?</value>
  </data>
  <data name="systemd_status" xml:space="preserve">
    <value>Statut actuel</value>
  </data>
  <data name="systemd_status0" xml:space="preserve">
    <value>Ne pas courrir</value>
  </data>
  <data name="systemd_status1" xml:space="preserve">
    <value>Exécution avec PID $1 </value>
  </data>
  <data name="systemd_status2" xml:space="preserve">
    <value>Fonctionnement</value>
  </data>
  <data name="systemd_status3" xml:space="preserve">
    <value>Inconnue!</value>
  </data>
  <data name="systemd_err" xml:space="preserve">
    <value>Impossible d'enregistrer le service systemd</value>
  </data>
  <data name="systemd_ename" xml:space="preserve">
    <value>Nom du service systemd de recherche manquant ou invalide</value>
  </data>
  <data name="systemd_eclash" xml:space="preserve">
    <value>Un service du même nom existe déjà</value>
  </data>
  <data name="systemd_edesc" xml:space="preserve">
    <value>Description du service manquante</value>
  </data>
  <data name="systemd_return" xml:space="preserve">
    <value>service systemd</value>
  </data>
  <data name="systemd_econf" xml:space="preserve">
    <value>Aucune configuration systemd entrée</value>
  </data>
  <data name="systemd_estart" xml:space="preserve">
    <value>Commandes manquantes à exécuter au démarrage</value>
  </data>
  <data name="launchd_title1" xml:space="preserve">
    <value>Créer l'agent Launchd</value>
  </data>
  <data name="launchd_title2" xml:space="preserve">
    <value>Modifier l'agent Launchd</value>
  </data>
  <data name="launchd_egone" xml:space="preserve">
    <value>L'agent n'existe plus!</value>
  </data>
  <data name="launchd_header" xml:space="preserve">
    <value>Détails du service Launchd</value>
  </data>
  <data name="launchd_name" xml:space="preserve">
    <value>Nom d'agent</value>
  </data>
  <data name="launchd_file" xml:space="preserve">
    <value>Fichier de configuration</value>
  </data>
  <data name="launchd_nofile" xml:space="preserve">
    <value>Pas trouvé!</value>
  </data>
  <data name="launchd_start" xml:space="preserve">
    <value>Commande serveur</value>
  </data>
  <data name="launchd_conf" xml:space="preserve">
    <value>Configuration Launchd</value>
  </data>
  <data name="launchd_boot" xml:space="preserve">
    <value>Commencez au démarrage?</value>
  </data>
  <data name="launchd_status" xml:space="preserve">
    <value>Statut actuel</value>
  </data>
  <data name="launchd_status0" xml:space="preserve">
    <value>Ne pas courrir</value>
  </data>
  <data name="launchd_status1" xml:space="preserve">
    <value>Exécution avec PID $1 </value>
  </data>
  <data name="launchd_status2" xml:space="preserve">
    <value>Fonctionnement</value>
  </data>
  <data name="launchd_err" xml:space="preserve">
    <value>Échec de l'enregistrement de l'agent launchd</value>
  </data>
  <data name="launchd_ename" xml:space="preserve">
    <value>Nom d'agent launchd manquant ou non valide</value>
  </data>
  <data name="launchd_eclash" xml:space="preserve">
    <value>Un agent du même nom existe déjà</value>
  </data>
  <data name="launchd_return" xml:space="preserve">
    <value>agent launchd</value>
  </data>
  <data name="launchd_econf" xml:space="preserve">
    <value>Aucune configuration launchd entrée</value>
  </data>
  <data name="launchd_estart" xml:space="preserve">
    <value>Commande serveur manquante</value>
  </data>
  <data name="syslog_journalctl" xml:space="preserve">
    <value>Journaux SystemD</value>
  </data>
</root>