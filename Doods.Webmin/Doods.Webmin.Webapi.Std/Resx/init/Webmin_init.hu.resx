<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Bootup and Shutdown</value>
  </data>
  <data name="index_mode" xml:space="preserve">
    <value>Boot system : $1</value>
  </data>
  <data name="index_add" xml:space="preserve">
    <value>Create a new bootup and shutdown action.</value>
  </data>
  <data name="index_reboot" xml:space="preserve">
    <value>Reboot System</value>
  </data>
  <data name="index_rebootmsg" xml:space="preserve">
    <value>Click on this button to immediately reboot the system. All currently logged in users will be disconnected and all services will be re-started.</value>
  </data>
  <data name="index_shutdown" xml:space="preserve">
    <value>Shutdown System</value>
  </data>
  <data name="index_shutdownmsg" xml:space="preserve">
    <value>Click on this button to immediately shutdown the system. All services will be stopped, all users disconnected and the system powered off (if your hardware supports it).</value>
  </data>
  <data name="index_script" xml:space="preserve">
    <value>The script $1 listed below will be run at bootup time. You may add your own commands to have daemons or servers re-started when the system is re-booted.</value>
  </data>
  <data name="index_downscript" xml:space="preserve">
    <value>Similarly, the script $1 listed below will be run at shutdown time. You may add your own commands to have daemons or servers stopped cleanly when the system is shut down.</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>bootup and shutdown actions</value>
  </data>
  <data name="index_action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="index_desc" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="index_boot" xml:space="preserve">
    <value>At boot?</value>
  </data>
  <data name="index_levels" xml:space="preserve">
    <value>Start in runlevels</value>
  </data>
  <data name="index_status" xml:space="preserve">
    <value>Started now?</value>
  </data>
  <data name="index_order" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="index_add_mac" xml:space="preserve">
    <value>Add a new bootup action script</value>
  </data>
  <data name="index_provides" xml:space="preserve">
    <value>Provides</value>
  </data>
  <data name="index_setting" xml:space="preserve">
    <value>Setting</value>
  </data>
  <data name="index_script_mac" xml:space="preserve">
    <value>The script $1 listed below will be run at bootup time. However, it is suggested that you add your own commands to have daemons or servers started upon system boot to the startup directory.</value>
  </data>
  <data name="index_editconfig" xml:space="preserve">
    <value>Edit the $1 file manually</value>
  </data>
  <data name="index_stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="index_start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="index_restart" xml:space="preserve">
    <value>Restart</value>
  </data>
  <data name="index_rlchange" xml:space="preserve">
    <value>Change to runlevel:</value>
  </data>
  <data name="index_rlchangedesc" xml:space="preserve">
    <value>Click this button to switch your system from the current runlevel to the selected one. This will cause all the actions in the current level to be stopped, and then all the actions in the new runlevel to be started.</value>
  </data>
  <data name="index_addboot" xml:space="preserve">
    <value>Start On Boot</value>
  </data>
  <data name="index_delboot" xml:space="preserve">
    <value>Disable On Boot</value>
  </data>
  <data name="index_addboot_start" xml:space="preserve">
    <value>Start Now and On Boot</value>
  </data>
  <data name="index_delboot_stop" xml:space="preserve">
    <value>Disable Now and On Boot</value>
  </data>
  <data name="index_sname" xml:space="preserve">
    <value>Action name</value>
  </data>
  <data name="index_sdesc" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="index_stype" xml:space="preserve">
    <value>Service type</value>
  </data>
  <data name="index_sstate" xml:space="preserve">
    <value>Current state</value>
  </data>
  <data name="index_sboot" xml:space="preserve">
    <value>Start at boot?</value>
  </data>
  <data name="index_sstate4" xml:space="preserve">
    <value>Running</value>
  </data>
  <data name="index_sstate1" xml:space="preserve">
    <value>Stopped</value>
  </data>
  <data name="index_sboot2" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="index_sboot3" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="index_sboot4" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="index_rname" xml:space="preserve">
    <value>Action name</value>
  </data>
  <data name="index_rdesc" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="index_rboot" xml:space="preserve">
    <value>Start at boot?</value>
  </data>
  <data name="index_radd" xml:space="preserve">
    <value>Create a new action.</value>
  </data>
  <data name="index_unknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="index_uname" xml:space="preserve">
    <value>Service name</value>
  </data>
  <data name="index_udesc" xml:space="preserve">
    <value>Service description</value>
  </data>
  <data name="index_uboot" xml:space="preserve">
    <value>Start at boot?</value>
  </data>
  <data name="index_ustatus" xml:space="preserve">
    <value>Running now?</value>
  </data>
  <data name="index_uadd" xml:space="preserve">
    <value>Create a new upstart service.</value>
  </data>
  <data name="edit_title" xml:space="preserve">
    <value>Edit Action</value>
  </data>
  <data name="create_title" xml:space="preserve">
    <value>Create Action</value>
  </data>
  <data name="edit_ecannot" xml:space="preserve">
    <value>You are not allowed to edit bootup actions</value>
  </data>
  <data name="edit_egone" xml:space="preserve">
    <value>Action no longer exists</value>
  </data>
  <data name="edit_details" xml:space="preserve">
    <value>Action Details</value>
  </data>
  <data name="edit_name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="edit_desc" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="edit_startmsg" xml:space="preserve">
    <value>Bootup message</value>
  </data>
  <data name="edit_stopmsg" xml:space="preserve">
    <value>Shutdown message</value>
  </data>
  <data name="edit_start" xml:space="preserve">
    <value>Bootup commands</value>
  </data>
  <data name="edit_stop" xml:space="preserve">
    <value>Shutdown commands</value>
  </data>
  <data name="edit_startcmd" xml:space="preserve">
    <value>Bootup command</value>
  </data>
  <data name="edit_stopcmd" xml:space="preserve">
    <value>Shutdown command</value>
  </data>
  <data name="edit_statuscmd" xml:space="preserve">
    <value>Status command</value>
  </data>
  <data name="edit_script" xml:space="preserve">
    <value>Action Script</value>
  </data>
  <data name="edit_boot" xml:space="preserve">
    <value>Start at boot time?</value>
  </data>
  <data name="edit_badS" xml:space="preserve">
    <value>Because this action was not created properly, it is started only in runlevel $1.</value>
  </data>
  <data name="edit_badK" xml:space="preserve">
    <value>Because this action was not created properly, it is stopped only in runlevel $1.</value>
  </data>
  <data name="edit_fix" xml:space="preserve">
    <value>Click here to make this action available to other runlevels</value>
  </data>
  <data name="edit_levels" xml:space="preserve">
    <value>Runlevels to start and stop in</value>
  </data>
  <data name="edit_rl" xml:space="preserve">
    <value>Runlevel $1</value>
  </data>
  <data name="edit_startat" xml:space="preserve">
    <value>Start at</value>
  </data>
  <data name="edit_stopat" xml:space="preserve">
    <value>Stop at</value>
  </data>
  <data name="edit_startnow" xml:space="preserve">
    <value>Start Now</value>
  </data>
  <data name="edit_stopnow" xml:space="preserve">
    <value>Stop Now</value>
  </data>
  <data name="edit_restartnow" xml:space="preserve">
    <value>Restart Now</value>
  </data>
  <data name="edit_condrestartnow" xml:space="preserve">
    <value>Restart If Needed</value>
  </data>
  <data name="edit_reloadnow" xml:space="preserve">
    <value>Reload Now</value>
  </data>
  <data name="edit_statusnow" xml:space="preserve">
    <value>Show Status</value>
  </data>
  <data name="edit_return" xml:space="preserve">
    <value>action</value>
  </data>
  <data name="edit_status" xml:space="preserve">
    <value>Started now?</value>
  </data>
  <data name="edit_unknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>Failed to save action</value>
  </data>
  <data name="save_ecannot" xml:space="preserve">
    <value>You are not allowed to edit bootup actions</value>
  </data>
  <data name="save_ealready" xml:space="preserve">
    <value>An action called '$1' already exists</value>
  </data>
  <data name="save_ewrite" xml:space="preserve">
    <value>Failed to write to $1 : $2</value>
  </data>
  <data name="save_ename" xml:space="preserve">
    <value>Missing or invalid action name</value>
  </data>
  <data name="save_eclash" xml:space="preserve">
    <value>An action with the same name already exists</value>
  </data>
  <data name="save_escript" xml:space="preserve">
    <value>No action script entered</value>
  </data>
  <data name="save_estartcmd" xml:space="preserve">
    <value>Missing bootup command</value>
  </data>
  <data name="ss_ecannot" xml:space="preserve">
    <value>You are not allowed to start or stop bootup actions</value>
  </data>
  <data name="ss_start" xml:space="preserve">
    <value>Start Action</value>
  </data>
  <data name="ss_stop" xml:space="preserve">
    <value>Stop Action</value>
  </data>
  <data name="ss_restart" xml:space="preserve">
    <value>Restart Action</value>
  </data>
  <data name="ss_reload" xml:space="preserve">
    <value>Reloading Action</value>
  </data>
  <data name="ss_status" xml:space="preserve">
    <value>Action Status</value>
  </data>
  <data name="ss_exec" xml:space="preserve">
    <value>Executing $1 ..</value>
  </data>
  <data name="ss_doingstart" xml:space="preserve">
    <value>Starting action $1 ..</value>
  </data>
  <data name="ss_doingstop" xml:space="preserve">
    <value>Stopping action $1 ..</value>
  </data>
  <data name="ss_doingstatus" xml:space="preserve">
    <value>Requesting status of action $1 ..</value>
  </data>
  <data name="shutdown_ecannot" xml:space="preserve">
    <value>You are not allowed to shutdown the system</value>
  </data>
  <data name="shutdown_title" xml:space="preserve">
    <value>Shutdown</value>
  </data>
  <data name="shutdown_rusure" xml:space="preserve">
    <value>Are you sure you want to shutdown the system with the command $1 ?</value>
  </data>
  <data name="shutdown_ok" xml:space="preserve">
    <value>Shutdown System</value>
  </data>
  <data name="shutdown_exec" xml:space="preserve">
    <value>Shutting down with command $1 ..</value>
  </data>
  <data name="reboot_ecannot" xml:space="preserve">
    <value>You are not allowed to reboot the system</value>
  </data>
  <data name="reboot_title" xml:space="preserve">
    <value>Reboot</value>
  </data>
  <data name="reboot_rusure" xml:space="preserve">
    <value>Are you sure you want to reboot the system with the command $1 ?</value>
  </data>
  <data name="reboot_ok" xml:space="preserve">
    <value>Reboot System</value>
  </data>
  <data name="reboot_exec" xml:space="preserve">
    <value>Rebooting with command $1 ..</value>
  </data>
  <data name="acl_script" xml:space="preserve">
    <value>Can edit the bootup script?</value>
  </data>
  <data name="acl_actions" xml:space="preserve">
    <value>Can run, edit, create and delete actions?</value>
  </data>
  <data name="acl_runonly" xml:space="preserve">
    <value>Only run</value>
  </data>
  <data name="acl_reboot" xml:space="preserve">
    <value>Can reboot the system?</value>
  </data>
  <data name="acl_shutdown" xml:space="preserve">
    <value>Can shutdown the system?</value>
  </data>
  <data name="log_rename" xml:space="preserve">
    <value>Renamed action $1 to $2</value>
  </data>
  <data name="log_modify" xml:space="preserve">
    <value>Modified action $1</value>
  </data>
  <data name="log_create" xml:space="preserve">
    <value>Created action $1</value>
  </data>
  <data name="log_delete" xml:space="preserve">
    <value>Deleted action $1</value>
  </data>
  <data name="log_start" xml:space="preserve">
    <value>Started action $1</value>
  </data>
  <data name="log_stop" xml:space="preserve">
    <value>Stopped action $1</value>
  </data>
  <data name="log_restart" xml:space="preserve">
    <value>Restarted action $1</value>
  </data>
  <data name="log_condrestart" xml:space="preserve">
    <value>Conditionally restarted action $1</value>
  </data>
  <data name="log_reload" xml:space="preserve">
    <value>Reloaded action $1</value>
  </data>
  <data name="log_status" xml:space="preserve">
    <value>Fetched status of action $1</value>
  </data>
  <data name="log_reboot" xml:space="preserve">
    <value>Rebooted system</value>
  </data>
  <data name="log_shutdown" xml:space="preserve">
    <value>Shutdown system</value>
  </data>
  <data name="log_local" xml:space="preserve">
    <value>Modified bootup script</value>
  </data>
  <data name="log_bootup" xml:space="preserve">
    <value>Changed boot action for $1</value>
  </data>
  <data name="log_massstart" xml:space="preserve">
    <value>Started actions $1</value>
  </data>
  <data name="log_massstop" xml:space="preserve">
    <value>Stopped actions $1</value>
  </data>
  <data name="log_massrestart" xml:space="preserve">
    <value>Restarted actions $1</value>
  </data>
  <data name="log_massenable" xml:space="preserve">
    <value>Enabled actions $1</value>
  </data>
  <data name="log_massdisable" xml:space="preserve">
    <value>Disabled actions $1</value>
  </data>
  <data name="log_telinit" xml:space="preserve">
    <value>Switched to runlevel $1</value>
  </data>
  <data name="edit_hostconfig_startup" xml:space="preserve">
    <value>The script $1 is run at system boot time if this action is active. You may edit it below</value>
  </data>
  <data name="edit_hostconfig_plist" xml:space="preserve">
    <value>The file $1 sets certain parameters with respect the boot script. You may edit it below</value>
  </data>
  <data name="edit_hostconfig_new" xml:space="preserve">
    <value>Create New Action</value>
  </data>
  <data name="edit_hostconfig_noquotes" xml:space="preserve">
    <value>Do not use quotes in any fields except for the $1 field.</value>
  </data>
  <data name="edit_hostconfig_startitems" xml:space="preserve">
    <value>The $1 field should not start with a number or underscore, and by convention, all alphabetical characters should be upper case. The $2 field should be a legal filename and should not contain a dot.</value>
  </data>
  <data name="edit_hostconfig_actionname" xml:space="preserve">
    <value>Action name</value>
  </data>
  <data name="edit_hostconfig_scriptname" xml:space="preserve">
    <value>Script name</value>
  </data>
  <data name="edit_hostconfig_array" xml:space="preserve">
    <value>The fields $1, $2, and $3 are array fields and can contain more than one value. Delimitate multiple values with a colon.</value>
  </data>
  <data name="edit_hostconfig_further" xml:space="preserve">
    <value>After creating the new startup action, you will be forwarded to a page where you can tweak the startup script and parameter list if needed.</value>
  </data>
  <data name="edit_hostconfig_hostconfig" xml:space="preserve">
    <value>The file $1 controls system wide services and daemons that are started at system boot. You may edit it below</value>
  </data>
  <data name="edit_hostconfig_title" xml:space="preserve">
    <value>Edit Hostconfig</value>
  </data>
  <data name="mass_enone" xml:space="preserve">
    <value>No actions selected</value>
  </data>
  <data name="mass_enone2" xml:space="preserve">
    <value>No services selected</value>
  </data>
  <data name="mass_start" xml:space="preserve">
    <value>Starting Actions</value>
  </data>
  <data name="mass_restart" xml:space="preserve">
    <value>Restarting Actions</value>
  </data>
  <data name="mass_stop" xml:space="preserve">
    <value>Stopping Actions</value>
  </data>
  <data name="mass_ebroken" xml:space="preserve">
    <value>The broken action $1 cannot be enabled or disabled at boot time</value>
  </data>
  <data name="mass_enable" xml:space="preserve">
    <value>Enabling action $1 at boot time.</value>
  </data>
  <data name="mass_disable" xml:space="preserve">
    <value>Disabling action $1 at boot time.</value>
  </data>
  <data name="mass_starting" xml:space="preserve">
    <value>Starting action $1 ..</value>
  </data>
  <data name="mass_stopping" xml:space="preserve">
    <value>Stopping action $1 ..</value>
  </data>
  <data name="mass_failed" xml:space="preserve">
    <value>.. failed!</value>
  </data>
  <data name="mass_ok" xml:space="preserve">
    <value>.. done.</value>
  </data>
  <data name="mass_ustart" xml:space="preserve">
    <value>Starting Services</value>
  </data>
  <data name="mass_urestart" xml:space="preserve">
    <value>Restarting Services</value>
  </data>
  <data name="mass_ustop" xml:space="preserve">
    <value>Stopping Services</value>
  </data>
  <data name="mass_uenable" xml:space="preserve">
    <value>Enabling service $1 at boot time.</value>
  </data>
  <data name="mass_udisable" xml:space="preserve">
    <value>Disabling service $1 at boot time.</value>
  </data>
  <data name="mass_ustarting" xml:space="preserve">
    <value>Starting service $1 ..</value>
  </data>
  <data name="mass_ustopping" xml:space="preserve">
    <value>Stopping service $1 ..</value>
  </data>
  <data name="mass_urestarting" xml:space="preserve">
    <value>Restarting service $1 ..</value>
  </data>
  <data name="change_err" xml:space="preserve">
    <value>You are not allowed to switch runlevels</value>
  </data>
  <data name="change_title" xml:space="preserve">
    <value>Switch Runlevel</value>
  </data>
  <data name="change_cmd" xml:space="preserve">
    <value>Switching to runlevel $1 with command $2. This may take some time, and Webmin might not be available anymore after switching.</value>
  </data>
  <data name="mode_init" xml:space="preserve">
    <value>SysV init</value>
  </data>
  <data name="mode_osx" xml:space="preserve">
    <value>MacOS</value>
  </data>
  <data name="mode_local" xml:space="preserve">
    <value>Single boot script</value>
  </data>
  <data name="mode_win32" xml:space="preserve">
    <value>Windows services</value>
  </data>
  <data name="mode_rc" xml:space="preserve">
    <value>FreeBSD RC scripts</value>
  </data>
  <data name="mode_upstart" xml:space="preserve">
    <value>Upstart</value>
  </data>
  <data name="upstart_title1" xml:space="preserve">
    <value>Create Upstart Service</value>
  </data>
  <data name="upstart_title2" xml:space="preserve">
    <value>Edit Upstart Service</value>
  </data>
  <data name="upstart_egone" xml:space="preserve">
    <value>Service no longer exists!</value>
  </data>
  <data name="upstart_elegacy" xml:space="preserve">
    <value>Not an upstart service!</value>
  </data>
  <data name="upstart_header" xml:space="preserve">
    <value>Upstart service details</value>
  </data>
  <data name="upstart_name" xml:space="preserve">
    <value>Service name</value>
  </data>
  <data name="upstart_desc" xml:space="preserve">
    <value>Service description</value>
  </data>
  <data name="upstart_prestart" xml:space="preserve">
    <value>Commands to run before starting server&lt;br&gt;(Optional)</value>
  </data>
  <data name="upstart_server" xml:space="preserve">
    <value>Server program and parameters</value>
  </data>
  <data name="upstart_fork" xml:space="preserve">
    <value>Server forks into the background?</value>
  </data>
  <data name="upstart_conf" xml:space="preserve">
    <value>Configuration file</value>
  </data>
  <data name="upstart_boot" xml:space="preserve">
    <value>Start at boot time?</value>
  </data>
  <data name="upstart_status" xml:space="preserve">
    <value>Current status</value>
  </data>
  <data name="upstart_status0" xml:space="preserve">
    <value>Not running</value>
  </data>
  <data name="upstart_status1" xml:space="preserve">
    <value>Running with PID $1</value>
  </data>
  <data name="upstart_err" xml:space="preserve">
    <value>Failed to save upstart service</value>
  </data>
  <data name="upstart_econf" xml:space="preserve">
    <value>No configuration file contents entered</value>
  </data>
  <data name="upstart_ename" xml:space="preserve">
    <value>Missing or invalid-lookup upstart service name</value>
  </data>
  <data name="upstart_eclash" xml:space="preserve">
    <value>A service with the same name already exists</value>
  </data>
  <data name="upstart_edesc" xml:space="preserve">
    <value>Missing service description</value>
  </data>
  <data name="upstart_eserver" xml:space="preserve">
    <value>No server command entered</value>
  </data>
  <data name="upstart_eserver2" xml:space="preserve">
    <value>Server command does not exist</value>
  </data>
  <data name="upstart_eserver3" xml:space="preserve">
    <value>Only one server command can be entered</value>
  </data>
  <data name="upstart_return" xml:space="preserve">
    <value>upstart service</value>
  </data>
</root>