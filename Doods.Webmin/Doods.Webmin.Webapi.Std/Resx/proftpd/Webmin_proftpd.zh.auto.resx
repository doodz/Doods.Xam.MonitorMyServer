<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_applymsg2" xml:space="preserve">
    <value>单击此按钮可通过停止并重新启动ProFTPD来应用当前配置。</value>
  </data>
  <data name="index_stop" xml:space="preserve">
    <value>停止服务器</value>
  </data>
  <data name="index_stopmsg" xml:space="preserve">
    <value>单击此按钮停止FTP服务器，这将阻止任何新的FTP客户端连接。</value>
  </data>
  <data name="index_proftpd" xml:space="preserve">
    <value>ProFTPd</value>
  </data>
  <data name="dir_header5" xml:space="preserve">
    <value>对于全局目录 $1</value>
  </data>
  <data name="manual_configs" xml:space="preserve">
    <value>编辑配置文件</value>
  </data>
  <data name="manual_ecannot" xml:space="preserve">
    <value>不允许您手动编辑指令</value>
  </data>
  <data name="manual_file" xml:space="preserve">
    <value>在文件中编辑指令：</value>
  </data>
  <data name="manual_efile" xml:space="preserve">
    <value>无效的ProFTPd配置文件</value>
  </data>
  <data name="manual_etest" xml:space="preserve">
    <value>检测到配置文件错误： $1</value>
  </data>
  <data name="limit_header7" xml:space="preserve">
    <value>对于全局命令 $1</value>
  </data>
  <data name="dserv_eanondir" xml:space="preserve">
    <value>目录必须位于匿名FTP目录下</value>
  </data>
  <data name="mod_core_octal" xml:space="preserve">
    <value>八面膜</value>
  </data>
  <data name="mod_core_umask_d" xml:space="preserve">
    <value>新目录掩码</value>
  </data>
  <data name="mod_core_nowhere" xml:space="preserve">
    <value>记录已禁用</value>
  </data>
  <data name="mod_core_firstcdt" xml:space="preserve">
    <value>总是显示</value>
  </data>
  <data name="mod_core_filelimit" xml:space="preserve">
    <value>打开文件限制</value>
  </data>
  <data name="mod_ls_fakeasuser" xml:space="preserve">
    <value>是的，作为用户 ..</value>
  </data>
  <data name="mod_ls_fakesameuser" xml:space="preserve">
    <value>连接的用户</value>
  </data>
  <data name="mod_ls_fakeasgroup" xml:space="preserve">
    <value>是的，作为一个小组 ..</value>
  </data>
  <data name="mod_ls_fakesamegroup" xml:space="preserve">
    <value>连接组</value>
  </data>
  <data name="mod_ls_efakeuser" xml:space="preserve">
    <value>丢失或无效的假用户</value>
  </data>
  <data name="mod_ls_efakegroup" xml:space="preserve">
    <value>假组缺失或无效</value>
  </data>
  <data name="mod_ls_options" xml:space="preserve">
    <value>目录列表选项</value>
  </data>
  <data name="mod_ls_strict" xml:space="preserve">
    <value>覆盖用户选项？</value>
  </data>
  <data name="mod_auth_home" xml:space="preserve">
    <value>主目录</value>
  </data>
  <data name="mod_auth_none" xml:space="preserve">
    <value>没有</value>
  </data>
  <data name="stop_err" xml:space="preserve">
    <value>停止FTP服务器失败</value>
  </data>
  <data name="stop_einetd" xml:space="preserve">
    <value>在inetd模式下，无法停止服务器守护程序。</value>
  </data>
  <data name="stop_erun" xml:space="preserve">
    <value>没有运行</value>
  </data>
  <data name="apply_err" xml:space="preserve">
    <value>无法应用FTP配置</value>
  </data>
  <data name="apply_egone" xml:space="preserve">
    <value>不再运行</value>
  </data>
  <data name="log_anonc" xml:space="preserve">
    <value>为服务器 $1设置匿名FTP</value>
  </data>
  <data name="log_anons" xml:space="preserve">
    <value>为服务器 $1重新配置了匿名FTP</value>
  </data>
  <data name="log_anond" xml:space="preserve">
    <value>删除服务器 $1的匿名FTP</value>
  </data>
  <data name="log_anonm" xml:space="preserve">
    <value>手动编辑服务器 $1的匿名FTP</value>
  </data>
  <data name="log_anon" xml:space="preserve">
    <value>服务器 $2的匿名FTP中的 $1已更改</value>
  </data>
  <data name="eafter" xml:space="preserve">
    <value>配置验证失败： $1尚未保存更改。</value>
  </data>
  <data name="proftpd_apply" xml:space="preserve">
    <value>应用更改</value>
  </data>
  <data name="proftpd_stop" xml:space="preserve">
    <value>停止ProFTPd</value>
  </data>
  <data name="proftpd_start" xml:space="preserve">
    <value>启动ProFTPd</value>
  </data>
</root>