<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_zone" xml:space="preserve">
    <value>區</value>
  </data>
  <data name="index_mem2" xml:space="preserve">
    <value>&lt;b&gt;實際內存：&lt;/b&gt;總計 $1 /空閒 $2</value>
  </data>
  <data name="index_mem3" xml:space="preserve">
    <value>&lt;b&gt;實際內存：&lt;/b&gt;總計 $1 /空閒 $2 /已緩存 $3</value>
  </data>
  <data name="index_swap2" xml:space="preserve">
    <value>&lt;b&gt;交換空間：&lt;/b&gt;總計 $1 /空閒 $2</value>
  </data>
  <data name="index_burst" xml:space="preserve">
    <value>&lt;b&gt;可突發內存：&lt;/b&gt;總計 $1</value>
  </data>
  <data name="index_loadname" xml:space="preserve">
    <value>平均CPU負載：</value>
  </data>
  <data name="index_loadnums" xml:space="preserve">
    <value>$1（1分鐘）， $2（5分鐘）， $3（15分鐘）</value>
  </data>
  <data name="index_cpuname" xml:space="preserve">
    <value>CPU類型：</value>
  </data>
  <data name="index_inzone" xml:space="preserve">
    <value>在 $1區域</value>
  </data>
  <data name="stime" xml:space="preserve">
    <value>已開始</value>
  </data>
  <data name="sclass" xml:space="preserve">
    <value>IO調度類</value>
  </data>
  <data name="sprio" xml:space="preserve">
    <value>IO優先級</value>
  </data>
  <data name="search_cpupc" xml:space="preserve">
    <value>使用超過 $1％的CPU</value>
  </data>
  <data name="search_cpupc2" xml:space="preserve">
    <value>使用更多的CPU</value>
  </data>
  <data name="search_ignore" xml:space="preserve">
    <value>忽略結果中的搜索過程</value>
  </data>
  <data name="search_sigterm" xml:space="preserve">
    <value>終止流程</value>
  </data>
  <data name="search_sigkill" xml:space="preserve">
    <value>殺死進程</value>
  </data>
  <data name="search_port" xml:space="preserve">
    <value>使用端口</value>
  </data>
  <data name="search_protocol" xml:space="preserve">
    <value>協議</value>
  </data>
  <data name="search_ip" xml:space="preserve">
    <value>使用IP地址</value>
  </data>
  <data name="run_ecannot" xml:space="preserve">
    <value>您不允許運行命令</value>
  </data>
  <data name="run_as" xml:space="preserve">
    <value>以用戶身份運行</value>
  </data>
  <data name="run_euser" xml:space="preserve">
    <value>用戶名缺失或無效</value>
  </data>
  <data name="run_euser2" xml:space="preserve">
    <value>您不允許以所選用戶身份運行命令</value>
  </data>
  <data name="edit_subid" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="edit_subcmd" xml:space="preserve">
    <value>子流程命令</value>
  </data>
  <data name="edit_prilow" xml:space="preserve">
    <value>低優先級</value>
  </data>
  <data name="edit_prihigh" xml:space="preserve">
    <value>高優先級</value>
  </data>
  <data name="edit_pridef" xml:space="preserve">
    <value>默認</value>
  </data>
  <data name="edit_none" xml:space="preserve">
    <value>沒有</value>
  </data>
  <data name="edit_ecannot" xml:space="preserve">
    <value>您無權編輯流程</value>
  </data>
  <data name="edit_sigterm" xml:space="preserve">
    <value>終止</value>
  </data>
  <data name="edit_sigkill" xml:space="preserve">
    <value>殺</value>
  </data>
  <data name="edit_sigstop" xml:space="preserve">
    <value>暫停</value>
  </data>
  <data name="edit_sigcont" xml:space="preserve">
    <value>恢復</value>
  </data>
  <data name="edit_open" xml:space="preserve">
    <value>文件和連接</value>
  </data>
  <data name="edit_trace" xml:space="preserve">
    <value>追踪過程</value>
  </data>
  <data name="edit_return" xml:space="preserve">
    <value>工藝細節</value>
  </data>
  <data name="kill_ecannot" xml:space="preserve">
    <value>您無權殺死進程</value>
  </data>
  <data name="renice_ecannot" xml:space="preserve">
    <value>您不得取消流程</value>
  </data>
  <data name="linux_stime" xml:space="preserve">
    <value>已開始</value>
  </data>
  <data name="linux_real" xml:space="preserve">
    <value>即時的</value>
  </data>
  <data name="linux_be" xml:space="preserve">
    <value>最大努力</value>
  </data>
  <data name="linux_idle" xml:space="preserve">
    <value>閒</value>
  </data>
  <data name="freebsd_stime" xml:space="preserve">
    <value>已開始</value>
  </data>
  <data name="hpux_stime" xml:space="preserve">
    <value>已開始</value>
  </data>
  <data name="sysv_stime" xml:space="preserve">
    <value>已開始</value>
  </data>
  <data name="sysv_task" xml:space="preserve">
    <value>任務ID</value>
  </data>
  <data name="sysv_zone" xml:space="preserve">
    <value>區域名稱</value>
  </data>
  <data name="log_run" xml:space="preserve">
    <value>冉命令“$1”</value>
  </data>
  <data name="log_kill" xml:space="preserve">
    <value>已發送信號 $1以處理 $2</value>
  </data>
  <data name="log_kills" xml:space="preserve">
    <value>將信號 $1發送到 $2進程</value>
  </data>
  <data name="log_kill_l" xml:space="preserve">
    <value>已發送信號 $1以處理 $2</value>
  </data>
  <data name="log_kills_l" xml:space="preserve">
    <value>已將信號 $1發送到進程&lt;br&gt; $2</value>
  </data>
  <data name="log_renice" xml:space="preserve">
    <value>將進程 $2的優先級更改為 $1</value>
  </data>
  <data name="acl_manage" xml:space="preserve">
    <value>以用戶身份管理流程</value>
  </data>
  <data name="acl_manage_def" xml:space="preserve">
    <value>Webmin當前用戶</value>
  </data>
  <data name="acl_edit" xml:space="preserve">
    <value>可以殺死並破壞進程嗎？</value>
  </data>
  <data name="acl_run" xml:space="preserve">
    <value>可以運行命令嗎？</value>
  </data>
  <data name="acl_only" xml:space="preserve">
    <value>只能看到自己的流程嗎？</value>
  </data>
  <data name="acl_who" xml:space="preserve">
    <value>可以為用戶管理流程</value>
  </data>
  <data name="acl_who0" xml:space="preserve">
    <value>所有用戶</value>
  </data>
  <data name="acl_who1" xml:space="preserve">
    <value>Webmin當前用戶</value>
  </data>
  <data name="acl_who2" xml:space="preserve">
    <value>列出的用戶 ..</value>
  </data>
  <data name="kill_kill" xml:space="preserve">
    <value>殺死過程</value>
  </data>
  <data name="kill_term" xml:space="preserve">
    <value>終止</value>
  </data>
  <data name="kill_hup" xml:space="preserve">
    <value>重新開始</value>
  </data>
  <data name="kill_stop" xml:space="preserve">
    <value>停止</value>
  </data>
  <data name="kill_cont" xml:space="preserve">
    <value>繼續</value>
  </data>
  <data name="open_title" xml:space="preserve">
    <value>打開文件和連接</value>
  </data>
  <data name="open_proc" xml:space="preserve">
    <value>對於進程 $1（PID $2）</value>
  </data>
  <data name="open_header1" xml:space="preserve">
    <value>打開文件</value>
  </data>
  <data name="open_header2" xml:space="preserve">
    <value>打開網絡連接</value>
  </data>
  <data name="open_type" xml:space="preserve">
    <value>類型</value>
  </data>
  <data name="open_proto" xml:space="preserve">
    <value>協議</value>
  </data>
  <data name="open_desc" xml:space="preserve">
    <value>細節</value>
  </data>
  <data name="open_fd" xml:space="preserve">
    <value>文件描述符</value>
  </data>
  <data name="open_listen1" xml:space="preserve">
    <value>在端口 $1上監聽</value>
  </data>
  <data name="open_listen2" xml:space="preserve">
    <value>正在監聽地址 $1端口 $2</value>
  </data>
  <data name="open_recv" xml:space="preserve">
    <value>在 $1上接收： $2</value>
  </data>
  <data name="open_conn" xml:space="preserve">
    <value>在 $3狀態下從 $1連接到 $2</value>
  </data>
  <data name="open_cwd" xml:space="preserve">
    <value>當前目錄</value>
  </data>
  <data name="open_rtd" xml:space="preserve">
    <value>根目錄</value>
  </data>
  <data name="open_txt" xml:space="preserve">
    <value>程式碼</value>
  </data>
  <data name="open_mem" xml:space="preserve">
    <value>共享庫</value>
  </data>
  <data name="open_dir" xml:space="preserve">
    <value>目錄</value>
  </data>
  <data name="open_reg" xml:space="preserve">
    <value>常規文件</value>
  </data>
  <data name="open_chr" xml:space="preserve">
    <value>特殊字符</value>
  </data>
  <data name="open_blk" xml:space="preserve">
    <value>塊特</value>
  </data>
  <data name="open_size" xml:space="preserve">
    <value>文件大小</value>
  </data>
  <data name="open_inode" xml:space="preserve">
    <value>索引節點</value>
  </data>
  <data name="open_file" xml:space="preserve">
    <value>路徑</value>
  </data>
  <data name="trace_title" xml:space="preserve">
    <value>追踪過程</value>
  </data>
  <data name="trace_start" xml:space="preserve">
    <value>正在啟動 $1的系統調用跟踪。</value>
  </data>
  <data name="trace_doing" xml:space="preserve">
    <value>$1的系統調用跟踪：</value>
  </data>
  <data name="trace_done" xml:space="preserve">
    <value>..流程已終止。</value>
  </data>
  <data name="trace_failed" xml:space="preserve">
    <value>..追踪失敗！</value>
  </data>
  <data name="trace_sorry" xml:space="preserve">
    <value>此頁面需要瀏覽器中的Java支持。要使用純文本過程跟踪，請調整模塊配置。</value>
  </data>
  <data name="trace_syscalls" xml:space="preserve">
    <value>跟踪系統調用：</value>
  </data>
  <data name="trace_all" xml:space="preserve">
    <value>所有</value>
  </data>
  <data name="trace_sel" xml:space="preserve">
    <value>上市 ..</value>
  </data>
  <data name="trace_change" xml:space="preserve">
    <value>更改</value>
  </data>
  <data name="windows_threads" xml:space="preserve">
    <value>處理中的線程</value>
  </data>
  <data name="syslog_dmesg" xml:space="preserve">
    <value>內核消息</value>
  </data>
</root>