<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_zone" xml:space="preserve">
    <value>Zone</value>
  </data>
  <data name="index_mem2" xml:space="preserve">
    <value>&lt;b&gt;Mémoire réelle:&lt;/b&gt; $1 total / $2 gratuit</value>
  </data>
  <data name="index_mem3" xml:space="preserve">
    <value>&lt;b&gt;Mémoire réelle:&lt;/b&gt; $1 total / $2 gratuit / $3 mis en cache</value>
  </data>
  <data name="index_swap2" xml:space="preserve">
    <value>&lt;b&gt;Échange d'espace:&lt;/b&gt; $1 total / $2 gratuit</value>
  </data>
  <data name="index_burst" xml:space="preserve">
    <value>&lt;b&gt;Mémoire éclatée:&lt;/b&gt; $1 au total</value>
  </data>
  <data name="index_loadname" xml:space="preserve">
    <value>Moyennes de charge du processeur:</value>
  </data>
  <data name="index_loadnums" xml:space="preserve">
    <value>$1 (1 min), $2 (5 min), $3 (15 min)</value>
  </data>
  <data name="index_cpuname" xml:space="preserve">
    <value>Type de CPU:</value>
  </data>
  <data name="index_inzone" xml:space="preserve">
    <value>Dans la zone $1 </value>
  </data>
  <data name="stime" xml:space="preserve">
    <value>Commencé</value>
  </data>
  <data name="sclass" xml:space="preserve">
    <value>Classe de planification IO</value>
  </data>
  <data name="sprio" xml:space="preserve">
    <value>Priorité IO</value>
  </data>
  <data name="search_cpupc2" xml:space="preserve">
    <value>Utiliser plus de CPU que</value>
  </data>
  <data name="search_sigterm" xml:space="preserve">
    <value>Mettre fin aux processus</value>
  </data>
  <data name="search_sigkill" xml:space="preserve">
    <value>Tuer les processus</value>
  </data>
  <data name="search_port" xml:space="preserve">
    <value>Utilisation du port</value>
  </data>
  <data name="search_protocol" xml:space="preserve">
    <value>protocole</value>
  </data>
  <data name="search_ip" xml:space="preserve">
    <value>Utiliser l'adresse IP</value>
  </data>
  <data name="run_as" xml:space="preserve">
    <value>Exécuter en tant qu'utilisateur</value>
  </data>
  <data name="run_euser" xml:space="preserve">
    <value>Nom d'utilisateur manquant ou invalide</value>
  </data>
  <data name="run_euser2" xml:space="preserve">
    <value>Vous n'êtes pas autorisé à exécuter des commandes en tant qu'utilisateur sélectionné</value>
  </data>
  <data name="edit_subid" xml:space="preserve">
    <value>Identifiant</value>
  </data>
  <data name="edit_subcmd" xml:space="preserve">
    <value>Commande de sous-processus</value>
  </data>
  <data name="edit_sigterm" xml:space="preserve">
    <value>Mettre fin</value>
  </data>
  <data name="edit_sigkill" xml:space="preserve">
    <value>Tuer</value>
  </data>
  <data name="edit_sigstop" xml:space="preserve">
    <value>Suspendre</value>
  </data>
  <data name="edit_sigcont" xml:space="preserve">
    <value>Reprendre</value>
  </data>
  <data name="edit_open" xml:space="preserve">
    <value>Fichiers et connexions</value>
  </data>
  <data name="edit_trace" xml:space="preserve">
    <value>Processus de suivi</value>
  </data>
  <data name="edit_return" xml:space="preserve">
    <value>détails du processus</value>
  </data>
  <data name="linux_stime" xml:space="preserve">
    <value>Commencé</value>
  </data>
  <data name="linux_real" xml:space="preserve">
    <value>Temps réel</value>
  </data>
  <data name="linux_be" xml:space="preserve">
    <value>Meilleur effort</value>
  </data>
  <data name="linux_idle" xml:space="preserve">
    <value>Tourner au ralenti</value>
  </data>
  <data name="freebsd_stime" xml:space="preserve">
    <value>Commencé</value>
  </data>
  <data name="hpux_stime" xml:space="preserve">
    <value>Commencé</value>
  </data>
  <data name="sysv_stime" xml:space="preserve">
    <value>Commencé</value>
  </data>
  <data name="sysv_task" xml:space="preserve">
    <value>ID de tâche</value>
  </data>
  <data name="sysv_zone" xml:space="preserve">
    <value>Nom de zone</value>
  </data>
  <data name="log_renice" xml:space="preserve">
    <value>Modification de la priorité du processus $2 en $1 </value>
  </data>
  <data name="acl_manage_def" xml:space="preserve">
    <value>Utilisateur Webmin actuel</value>
  </data>
  <data name="acl_only" xml:space="preserve">
    <value>Ne peut voir que ses propres processus?</value>
  </data>
  <data name="acl_who" xml:space="preserve">
    <value>Peut gérer les processus pour les utilisateurs</value>
  </data>
  <data name="acl_who0" xml:space="preserve">
    <value>Tous les utilisateurs</value>
  </data>
  <data name="acl_who1" xml:space="preserve">
    <value>Utilisateur Webmin actuel</value>
  </data>
  <data name="acl_who2" xml:space="preserve">
    <value>Utilisateurs répertoriés ..</value>
  </data>
  <data name="open_title" xml:space="preserve">
    <value>Fichiers ouverts et connexions</value>
  </data>
  <data name="open_proc" xml:space="preserve">
    <value>Pour le processus $1 (PID $2)</value>
  </data>
  <data name="open_header1" xml:space="preserve">
    <value>Ouvrir des fichiers</value>
  </data>
  <data name="open_header2" xml:space="preserve">
    <value>Connexions réseau ouvertes</value>
  </data>
  <data name="open_type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="open_proto" xml:space="preserve">
    <value>Protocole</value>
  </data>
  <data name="open_desc" xml:space="preserve">
    <value>Détails</value>
  </data>
  <data name="open_fd" xml:space="preserve">
    <value>Descripteur de fichier</value>
  </data>
  <data name="open_listen1" xml:space="preserve">
    <value>Écoute sur le port $1 </value>
  </data>
  <data name="open_listen2" xml:space="preserve">
    <value>Écoute sur l'adresse $1 port $2 </value>
  </data>
  <data name="open_recv" xml:space="preserve">
    <value>Réception le $1:$2 </value>
  </data>
  <data name="open_conn" xml:space="preserve">
    <value>Connecté de $1 à $2 dans l'état $3 </value>
  </data>
  <data name="open_cwd" xml:space="preserve">
    <value>Dir actuel</value>
  </data>
  <data name="open_rtd" xml:space="preserve">
    <value>Répertoire racine</value>
  </data>
  <data name="open_txt" xml:space="preserve">
    <value>Code de programme</value>
  </data>
  <data name="open_mem" xml:space="preserve">
    <value>Bibliothèque partagée</value>
  </data>
  <data name="open_dir" xml:space="preserve">
    <value>Annuaire</value>
  </data>
  <data name="open_reg" xml:space="preserve">
    <value>Fichier régulier</value>
  </data>
  <data name="open_chr" xml:space="preserve">
    <value>Caractère spécial</value>
  </data>
  <data name="open_blk" xml:space="preserve">
    <value>Bloc spécial</value>
  </data>
  <data name="open_size" xml:space="preserve">
    <value>Taille du fichier</value>
  </data>
  <data name="open_inode" xml:space="preserve">
    <value>Inode</value>
  </data>
  <data name="open_file" xml:space="preserve">
    <value>Chemin</value>
  </data>
  <data name="trace_title" xml:space="preserve">
    <value>Processus de suivi</value>
  </data>
  <data name="trace_start" xml:space="preserve">
    <value>Démarrage de la trace d'appel système pour $1 ..</value>
  </data>
  <data name="trace_doing" xml:space="preserve">
    <value>Trace d'appel système pour $1  :</value>
  </data>
  <data name="trace_done" xml:space="preserve">
    <value>.. le processus est terminé.</value>
  </data>
  <data name="trace_failed" xml:space="preserve">
    <value>.. le traçage a échoué!</value>
  </data>
  <data name="trace_sorry" xml:space="preserve">
    <value>Cette page nécessite la prise en charge Java dans votre navigateur. Pour utiliser une trace de processus en texte uniquement, ajustez la configuration du module.</value>
  </data>
  <data name="trace_syscalls" xml:space="preserve">
    <value>Suivi des appels système:</value>
  </data>
  <data name="trace_all" xml:space="preserve">
    <value>Tout</value>
  </data>
  <data name="trace_sel" xml:space="preserve">
    <value>Listé ..</value>
  </data>
  <data name="trace_change" xml:space="preserve">
    <value>Changement</value>
  </data>
  <data name="windows_threads" xml:space="preserve">
    <value>Fils en cours</value>
  </data>
  <data name="syslog_dmesg" xml:space="preserve">
    <value>Messages du noyau</value>
  </data>
</root>