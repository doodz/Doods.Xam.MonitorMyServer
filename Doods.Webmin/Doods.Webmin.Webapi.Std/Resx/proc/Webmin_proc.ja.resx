<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>プロセス マネージャ</value>
  </data>
  <data name="index_display" xml:space="preserve">
    <value>表示</value>
  </data>
  <data name="index_tree" xml:space="preserve">
    <value>PID</value>
  </data>
  <data name="index_user" xml:space="preserve">
    <value>ユーザ</value>
  </data>
  <data name="index_size" xml:space="preserve">
    <value>メモリ</value>
  </data>
  <data name="index_cpu" xml:space="preserve">
    <value>CPU</value>
  </data>
  <data name="index_search" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="index_zone" xml:space="preserve">
    <value>Zone</value>
  </data>
  <data name="index_run" xml:space="preserve">
    <value>実行..</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>プロセス リスト</value>
  </data>
  <data name="index_mem2" xml:space="preserve">
    <value>&lt;b&gt;実メモリ:&lt;/b&gt; $1 KB 合計 / $2 KB 空き</value>
  </data>
  <data name="index_swap2" xml:space="preserve">
    <value>&lt;b&gt;スワップ スペース:&lt;/b&gt; $1 KB 合計 / $2 KB 空き</value>
  </data>
  <data name="index_loadname" xml:space="preserve">
    <value>CPU ロード平均:</value>
  </data>
  <data name="index_loadnums" xml:space="preserve">
    <value>$1 (5分) , $2 (10 分) , $3 (15 分)</value>
  </data>
  <data name="index_cpuname" xml:space="preserve">
    <value>CPU タイプ:</value>
  </data>
  <data name="index_inzone" xml:space="preserve">
    <value>In zone $1</value>
  </data>
  <data name="pid" xml:space="preserve">
    <value>プロセス ID</value>
  </data>
  <data name="owner" xml:space="preserve">
    <value>所有者</value>
  </data>
  <data name="command" xml:space="preserve">
    <value>コマンド</value>
  </data>
  <data name="cpu" xml:space="preserve">
    <value>CPU</value>
  </data>
  <data name="size" xml:space="preserve">
    <value>サイズ</value>
  </data>
  <data name="parent" xml:space="preserve">
    <value>親プロセス</value>
  </data>
  <data name="runtime" xml:space="preserve">
    <value>実行時間</value>
  </data>
  <data name="nice" xml:space="preserve">
    <value>Nice レベル</value>
  </data>
  <data name="stime" xml:space="preserve">
    <value>開始時刻</value>
  </data>
  <data name="search_user" xml:space="preserve">
    <value>所有者</value>
  </data>
  <data name="search_match" xml:space="preserve">
    <value>一致</value>
  </data>
  <data name="search_cpupc" xml:space="preserve">
    <value>CPU の$1% 以上使用中</value>
  </data>
  <data name="search_cpupc2" xml:space="preserve">
    <value>CPU使用率が ~ 以上</value>
  </data>
  <data name="search_fs" xml:space="preserve">
    <value>使用中のファイル システム</value>
  </data>
  <data name="search_files" xml:space="preserve">
    <value>使用中のファイル</value>
  </data>
  <data name="search_submit" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="search_none" xml:space="preserve">
    <value>一致したプロセスがありませんでした。</value>
  </data>
  <data name="search_kill" xml:space="preserve">
    <value>シグナルの送信</value>
  </data>
  <data name="search_ignore" xml:space="preserve">
    <value>検索プロセスを無視</value>
  </data>
  <data name="search_return" xml:space="preserve">
    <value>検索形式</value>
  </data>
  <data name="search_sigterm" xml:space="preserve">
    <value>Terminate Processes</value>
  </data>
  <data name="search_sigkill" xml:space="preserve">
    <value>Kill Processes</value>
  </data>
  <data name="search_port" xml:space="preserve">
    <value>Using port</value>
  </data>
  <data name="search_protocol" xml:space="preserve">
    <value>protocol</value>
  </data>
  <data name="search_ip" xml:space="preserve">
    <value>Using IP address</value>
  </data>
  <data name="run_command" xml:space="preserve">
    <value>実行するコマンド</value>
  </data>
  <data name="run_submit" xml:space="preserve">
    <value>実行</value>
  </data>
  <data name="run_mode" xml:space="preserve">
    <value>実行モード</value>
  </data>
  <data name="run_bg" xml:space="preserve">
    <value>バックグラウンドで実行</value>
  </data>
  <data name="run_fg" xml:space="preserve">
    <value>終了まで待機</value>
  </data>
  <data name="run_input" xml:space="preserve">
    <value>コマンド入力</value>
  </data>
  <data name="run_title" xml:space="preserve">
    <value>コマンド出力</value>
  </data>
  <data name="run_output" xml:space="preserve">
    <value>$1 からの出力..</value>
  </data>
  <data name="run_none" xml:space="preserve">
    <value>作成された出力はありません</value>
  </data>
  <data name="run_ecannot" xml:space="preserve">
    <value>You are not allowed to run commands</value>
  </data>
  <data name="run_as" xml:space="preserve">
    <value>ユーザ</value>
  </data>
  <data name="run_euser" xml:space="preserve">
    <value>Missing or invalid username</value>
  </data>
  <data name="run_euser2" xml:space="preserve">
    <value>You are not allowed to run commands as the selected user</value>
  </data>
  <data name="edit_title" xml:space="preserve">
    <value>プロセス情報</value>
  </data>
  <data name="edit_gone" xml:space="preserve">
    <value>このプロセスはもう実行されていません</value>
  </data>
  <data name="edit_sub" xml:space="preserve">
    <value>サブ プロセス</value>
  </data>
  <data name="edit_subid" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="edit_subcmd" xml:space="preserve">
    <value>サブプロセスコマンド</value>
  </data>
  <data name="edit_kill" xml:space="preserve">
    <value>シグナルの送信</value>
  </data>
  <data name="edit_change" xml:space="preserve">
    <value>変更</value>
  </data>
  <data name="edit_prilow" xml:space="preserve">
    <value>優先度 低</value>
  </data>
  <data name="edit_prihigh" xml:space="preserve">
    <value>優先度 高</value>
  </data>
  <data name="edit_pridef" xml:space="preserve">
    <value>デフォルト</value>
  </data>
  <data name="edit_none" xml:space="preserve">
    <value>なし</value>
  </data>
  <data name="edit_ecannot" xml:space="preserve">
    <value>You are not allowed to edit processes</value>
  </data>
  <data name="edit_sigterm" xml:space="preserve">
    <value>Terminate</value>
  </data>
  <data name="edit_sigkill" xml:space="preserve">
    <value>Kill</value>
  </data>
  <data name="edit_sigstop" xml:space="preserve">
    <value>Suspend</value>
  </data>
  <data name="edit_sigcont" xml:space="preserve">
    <value>Resume</value>
  </data>
  <data name="edit_open" xml:space="preserve">
    <value>Files and Connections</value>
  </data>
  <data name="edit_trace" xml:space="preserve">
    <value>Trace Process</value>
  </data>
  <data name="edit_return" xml:space="preserve">
    <value>process details</value>
  </data>
  <data name="kill_err" xml:space="preserve">
    <value>シグナル $1 をプロセス $2 に送信できませんでした</value>
  </data>
  <data name="kill_title" xml:space="preserve">
    <value>シグナルの送信</value>
  </data>
  <data name="kill_sent" xml:space="preserve">
    <value>送信済み</value>
  </data>
  <data name="kill_ecannot" xml:space="preserve">
    <value>You are not allowed to kill processes</value>
  </data>
  <data name="renice_err" xml:space="preserve">
    <value>プロセス $1 を reniceできませんでした:</value>
  </data>
  <data name="renice_ecannot" xml:space="preserve">
    <value>You are not allowed to renice processes</value>
  </data>
  <data name="linux_pri" xml:space="preserve">
    <value>優先度</value>
  </data>
  <data name="linux_tty" xml:space="preserve">
    <value>TTY</value>
  </data>
  <data name="linux_status" xml:space="preserve">
    <value>ステータス</value>
  </data>
  <data name="linux_wchan" xml:space="preserve">
    <value>待機中</value>
  </data>
  <data name="linux_mem" xml:space="preserve">
    <value>メモリ</value>
  </data>
  <data name="linux_group" xml:space="preserve">
    <value>グループ</value>
  </data>
  <data name="linux_ruser" xml:space="preserve">
    <value>リアル ユーザ</value>
  </data>
  <data name="linux_rgroup" xml:space="preserve">
    <value>リアル グループ</value>
  </data>
  <data name="linux_pgid" xml:space="preserve">
    <value>プロセス グループ ID</value>
  </data>
  <data name="linux_stime" xml:space="preserve">
    <value>$stime</value>
  </data>
  <data name="linuxstat_R" xml:space="preserve">
    <value>実行中</value>
  </data>
  <data name="linuxstat_S" xml:space="preserve">
    <value>スリープ中</value>
  </data>
  <data name="linuxstat_D" xml:space="preserve">
    <value>ディープ スリープ</value>
  </data>
  <data name="linuxstat_T" xml:space="preserve">
    <value>停止</value>
  </data>
  <data name="linuxstat_Z" xml:space="preserve">
    <value>ゾンビ</value>
  </data>
  <data name="freebsd_ruser" xml:space="preserve">
    <value>リアル ユーザ</value>
  </data>
  <data name="freebsd_rgroup" xml:space="preserve">
    <value>リアル グループ</value>
  </data>
  <data name="freebsd_tty" xml:space="preserve">
    <value>TTY</value>
  </data>
  <data name="freebsd_pgid" xml:space="preserve">
    <value>プロセス グループ</value>
  </data>
  <data name="freebsd_stime" xml:space="preserve">
    <value>$stime</value>
  </data>
  <data name="freebsd_lim" xml:space="preserve">
    <value>メモリ制限</value>
  </data>
  <data name="hpux_pri" xml:space="preserve">
    <value>優先度</value>
  </data>
  <data name="hpux_tty" xml:space="preserve">
    <value>TTY</value>
  </data>
  <data name="hpux_status" xml:space="preserve">
    <value>ステータス</value>
  </data>
  <data name="hpux_wchan" xml:space="preserve">
    <value>待機中</value>
  </data>
  <data name="hpux_stime" xml:space="preserve">
    <value>$stime</value>
  </data>
  <data name="hpuxstat_0" xml:space="preserve">
    <value>存在しない</value>
  </data>
  <data name="hpuxstat_S" xml:space="preserve">
    <value>スリープ中</value>
  </data>
  <data name="hpuxstat_W" xml:space="preserve">
    <value>待機中</value>
  </data>
  <data name="hpuxstat_R" xml:space="preserve">
    <value>実行中</value>
  </data>
  <data name="hpuxstat_I" xml:space="preserve">
    <value>中間</value>
  </data>
  <data name="hpuxstat_Z" xml:space="preserve">
    <value>ゾンビ</value>
  </data>
  <data name="hpuxstat_T" xml:space="preserve">
    <value>停止</value>
  </data>
  <data name="hpuxstat_G" xml:space="preserve">
    <value>拡張中</value>
  </data>
  <data name="macos_tty" xml:space="preserve">
    <value>TTY</value>
  </data>
  <data name="sysv_group" xml:space="preserve">
    <value>グループ</value>
  </data>
  <data name="sysv_ruser" xml:space="preserve">
    <value>リアル ユーザ</value>
  </data>
  <data name="sysv_rgroup" xml:space="preserve">
    <value>リアル グループ</value>
  </data>
  <data name="sysv_pgid" xml:space="preserve">
    <value>プロセス グループ ID</value>
  </data>
  <data name="sysv_tty" xml:space="preserve">
    <value>TTY</value>
  </data>
  <data name="sysv_stime" xml:space="preserve">
    <value>$stime</value>
  </data>
  <data name="sysv_task" xml:space="preserve">
    <value>Task ID</value>
  </data>
  <data name="sysv_zone" xml:space="preserve">
    <value>Zone name</value>
  </data>
  <data name="log_run" xml:space="preserve">
    <value>コマンド "$1" を実行しました</value>
  </data>
  <data name="log_kill" xml:space="preserve">
    <value>シグナル $1 をプロセス $2 に送信しました</value>
  </data>
  <data name="log_kills" xml:space="preserve">
    <value>シグナル $1 をプロセス $2 に送信</value>
  </data>
  <data name="log_kill_l" xml:space="preserve">
    <value>シグナル $1 をプロセス $2 に送信しました</value>
  </data>
  <data name="log_kills_l" xml:space="preserve">
    <value>シグナル $1 をプロセスに送信しました&lt;br&gt;$2</value>
  </data>
  <data name="log_renice" xml:space="preserve">
    <value>Changed priority of process $2 to $1</value>
  </data>
  <data name="acl_manage" xml:space="preserve">
    <value>次のユーザとしてプロセスを管理</value>
  </data>
  <data name="acl_manage_def" xml:space="preserve">
    <value>Current Webmin user</value>
  </data>
  <data name="acl_edit" xml:space="preserve">
    <value>Can kill and renice processes?</value>
  </data>
  <data name="acl_run" xml:space="preserve">
    <value>Can run commands?</value>
  </data>
  <data name="acl_only" xml:space="preserve">
    <value>Can only see own processes?</value>
  </data>
  <data name="acl_who" xml:space="preserve">
    <value>Can manage processes for users</value>
  </data>
  <data name="acl_who0" xml:space="preserve">
    <value>All users</value>
  </data>
  <data name="acl_who1" xml:space="preserve">
    <value>Current Webmin user</value>
  </data>
  <data name="acl_who2" xml:space="preserve">
    <value>Listed users ..</value>
  </data>
  <data name="kill_kill" xml:space="preserve">
    <value>プロセスを Kill </value>
  </data>
  <data name="kill_term" xml:space="preserve">
    <value> 終了   </value>
  </data>
  <data name="kill_hup" xml:space="preserve">
    <value>  再度開始    </value>
  </data>
  <data name="kill_stop" xml:space="preserve">
    <value>    停止     </value>
  </data>
  <data name="kill_cont" xml:space="preserve">
    <value>  続行   </value>
  </data>
  <data name="open_title" xml:space="preserve">
    <value>Open Files and Connections</value>
  </data>
  <data name="open_proc" xml:space="preserve">
    <value>For process $1 (PID $2)</value>
  </data>
  <data name="open_header1" xml:space="preserve">
    <value>Open files</value>
  </data>
  <data name="open_header2" xml:space="preserve">
    <value>Open network connections</value>
  </data>
  <data name="open_type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="open_proto" xml:space="preserve">
    <value>Protocol</value>
  </data>
  <data name="open_desc" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="open_fd" xml:space="preserve">
    <value>File Descriptor</value>
  </data>
  <data name="open_listen1" xml:space="preserve">
    <value>Listening on port $1</value>
  </data>
  <data name="open_listen2" xml:space="preserve">
    <value>Listening on address $1 port $2</value>
  </data>
  <data name="open_recv" xml:space="preserve">
    <value>Receiving on $1:$2</value>
  </data>
  <data name="open_conn" xml:space="preserve">
    <value>Connected from $1 to $2 in state $3</value>
  </data>
  <data name="open_cwd" xml:space="preserve">
    <value>Current dir</value>
  </data>
  <data name="open_rtd" xml:space="preserve">
    <value>Root dir</value>
  </data>
  <data name="open_txt" xml:space="preserve">
    <value>Program code</value>
  </data>
  <data name="open_mem" xml:space="preserve">
    <value>Shared library</value>
  </data>
  <data name="open_dir" xml:space="preserve">
    <value>Directory</value>
  </data>
  <data name="open_reg" xml:space="preserve">
    <value>Regular file</value>
  </data>
  <data name="open_chr" xml:space="preserve">
    <value>Character special</value>
  </data>
  <data name="open_blk" xml:space="preserve">
    <value>Block special</value>
  </data>
  <data name="open_size" xml:space="preserve">
    <value>File size</value>
  </data>
  <data name="open_inode" xml:space="preserve">
    <value>Inode</value>
  </data>
  <data name="open_file" xml:space="preserve">
    <value>Path</value>
  </data>
  <data name="trace_title" xml:space="preserve">
    <value>Trace Process</value>
  </data>
  <data name="trace_start" xml:space="preserve">
    <value>Starting system call trace for $1 ..</value>
  </data>
  <data name="trace_doing" xml:space="preserve">
    <value>System call trace for $1 :</value>
  </data>
  <data name="trace_done" xml:space="preserve">
    <value>.. process has terminated.</value>
  </data>
  <data name="trace_failed" xml:space="preserve">
    <value>.. tracing failed!</value>
  </data>
  <data name="trace_sorry" xml:space="preserve">
    <value>This page requires Java support in your browser. To use a text-only process trace, adjust the module configuration.</value>
  </data>
  <data name="trace_syscalls" xml:space="preserve">
    <value>Trace system calls:</value>
  </data>
  <data name="trace_all" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="trace_sel" xml:space="preserve">
    <value>Listed..</value>
  </data>
  <data name="trace_change" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="windows_threads" xml:space="preserve">
    <value>Threads in process</value>
  </data>
  <data name="syslog_dmesg" xml:space="preserve">
    <value>Kernel messages</value>
  </data>
</root>