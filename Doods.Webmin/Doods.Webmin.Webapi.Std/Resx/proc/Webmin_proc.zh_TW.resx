<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>執行中的程序</value>
  </data>
  <data name="index_display" xml:space="preserve">
    <value>顯示方式</value>
  </data>
  <data name="index_tree" xml:space="preserve">
    <value>依據 PID (程序樹)</value>
  </data>
  <data name="index_user" xml:space="preserve">
    <value>依據使用者</value>
  </data>
  <data name="index_size" xml:space="preserve">
    <value>依據記憶體使用量</value>
  </data>
  <data name="index_cpu" xml:space="preserve">
    <value>依據 CPU 使用量</value>
  </data>
  <data name="index_search" xml:space="preserve">
    <value>搜尋</value>
  </data>
  <data name="index_run" xml:space="preserve">
    <value>執行...</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>程序列表</value>
  </data>
  <data name="pid" xml:space="preserve">
    <value>程序編號</value>
  </data>
  <data name="owner" xml:space="preserve">
    <value>擁有者</value>
  </data>
  <data name="command" xml:space="preserve">
    <value>命令</value>
  </data>
  <data name="cpu" xml:space="preserve">
    <value>CPU 使用量</value>
  </data>
  <data name="size" xml:space="preserve">
    <value>記憶體用量</value>
  </data>
  <data name="parent" xml:space="preserve">
    <value>母程序</value>
  </data>
  <data name="runtime" xml:space="preserve">
    <value>執行時間</value>
  </data>
  <data name="nice" xml:space="preserve">
    <value>優先等級</value>
  </data>
  <data name="search_user" xml:space="preserve">
    <value>擁有者</value>
  </data>
  <data name="search_match" xml:space="preserve">
    <value>符合條件</value>
  </data>
  <data name="search_fs" xml:space="preserve">
    <value>使用檔案系統</value>
  </data>
  <data name="search_files" xml:space="preserve">
    <value>使用檔案</value>
  </data>
  <data name="search_submit" xml:space="preserve">
    <value>搜尋</value>
  </data>
  <data name="search_none" xml:space="preserve">
    <value>找不到符合條件的程序</value>
  </data>
  <data name="search_kill" xml:space="preserve">
    <value>送出控制信號</value>
  </data>
  <data name="search_return" xml:space="preserve">
    <value>搜尋表單</value>
  </data>
  <data name="run_command" xml:space="preserve">
    <value>要執行的命令</value>
  </data>
  <data name="run_submit" xml:space="preserve">
    <value>執行</value>
  </data>
  <data name="run_mode" xml:space="preserve">
    <value>執行模式</value>
  </data>
  <data name="run_bg" xml:space="preserve">
    <value>在背景中執行</value>
  </data>
  <data name="run_fg" xml:space="preserve">
    <value>等待直到執行完畢</value>
  </data>
  <data name="run_input" xml:space="preserve">
    <value>給命令的輸入</value>
  </data>
  <data name="run_title" xml:space="preserve">
    <value>命令的輸出</value>
  </data>
  <data name="run_output" xml:space="preserve">
    <value>從 $1 的輸出...</value>
  </data>
  <data name="run_none" xml:space="preserve">
    <value>沒有產生輸出</value>
  </data>
  <data name="edit_title" xml:space="preserve">
    <value>程序資訊</value>
  </data>
  <data name="edit_gone" xml:space="preserve">
    <value>這個程序已經不再執行了</value>
  </data>
  <data name="edit_sub" xml:space="preserve">
    <value>子程序</value>
  </data>
  <data name="edit_kill" xml:space="preserve">
    <value>送出控制訊號</value>
  </data>
  <data name="edit_change" xml:space="preserve">
    <value>變更</value>
  </data>
  <data name="kill_err" xml:space="preserve">
    <value>無法送出控制訊號 $1 給程序 $2</value>
  </data>
  <data name="kill_title" xml:space="preserve">
    <value>送出控制訊號</value>
  </data>
  <data name="kill_sent" xml:space="preserve">
    <value>送出</value>
  </data>
  <data name="renice_err" xml:space="preserve">
    <value>無法變更程序 $1 的優先值</value>
  </data>
  <data name="linux_pri" xml:space="preserve">
    <value>優先值</value>
  </data>
  <data name="linux_tty" xml:space="preserve">
    <value>終端機</value>
  </data>
  <data name="linux_status" xml:space="preserve">
    <value>狀態</value>
  </data>
  <data name="linux_wchan" xml:space="preserve">
    <value>等待資源</value>
  </data>
  <data name="linux_mem" xml:space="preserve">
    <value>記憶體</value>
  </data>
  <data name="linux_group" xml:space="preserve">
    <value>群組</value>
  </data>
  <data name="linux_ruser" xml:space="preserve">
    <value>真實使用者</value>
  </data>
  <data name="linux_rgroup" xml:space="preserve">
    <value>真實群組</value>
  </data>
  <data name="linux_pgid" xml:space="preserve">
    <value>程序群組編號</value>
  </data>
  <data name="linuxstat_R" xml:space="preserve">
    <value>執行中</value>
  </data>
  <data name="linuxstat_S" xml:space="preserve">
    <value>睡眠中</value>
  </data>
  <data name="linuxstat_D" xml:space="preserve">
    <value>熟睡中</value>
  </data>
  <data name="linuxstat_T" xml:space="preserve">
    <value>已停止</value>
  </data>
  <data name="linuxstat_Z" xml:space="preserve">
    <value>僵屍!!</value>
  </data>
  <data name="freebsd_ruser" xml:space="preserve">
    <value>真實使用者</value>
  </data>
  <data name="freebsd_rgroup" xml:space="preserve">
    <value>真實群組</value>
  </data>
  <data name="freebsd_tty" xml:space="preserve">
    <value>終端機</value>
  </data>
  <data name="freebsd_pgid" xml:space="preserve">
    <value>程序群組</value>
  </data>
  <data name="freebsd_lim" xml:space="preserve">
    <value>記憶體上限</value>
  </data>
  <data name="hpux_pri" xml:space="preserve">
    <value>優先值</value>
  </data>
  <data name="hpux_tty" xml:space="preserve">
    <value>終端機</value>
  </data>
  <data name="hpux_status" xml:space="preserve">
    <value>狀態</value>
  </data>
  <data name="hpux_wchan" xml:space="preserve">
    <value>等待資源</value>
  </data>
  <data name="hpuxstat_0" xml:space="preserve">
    <value>不存在</value>
  </data>
  <data name="hpuxstat_S" xml:space="preserve">
    <value>睡眠中</value>
  </data>
  <data name="hpuxstat_W" xml:space="preserve">
    <value>等待中</value>
  </data>
  <data name="hpuxstat_R" xml:space="preserve">
    <value>執行中</value>
  </data>
  <data name="hpuxstat_I" xml:space="preserve">
    <value>中介值</value>
  </data>
  <data name="hpuxstat_Z" xml:space="preserve">
    <value>僵屍!!</value>
  </data>
  <data name="hpuxstat_T" xml:space="preserve">
    <value>已停止</value>
  </data>
  <data name="hpuxstat_G" xml:space="preserve">
    <value>成長中</value>
  </data>
  <data name="macos_tty" xml:space="preserve">
    <value>終端機</value>
  </data>
  <data name="sysv_group" xml:space="preserve">
    <value>群組</value>
  </data>
  <data name="sysv_ruser" xml:space="preserve">
    <value>真實使用者</value>
  </data>
  <data name="sysv_rgroup" xml:space="preserve">
    <value>真實群組</value>
  </data>
  <data name="sysv_pgid" xml:space="preserve">
    <value>程序群組編號</value>
  </data>
  <data name="sysv_tty" xml:space="preserve">
    <value>終端機</value>
  </data>
</root>