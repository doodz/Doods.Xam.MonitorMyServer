<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="dump_exclude" xml:space="preserve">
    <value>건너 뛸 파일 및 디렉토리</value>
  </data>
  <data name="dump_ehuser2" xml:space="preserve">
    <value>사용자 이름은 @ 문자를 포함 할 수 없습니다</value>
  </data>
  <data name="dump_fok" xml:space="preserve">
    <value>명령이 실패하면 중지</value>
  </data>
  <data name="dump_fok2" xml:space="preserve">
    <value>명령이 실패하면 실패보고</value>
  </data>
  <data name="dump_aok" xml:space="preserve">
    <value>백업이 실패하더라도 명령 건너 뛰기</value>
  </data>
  <data name="dump_gzip3" xml:space="preserve">
    <value>예, XZ 사용</value>
  </data>
  <data name="dump_update2" xml:space="preserve">
    <value>보관할 새 파일을 추가 하시겠습니까?</value>
  </data>
  <data name="dump_ignoreread" xml:space="preserve">
    <value>파일의 읽기 오류를 무시 하시겠습니까?</value>
  </data>
  <data name="dump_egzip3" xml:space="preserve">
    <value>gzip 압축 옵션은 아카이브에 새 파일을 추가하는 옵션과 호환되지 않습니다</value>
  </data>
  <data name="dump_eftpupdate" xml:space="preserve">
    <value>FTP를 사용할 때는 기존 아카이브에 파일을 추가 할 수 없습니다.</value>
  </data>
  <data name="dump_eleveldir" xml:space="preserve">
    <value>파일 시스템 마운트 포인트가 아닌 디렉토리에는 레벨 0 백업 만 허용됩니다.</value>
  </data>
  <data name="dump_eupdatedir" xml:space="preserve">
    <value>&lt;tt&gt;/etc/dumpdates&lt;/tt&gt; 파일은 파일 시스템 마운트 포인트 인 디렉토리에 대해서만 업데이트 할 수 있습니다.</value>
  </data>
  <data name="edit_title3" xml:space="preserve">
    <value>클론 백업</value>
  </data>
  <data name="edit_enabled_af" xml:space="preserve">
    <value>다음 후 사용 :</value>
  </data>
  <data name="edit_when" xml:space="preserve">
    <value>백업시기</value>
  </data>
  <data name="edit_clone" xml:space="preserve">
    <value>클론</value>
  </data>
  <data name="restore_over1" xml:space="preserve">
    <value>백업보다 새로운 것이 아니라면</value>
  </data>
  <data name="restore_efile" xml:space="preserve">
    <value>복원 할 파일 또는 장치가 없습니다.</value>
  </data>
  <data name="restore_ehost" xml:space="preserve">
    <value>복원 할 호스트가 없거나 유효하지 않습니다</value>
  </data>
  <data name="restore_ehuser" xml:space="preserve">
    <value>호스트에서 복원 할 잘못된 사용자 이름</value>
  </data>
  <data name="restore_ehfile" xml:space="preserve">
    <value>호스트에서 복원 할 파일 또는 장치가 없거나 유효하지 않습니다.</value>
  </data>
  <data name="restore_equestion" xml:space="preserve">
    <value>복원에서 알 수없는 질문  : $1 </value>
  </data>
  <data name="log_kill" xml:space="preserve">
    <value>$1 에 대한 백업 종료</value>
  </data>
</root>