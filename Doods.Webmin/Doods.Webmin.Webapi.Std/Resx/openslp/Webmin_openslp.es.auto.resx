<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Configuración de OpenSLP</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>Configuración de OpenSLP</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>Versión de OpenSLP $1 </value>
  </data>
  <data name="slp_apply" xml:space="preserve">
    <value>Aplicar los cambios</value>
  </data>
  <data name="slp_stop" xml:space="preserve">
    <value>Detener OpenSLP</value>
  </data>
  <data name="snda_title" xml:space="preserve">
    <value>Alcance estático y DA</value>
  </data>
  <data name="snda_useScopes" xml:space="preserve">
    <value>Lista estática de alcances</value>
  </data>
  <data name="snda_DAAddresses" xml:space="preserve">
    <value>Lista estática de agentes de directorio (DA)</value>
  </data>
  <data name="netcfg_title" xml:space="preserve">
    <value>configuración de la red</value>
  </data>
  <data name="netcfg_isBroadcastOnly" xml:space="preserve">
    <value>Forzar transmisiones para ser utilizadas en lugar de multidifusión</value>
  </data>
  <data name="netcfg_passiveDADetection" xml:space="preserve">
    <value>Usar detección DA pasiva</value>
  </data>
  <data name="netcfg_activeDADetection" xml:space="preserve">
    <value>Utilice la detección DA activa (restringir solo a direcciones DHCP o DA)</value>
  </data>
  <data name="netcfg_DAActiveDiscoveryInterval" xml:space="preserve">
    <value>Descubrimiento activo en segundos (0 desactiva el descubrimiento activo)</value>
  </data>
  <data name="netcfg_multicastTTL" xml:space="preserve">
    <value>Multicast TTL (0-255)</value>
  </data>
  <data name="netcfg_DADiscoveryMaximumWait" xml:space="preserve">
    <value>Tiempo de espera máximo para solicitudes de descubrimiento DA (en milisegundos)</value>
  </data>
  <data name="netcfg_DADiscoveryTimeouts" xml:space="preserve">
    <value>Tiempos de espera de descubrimiento DA sucesivos (en milisegundos)</value>
  </data>
  <data name="netcfg_HintsFile" xml:space="preserve">
    <value>Ruta al archivo de sugerencias de OpenSLP</value>
  </data>
  <data name="netcfg_multicastMaximumWait" xml:space="preserve">
    <value>Espera máxima en solicitudes de multidifusión (en milisegundos)</value>
  </data>
  <data name="netcfg_multicastTimeouts" xml:space="preserve">
    <value>Tiempos de espera de multidifusión sucesivos (en milisegundos)</value>
  </data>
  <data name="netcfg_unicastMaximumWait" xml:space="preserve">
    <value>Cantidad máxima de tiempo entre solicitudes de unidifusión (en milisegundos)</value>
  </data>
  <data name="netcfg_randomWaitBound" xml:space="preserve">
    <value>Valor máximo para todos los parámetros de espera aleatorios (en milisegundos)</value>
  </data>
  <data name="netcfg_MTU" xml:space="preserve">
    <value>Tamaño de paquete MTU (en bytes)</value>
  </data>
  <data name="netcfg_interfaces" xml:space="preserve">
    <value>Direcciones IP de interfaces que el DA/SA debería escuchar</value>
  </data>
  <data name="dacfg_title" xml:space="preserve">
    <value>Configuración DA</value>
  </data>
  <data name="dacfg_isDA" xml:space="preserve">
    <value>Funciona solo como DA (lea la guía del usuario antes de cambiar esto)</value>
  </data>
  <data name="log_title" xml:space="preserve">
    <value>Seguimiento y registro</value>
  </data>
  <data name="log_traceDATraffic" xml:space="preserve">
    <value>Imprimir mensajes de tráfico DA</value>
  </data>
  <data name="log_traceMsg" xml:space="preserve">
    <value>Imprimir mensajes detallados de SLP</value>
  </data>
  <data name="log_traceDrop" xml:space="preserve">
    <value>Imprimir información de mensaje SLP descartado</value>
  </data>
  <data name="log_traceReg" xml:space="preserve">
    <value>Imprima la información de registro y baja de DA y SA</value>
  </data>
  <data name="error_open" xml:space="preserve">
    <value>Error al abrir el archivo</value>
  </data>
  <data name="error_flock_on" xml:space="preserve">
    <value>Error al crear bloqueo de archivo</value>
  </data>
  <data name="error_flock_off" xml:space="preserve">
    <value>Error al destruir el bloqueo de archivo</value>
  </data>
  <data name="error_hup" xml:space="preserve">
    <value>Error al reiniciar OpenSLP con PID</value>
  </data>
  <data name="index_start" xml:space="preserve">
    <value>Inicie OpenSLP</value>
  </data>
  <data name="index_startmsg" xml:space="preserve">
    <value>Haga clic en este botón para iniciar el demonio OpenSLP en su sistema.</value>
  </data>
  <data name="index_stop" xml:space="preserve">
    <value>Detener OpenSLP</value>
  </data>
  <data name="index_stopmsg" xml:space="preserve">
    <value>Haga clic en este botón para detener el demonio OpenSLP en su sistema.</value>
  </data>
  <data name="stop_err" xml:space="preserve">
    <value>Error al detener OpenSLP</value>
  </data>
  <data name="start_err" xml:space="preserve">
    <value>Error al iniciar OpenSLP</value>
  </data>
</root>