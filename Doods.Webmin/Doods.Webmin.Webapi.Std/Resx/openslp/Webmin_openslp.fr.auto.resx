<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Configuration d'OpenSLP</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>Configuration OpenSLP</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>Version OpenSLP $1 </value>
  </data>
  <data name="slp_apply" xml:space="preserve">
    <value>Appliquer les modifications</value>
  </data>
  <data name="slp_stop" xml:space="preserve">
    <value>Arrêtez OpenSLP</value>
  </data>
  <data name="snda_title" xml:space="preserve">
    <value>Portée statique et DA</value>
  </data>
  <data name="snda_useScopes" xml:space="preserve">
    <value>Liste statique des étendues</value>
  </data>
  <data name="snda_DAAddresses" xml:space="preserve">
    <value>Liste statique des agents d'annuaire (DA)</value>
  </data>
  <data name="netcfg_title" xml:space="preserve">
    <value>Configuration du réseau</value>
  </data>
  <data name="netcfg_isBroadcastOnly" xml:space="preserve">
    <value>Forcer les diffusions à être utilisées au lieu de la multidiffusion</value>
  </data>
  <data name="netcfg_passiveDADetection" xml:space="preserve">
    <value>Utiliser la détection DA passive</value>
  </data>
  <data name="netcfg_activeDADetection" xml:space="preserve">
    <value>Utiliser la détection DA active (restreindre aux adresses DHCP ou DA uniquement)</value>
  </data>
  <data name="netcfg_DAActiveDiscoveryInterval" xml:space="preserve">
    <value>Découverte active en quelques secondes (0 désactive la découverte active)</value>
  </data>
  <data name="netcfg_multicastTTL" xml:space="preserve">
    <value>Multicast TTL (0-255)</value>
  </data>
  <data name="netcfg_DADiscoveryMaximumWait" xml:space="preserve">
    <value>Temps d'attente maximum pour les demandes de découverte DA (en millisecondes)</value>
  </data>
  <data name="netcfg_DADiscoveryTimeouts" xml:space="preserve">
    <value>Temps d'attente de découverte DA successifs (en millisecondes)</value>
  </data>
  <data name="netcfg_HintsFile" xml:space="preserve">
    <value>Chemin d'accès au fichier d'indices OpenSLP</value>
  </data>
  <data name="netcfg_multicastMaximumWait" xml:space="preserve">
    <value>Attente maximale sur les demandes de multidiffusion (en millisecondes)</value>
  </data>
  <data name="netcfg_multicastTimeouts" xml:space="preserve">
    <value>Temps d'attente de multidiffusion successifs (en millisecondes)</value>
  </data>
  <data name="netcfg_unicastMaximumWait" xml:space="preserve">
    <value>Temps maximum entre les demandes de monodiffusion (en millisecondes)</value>
  </data>
  <data name="netcfg_randomWaitBound" xml:space="preserve">
    <value>Valeur maximale pour tous les paramètres d'attente aléatoires (en millisecondes)</value>
  </data>
  <data name="netcfg_MTU" xml:space="preserve">
    <value>Taille du paquet MTU (en octets)</value>
  </data>
  <data name="netcfg_interfaces" xml:space="preserve">
    <value>Adresses IP des interfaces que le DA/SA doit écouter</value>
  </data>
  <data name="dacfg_title" xml:space="preserve">
    <value>Configuration DA</value>
  </data>
  <data name="dacfg_isDA" xml:space="preserve">
    <value>Fonctionne comme un DA uniquement (lire le guide de l'utilisateur avant de le changer)</value>
  </data>
  <data name="log_title" xml:space="preserve">
    <value>Suivi et journalisation</value>
  </data>
  <data name="log_traceDATraffic" xml:space="preserve">
    <value>Imprimer les messages de trafic DA</value>
  </data>
  <data name="log_traceMsg" xml:space="preserve">
    <value>Imprimer les messages de détail SLP</value>
  </data>
  <data name="log_traceDrop" xml:space="preserve">
    <value>Imprimer les informations de message abandonné SLP</value>
  </data>
  <data name="log_traceReg" xml:space="preserve">
    <value>Imprimer les informations d'inscription et de désinscription de DA et SA</value>
  </data>
  <data name="error_open" xml:space="preserve">
    <value>Erreur lors de l'ouverture du fichier</value>
  </data>
  <data name="error_flock_on" xml:space="preserve">
    <value>Erreur lors de la création du verrouillage de fichier</value>
  </data>
  <data name="error_flock_off" xml:space="preserve">
    <value>Erreur lors de la destruction du verrou de fichier</value>
  </data>
  <data name="error_hup" xml:space="preserve">
    <value>Erreur lors du redémarrage d'OpenSLP avec PID</value>
  </data>
  <data name="index_start" xml:space="preserve">
    <value>Démarrez OpenSLP</value>
  </data>
  <data name="index_startmsg" xml:space="preserve">
    <value>Cliquez sur ce bouton pour démarrer le démon OpenSLP sur votre système.</value>
  </data>
  <data name="index_stop" xml:space="preserve">
    <value>Arrêtez OpenSLP</value>
  </data>
  <data name="index_stopmsg" xml:space="preserve">
    <value>Cliquez sur ce bouton pour arrêter le démon OpenSLP sur votre système.</value>
  </data>
  <data name="stop_err" xml:space="preserve">
    <value>Impossible d'arrêter OpenSLP</value>
  </data>
  <data name="start_err" xml:space="preserve">
    <value>Impossible de démarrer OpenSLP</value>
  </data>
</root>