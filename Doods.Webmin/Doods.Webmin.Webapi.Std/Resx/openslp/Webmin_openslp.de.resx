<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>OpenSLP Konfiguration</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>OpenSLP Konfiguration</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>OpenSLP Version $1</value>
  </data>
  <data name="slp_apply" xml:space="preserve">
    <value>Wende Änderungen an</value>
  </data>
  <data name="slp_stop" xml:space="preserve">
    <value>Stoppe OpenSLP</value>
  </data>
  <data name="snda_title" xml:space="preserve">
    <value>Statischer Bereich und DA</value>
  </data>
  <data name="snda_useScopes" xml:space="preserve">
    <value>Statische Liste der Bereiche</value>
  </data>
  <data name="snda_DAAddresses" xml:space="preserve">
    <value>Statische Liste der Directory Agents (DA)</value>
  </data>
  <data name="netcfg_title" xml:space="preserve">
    <value>Netzwerkkonfiguration</value>
  </data>
  <data name="netcfg_isBroadcastOnly" xml:space="preserve">
    <value>Erzwingen Broadcasts anstatt Multicast</value>
  </data>
  <data name="netcfg_passiveDADetection" xml:space="preserve">
    <value>Benutze passive DA Erkennung</value>
  </data>
  <data name="netcfg_activeDADetection" xml:space="preserve">
    <value>Benutze aktive DA Erkennung (beschränke nur auf DHCP oder DA-Adressen)</value>
  </data>
  <data name="netcfg_DAActiveDiscoveryInterval" xml:space="preserve">
    <value>Active Entdeckung in Sekunden (0 deaktiviert die Active Entdeckung)</value>
  </data>
  <data name="netcfg_multicastTTL" xml:space="preserve">
    <value>Multicast TTL (0-255)</value>
  </data>
  <data name="netcfg_DADiscoveryMaximumWait" xml:space="preserve">
    <value>Maximale Wartezeit für DA Entdeckung-Anfragen (in Millisekunden)</value>
  </data>
  <data name="netcfg_DADiscoveryTimeouts" xml:space="preserve">
    <value>Sukzessive DA Entdeckung Wartezeiten (in Millisekunden)</value>
  </data>
  <data name="netcfg_HintsFile" xml:space="preserve">
    <value>Pfad zur OpenSLP Hints-Datei</value>
  </data>
  <data name="netcfg_multicastMaximumWait" xml:space="preserve">
    <value>Maximale Wartezeit für multicast requests (in Millisekunden)</value>
  </data>
  <data name="netcfg_multicastTimeouts" xml:space="preserve">
    <value>Sukzessive Multicast Wartezeiten (in Millisekunden)</value>
  </data>
  <data name="netcfg_unicastMaximumWait" xml:space="preserve">
    <value>Maximale Anzahl an Zeit zwischen den unicast-Anfragen (in Millisekunden)</value>
  </data>
  <data name="netcfg_randomWaitBound" xml:space="preserve">
    <value>Maximaler Wert für alle zufälligen Wait-Parameter (in Millisekunden)</value>
  </data>
  <data name="netcfg_MTU" xml:space="preserve">
    <value>MTU Paketgröße (in Bytes)</value>
  </data>
  <data name="netcfg_interfaces" xml:space="preserve">
    <value>IP-Adressen der Schnittstellen die auf DA/SA horchen</value>
  </data>
  <data name="dacfg_title" xml:space="preserve">
    <value>DA Konfiguration</value>
  </data>
  <data name="dacfg_isDA" xml:space="preserve">
    <value>Funktion als nur ein DA (lese Benutzerhandbuch, bevor Sie dieses ändern)</value>
  </data>
  <data name="log_title" xml:space="preserve">
    <value>Verfolgung und Loggen</value>
  </data>
  <data name="log_traceDATraffic" xml:space="preserve">
    <value>Drucke DA traffic-Nachrichten</value>
  </data>
  <data name="log_traceMsg" xml:space="preserve">
    <value>Drucke SLP Detailnachrichten</value>
  </data>
  <data name="log_traceDrop" xml:space="preserve">
    <value>Drucke SLP verworfene Nachrichteninformation</value>
  </data>
  <data name="log_traceReg" xml:space="preserve">
    <value>Drucke DA und SA Registrierung und Deregistrierung Information</value>
  </data>
  <data name="error_open" xml:space="preserve">
    <value>Fehler beim Öffnen der Datei</value>
  </data>
  <data name="error_flock_on" xml:space="preserve">
    <value>Fehler beim Erzeugen der Dateisperre</value>
  </data>
  <data name="error_flock_off" xml:space="preserve">
    <value>Fehler beim Zerstören der Dateisperre</value>
  </data>
  <data name="error_hup" xml:space="preserve">
    <value>Fehler beim Neustarten von OpenSLP mit PID</value>
  </data>
  <data name="index_start" xml:space="preserve">
    <value>Starte OpenSLP</value>
  </data>
  <data name="index_startmsg" xml:space="preserve">
    <value>Klicke auf diese Schaltfläche, um den OpenSLP-Daemon auf dem System zu starten.</value>
  </data>
  <data name="index_stop" xml:space="preserve">
    <value>Stoppe OpenSLP</value>
  </data>
  <data name="index_stopmsg" xml:space="preserve">
    <value>Klicke auf diese Schaltfläche, um den OpenSLP-Daemon auf dem System zu stoppen.</value>
  </data>
  <data name="stop_err" xml:space="preserve">
    <value>Fehlgeschlagen OpenSLP zu stoppen</value>
  </data>
  <data name="start_err" xml:space="preserve">
    <value>Fehlgeschlagen OpenSLP zu starten</value>
  </data>
</root>