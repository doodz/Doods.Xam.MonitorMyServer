<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Cấu hình OpenSLP</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>Cấu hình OpenSLP</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>Phiên bản OpenSLP $1 </value>
  </data>
  <data name="slp_apply" xml:space="preserve">
    <value>Áp dụng các thay đổi</value>
  </data>
  <data name="slp_stop" xml:space="preserve">
    <value>Dừng OpenSLP</value>
  </data>
  <data name="snda_title" xml:space="preserve">
    <value>Phạm vi tĩnh và DA</value>
  </data>
  <data name="snda_useScopes" xml:space="preserve">
    <value>Danh sách tĩnh của phạm vi</value>
  </data>
  <data name="snda_DAAddresses" xml:space="preserve">
    <value>Danh sách tĩnh của Đại lý thư mục (DA)</value>
  </data>
  <data name="netcfg_title" xml:space="preserve">
    <value>cấu hình mạng</value>
  </data>
  <data name="netcfg_isBroadcastOnly" xml:space="preserve">
    <value>Buộc phát sóng được sử dụng thay vì phát đa hướng</value>
  </data>
  <data name="netcfg_passiveDADetection" xml:space="preserve">
    <value>Sử dụng phát hiện DA thụ động</value>
  </data>
  <data name="netcfg_activeDADetection" xml:space="preserve">
    <value>Sử dụng phát hiện DA hoạt động (chỉ giới hạn ở Địa chỉ DHCP hoặc DA)</value>
  </data>
  <data name="netcfg_DAActiveDiscoveryInterval" xml:space="preserve">
    <value>Active Discovery trong vài giây (0 vô hiệu hóa Active Discovery)</value>
  </data>
  <data name="netcfg_multicastTTL" xml:space="preserve">
    <value>Đa tuyến (0-255)</value>
  </data>
  <data name="netcfg_DADiscoveryMaximumWait" xml:space="preserve">
    <value>Thời gian chờ tối đa cho các yêu cầu khám phá DA (tính bằng mili giây)</value>
  </data>
  <data name="netcfg_DADiscoveryTimeouts" xml:space="preserve">
    <value>Thời gian chờ khám phá DA liên tiếp (tính bằng mili giây)</value>
  </data>
  <data name="netcfg_HintsFile" xml:space="preserve">
    <value>Đường dẫn đến tệp gợi ý OpenSLP</value>
  </data>
  <data name="netcfg_multicastMaximumWait" xml:space="preserve">
    <value>Chờ tối đa cho các yêu cầu phát đa hướng (tính bằng mili giây)</value>
  </data>
  <data name="netcfg_multicastTimeouts" xml:space="preserve">
    <value>Thời gian chờ phát đa hướng liên tiếp (tính bằng mili giây)</value>
  </data>
  <data name="netcfg_unicastMaximumWait" xml:space="preserve">
    <value>Lượng thời gian tối đa giữa các yêu cầu unicast (tính bằng mili giây)</value>
  </data>
  <data name="netcfg_randomWaitBound" xml:space="preserve">
    <value>Giá trị tối đa cho tất cả các tham số chờ ngẫu nhiên (tính bằng mili giây)</value>
  </data>
  <data name="netcfg_MTU" xml:space="preserve">
    <value>Kích thước gói MTU (tính bằng byte)</value>
  </data>
  <data name="netcfg_interfaces" xml:space="preserve">
    <value>Địa chỉ IP của các giao diện mà DA/SA nên nghe</value>
  </data>
  <data name="dacfg_title" xml:space="preserve">
    <value>Cấu hình DA</value>
  </data>
  <data name="dacfg_isDA" xml:space="preserve">
    <value>Chỉ hoạt động như một DA (đọc hướng dẫn sử dụng trước khi thay đổi điều này)</value>
  </data>
  <data name="log_title" xml:space="preserve">
    <value>Truy tìm và ghi nhật ký</value>
  </data>
  <data name="log_traceDATraffic" xml:space="preserve">
    <value>In tin nhắn giao thông DA</value>
  </data>
  <data name="log_traceMsg" xml:space="preserve">
    <value>In thông báo chi tiết SLP</value>
  </data>
  <data name="log_traceDrop" xml:space="preserve">
    <value>In thông tin SLP bị rơi</value>
  </data>
  <data name="log_traceReg" xml:space="preserve">
    <value>In thông tin đăng ký DA và SA và hủy đăng ký</value>
  </data>
  <data name="error_open" xml:space="preserve">
    <value>Lỗi mở tập tin</value>
  </data>
  <data name="error_flock_on" xml:space="preserve">
    <value>Lỗi tạo khóa tập tin</value>
  </data>
  <data name="error_flock_off" xml:space="preserve">
    <value>Lỗi phá hủy khóa tập tin</value>
  </data>
  <data name="error_hup" xml:space="preserve">
    <value>Lỗi khởi động lại OpenSLP với PID</value>
  </data>
  <data name="index_start" xml:space="preserve">
    <value>Bắt đầu OpenSLP</value>
  </data>
  <data name="index_startmsg" xml:space="preserve">
    <value>Nhấn vào nút này để bắt đầu daemon OpenSLP trên hệ thống của bạn.</value>
  </data>
  <data name="index_stop" xml:space="preserve">
    <value>Dừng OpenSLP</value>
  </data>
  <data name="index_stopmsg" xml:space="preserve">
    <value>Nhấn vào nút này để dừng daemon OpenSLP trên hệ thống của bạn.</value>
  </data>
  <data name="stop_err" xml:space="preserve">
    <value>Không thể dừng OpenSLP</value>
  </data>
  <data name="start_err" xml:space="preserve">
    <value>Không thể khởi động OpenSLP</value>
  </data>
</root>