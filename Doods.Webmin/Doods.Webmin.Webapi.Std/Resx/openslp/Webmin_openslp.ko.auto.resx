<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>OpenSLP 구성</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>OpenSLP 구성</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>OpenSLP 버전 $1 </value>
  </data>
  <data name="slp_apply" xml:space="preserve">
    <value>변경 승인</value>
  </data>
  <data name="slp_stop" xml:space="preserve">
    <value>OpenSLP 중지</value>
  </data>
  <data name="snda_title" xml:space="preserve">
    <value>정적 범위 및 DA</value>
  </data>
  <data name="snda_useScopes" xml:space="preserve">
    <value>범위의 정적 목록</value>
  </data>
  <data name="snda_DAAddresses" xml:space="preserve">
    <value>디렉토리 에이전트 (DA)의 정적 목록</value>
  </data>
  <data name="netcfg_title" xml:space="preserve">
    <value>네트워크 구성</value>
  </data>
  <data name="netcfg_isBroadcastOnly" xml:space="preserve">
    <value>멀티 캐스트 대신 브로드 캐스트를 사용하도록 설정</value>
  </data>
  <data name="netcfg_passiveDADetection" xml:space="preserve">
    <value>수동 DA 감지 사용</value>
  </data>
  <data name="netcfg_activeDADetection" xml:space="preserve">
    <value>활성 DA 감지 사용 (DHCP 또는 DA 주소로만 제한)</value>
  </data>
  <data name="netcfg_DAActiveDiscoveryInterval" xml:space="preserve">
    <value>초 단위의 활성 검색 (0은 활성 검색을 사용하지 않도록 설정)</value>
  </data>
  <data name="netcfg_multicastTTL" xml:space="preserve">
    <value>멀티 캐스트 TTL (0-255)</value>
  </data>
  <data name="netcfg_DADiscoveryMaximumWait" xml:space="preserve">
    <value>DA 발견 요청의 최대 대기 시간 (밀리 초)</value>
  </data>
  <data name="netcfg_DADiscoveryTimeouts" xml:space="preserve">
    <value>연속 DA 검색 대기 시간 (밀리 초)</value>
  </data>
  <data name="netcfg_HintsFile" xml:space="preserve">
    <value>OpenSLP 힌트 파일의 경로</value>
  </data>
  <data name="netcfg_multicastMaximumWait" xml:space="preserve">
    <value>멀티 캐스트 요청에 대한 최대 대기 시간 (밀리 초)</value>
  </data>
  <data name="netcfg_multicastTimeouts" xml:space="preserve">
    <value>연속 멀티 캐스트 대기 시간 (밀리 초)</value>
  </data>
  <data name="netcfg_unicastMaximumWait" xml:space="preserve">
    <value>유니 캐스트 요청 사이의 최대 시간 (밀리 초)</value>
  </data>
  <data name="netcfg_randomWaitBound" xml:space="preserve">
    <value>모든 임의 대기 매개 변수의 최대 값 (밀리 초)</value>
  </data>
  <data name="netcfg_MTU" xml:space="preserve">
    <value>MTU 패킷 크기 (바이트)</value>
  </data>
  <data name="netcfg_interfaces" xml:space="preserve">
    <value>DA/SA가 청취해야하는 인터페이스의 IP 주소</value>
  </data>
  <data name="dacfg_title" xml:space="preserve">
    <value>DA 구성</value>
  </data>
  <data name="dacfg_isDA" xml:space="preserve">
    <value>DA로만 기능 (이 내용을 변경하기 전에 사용 설명서를 읽으십시오)</value>
  </data>
  <data name="log_title" xml:space="preserve">
    <value>추적 및 로깅</value>
  </data>
  <data name="log_traceDATraffic" xml:space="preserve">
    <value>DA 교통 메시지 인쇄</value>
  </data>
  <data name="log_traceMsg" xml:space="preserve">
    <value>SLP 상세 메시지 인쇄</value>
  </data>
  <data name="log_traceDrop" xml:space="preserve">
    <value>삭제 된 SLP 메시지 정보 인쇄</value>
  </data>
  <data name="log_traceReg" xml:space="preserve">
    <value>DA 및 SA 등록 및 등록 취소 정보 인쇄</value>
  </data>
  <data name="error_open" xml:space="preserve">
    <value>파일을 여는 중 오류</value>
  </data>
  <data name="error_flock_on" xml:space="preserve">
    <value>파일 잠금 생성 오류</value>
  </data>
  <data name="error_flock_off" xml:space="preserve">
    <value>파일 잠금 파괴 중 오류</value>
  </data>
  <data name="error_hup" xml:space="preserve">
    <value>PID로 OpenSLP 재시작 오류</value>
  </data>
  <data name="index_start" xml:space="preserve">
    <value>OpenSLP 시작</value>
  </data>
  <data name="index_startmsg" xml:space="preserve">
    <value>시스템에서 OpenSLP 데몬을 시작하려면이 버튼을 클릭하십시오.</value>
  </data>
  <data name="index_stop" xml:space="preserve">
    <value>OpenSLP 중지</value>
  </data>
  <data name="index_stopmsg" xml:space="preserve">
    <value>시스템에서 OpenSLP 데몬을 중지하려면이 버튼을 클릭하십시오.</value>
  </data>
  <data name="stop_err" xml:space="preserve">
    <value>OpenSLP를 중지하지 못했습니다</value>
  </data>
  <data name="start_err" xml:space="preserve">
    <value>OpenSLP를 시작하지 못했습니다</value>
  </data>
</root>