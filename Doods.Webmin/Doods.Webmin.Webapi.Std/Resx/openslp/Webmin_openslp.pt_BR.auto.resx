<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Configuração OpenSLP</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>Configuração OpenSLP</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>Versão OpenSLP $1 </value>
  </data>
  <data name="slp_apply" xml:space="preserve">
    <value>Aplicar mudanças</value>
  </data>
  <data name="slp_stop" xml:space="preserve">
    <value>Stop OpenSLP</value>
  </data>
  <data name="snda_title" xml:space="preserve">
    <value>Escopo estático e DA</value>
  </data>
  <data name="snda_useScopes" xml:space="preserve">
    <value>Lista estática de escopos</value>
  </data>
  <data name="snda_DAAddresses" xml:space="preserve">
    <value>Lista estática de agentes do diretório (DA)</value>
  </data>
  <data name="netcfg_title" xml:space="preserve">
    <value>configuração de rede</value>
  </data>
  <data name="netcfg_isBroadcastOnly" xml:space="preserve">
    <value>Forçar transmissões a serem usadas em vez de multicast</value>
  </data>
  <data name="netcfg_passiveDADetection" xml:space="preserve">
    <value>Use detecção passiva de DA</value>
  </data>
  <data name="netcfg_activeDADetection" xml:space="preserve">
    <value>Use a detecção de DA ativa (restrinja apenas aos endereços DHCP ou DA)</value>
  </data>
  <data name="netcfg_DAActiveDiscoveryInterval" xml:space="preserve">
    <value>Descoberta ativa em segundos (0 desativa a descoberta ativa)</value>
  </data>
  <data name="netcfg_multicastTTL" xml:space="preserve">
    <value>TTL multicast (0-255)</value>
  </data>
  <data name="netcfg_DADiscoveryMaximumWait" xml:space="preserve">
    <value>Tempo máximo de espera para solicitações de descoberta de DA (em milissegundos)</value>
  </data>
  <data name="netcfg_DADiscoveryTimeouts" xml:space="preserve">
    <value>Tempos de espera sucessivos para descoberta de DA (em milissegundos)</value>
  </data>
  <data name="netcfg_HintsFile" xml:space="preserve">
    <value>Caminho para o arquivo de dicas do OpenSLP</value>
  </data>
  <data name="netcfg_multicastMaximumWait" xml:space="preserve">
    <value>Espera máxima em solicitações de multicast (em milissegundos)</value>
  </data>
  <data name="netcfg_multicastTimeouts" xml:space="preserve">
    <value>Tempos de espera multicast sucessivos (em milissegundos)</value>
  </data>
  <data name="netcfg_unicastMaximumWait" xml:space="preserve">
    <value>Tempo máximo entre solicitações de unicast (em milissegundos)</value>
  </data>
  <data name="netcfg_randomWaitBound" xml:space="preserve">
    <value>Valor máximo para todos os parâmetros de espera aleatória (em milissegundos)</value>
  </data>
  <data name="netcfg_MTU" xml:space="preserve">
    <value>Tamanho do pacote MTU (em bytes)</value>
  </data>
  <data name="netcfg_interfaces" xml:space="preserve">
    <value>Endereços IP de interfaces que o DA/SA deve ouvir</value>
  </data>
  <data name="dacfg_title" xml:space="preserve">
    <value>Configuração DA</value>
  </data>
  <data name="dacfg_isDA" xml:space="preserve">
    <value>Funciona apenas como DA (leia o guia do usuário antes de alterar isso)</value>
  </data>
  <data name="log_title" xml:space="preserve">
    <value>Rastreamento e registro</value>
  </data>
  <data name="log_traceDATraffic" xml:space="preserve">
    <value>Imprimir mensagens de tráfego DA</value>
  </data>
  <data name="log_traceMsg" xml:space="preserve">
    <value>Imprimir mensagens detalhadas de SLP</value>
  </data>
  <data name="log_traceDrop" xml:space="preserve">
    <value>Imprimir SLP deixou cair as informações da mensagem</value>
  </data>
  <data name="log_traceReg" xml:space="preserve">
    <value>Imprimir informações de registro e cancelamento de registro DA e SA</value>
  </data>
  <data name="error_open" xml:space="preserve">
    <value>Erro ao abrir o arquivo</value>
  </data>
  <data name="error_flock_on" xml:space="preserve">
    <value>Erro ao criar bloqueio de arquivo</value>
  </data>
  <data name="error_flock_off" xml:space="preserve">
    <value>Erro ao destruir o bloqueio de arquivo</value>
  </data>
  <data name="error_hup" xml:space="preserve">
    <value>Erro ao reiniciar o OpenSLP com PID</value>
  </data>
  <data name="index_start" xml:space="preserve">
    <value>Iniciar o OpenSLP</value>
  </data>
  <data name="index_startmsg" xml:space="preserve">
    <value>Clique neste botão para iniciar o daemon OpenSLP no seu sistema.</value>
  </data>
  <data name="index_stop" xml:space="preserve">
    <value>Stop OpenSLP</value>
  </data>
  <data name="index_stopmsg" xml:space="preserve">
    <value>Clique neste botão para parar o daemon OpenSLP no seu sistema.</value>
  </data>
  <data name="stop_err" xml:space="preserve">
    <value>Falha ao parar o OpenSLP</value>
  </data>
  <data name="start_err" xml:space="preserve">
    <value>Falha ao iniciar o OpenSLP</value>
  </data>
</root>