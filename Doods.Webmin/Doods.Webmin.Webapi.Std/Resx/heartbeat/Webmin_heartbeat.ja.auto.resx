<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>ハートビートモニター</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>ハートビートモニター</value>
  </data>
  <data name="index_start" xml:space="preserve">
    <value>ハートビートモニターを開始する</value>
  </data>
  <data name="index_startmsg" xml:space="preserve">
    <value>このボタンをクリックして、ハートビートモニタープロセスを開始します。これにより、現在の構成でシステムの自動サービスフェールオーバーが有効になります。</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>変更を適用</value>
  </data>
  <data name="index_applymsg" xml:space="preserve">
    <value>このボタンをクリックして、実行中のハートビートモニタープロセスに現在の構成を強制的に再読み込みさせます。</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>ハートビートバージョン $1</value>
  </data>
  <data name="index_status" xml:space="preserve">
    <value>ハートビートステータス</value>
  </data>
  <data name="conf_title" xml:space="preserve">
    <value>構成オプション</value>
  </data>
  <data name="conf_header" xml:space="preserve">
    <value>ハートビート構成オプション</value>
  </data>
  <data name="conf_serials" xml:space="preserve">
    <value>シリアルハートビートポート</value>
  </data>
  <data name="conf_baud" xml:space="preserve">
    <value>シリアルポートのボーレート</value>
  </data>
  <data name="conf_bcasts" xml:space="preserve">
    <value>イーサネットハートビートインターフェイス</value>
  </data>
  <data name="conf_none" xml:space="preserve">
    <value>なし</value>
  </data>
  <data name="conf_udpport" xml:space="preserve">
    <value>UDPハートビートポート</value>
  </data>
  <data name="conf_mcast" xml:space="preserve">
    <value>マルチキャストハートビートデバイス</value>
  </data>
  <data name="conf_mcastv" xml:space="preserve">
    <value>デバイス $1、グループ $2、ポート $3、TTL $4、ループバック $5</value>
  </data>
  <data name="conf_enabled" xml:space="preserve">
    <value>有効化</value>
  </data>
  <data name="conf_disabled" xml:space="preserve">
    <value>無効</value>
  </data>
  <data name="conf_keepalive" xml:space="preserve">
    <value>ハートビート間の時間</value>
  </data>
  <data name="conf_nice_failback" xml:space="preserve">
    <value>素敵なフェールバック動作</value>
  </data>
  <data name="conf_secs" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="conf_deadtime" xml:space="preserve">
    <value>ノードがデッドとみなされるまでの時間</value>
  </data>
  <data name="conf_watchdog" xml:space="preserve">
    <value>ウォッチドッグデバイスファイル</value>
  </data>
  <data name="conf_node" xml:space="preserve">
    <value>クラスター内のホスト</value>
  </data>
  <data name="conf_logfile" xml:space="preserve">
    <value>ハートビートログファイル</value>
  </data>
  <data name="conf_logfacility" xml:space="preserve">
    <value>syslogログ機能</value>
  </data>
  <data name="conf_initdead" xml:space="preserve">
    <value>初期デッドタイム</value>
  </data>
  <data name="conf_ok" xml:space="preserve">
    <value>保存オプション</value>
  </data>
  <data name="conf_err" xml:space="preserve">
    <value>オプションを保存できませんでした</value>
  </data>
  <data name="conf_ebaud" xml:space="preserve">
    <value>ボーレートが欠落しているか無効です</value>
  </data>
  <data name="conf_ebcast" xml:space="preserve">
    <value>ハートビートブロードキャストインターフェイスが入力されていません</value>
  </data>
  <data name="conf_ebcastif" xml:space="preserve">
    <value>「$1」は有効なブロードキャストインターフェイスではありません</value>
  </data>
  <data name="conf_eudpport" xml:space="preserve">
    <value>ハートビートポートがないか、無効です</value>
  </data>
  <data name="conf_ekeepalive" xml:space="preserve">
    <value>ハートビート間の時間がないか無効です</value>
  </data>
  <data name="conf_edeadtime" xml:space="preserve">
    <value>デッドタイムが欠落しているか無効です</value>
  </data>
  <data name="conf_ewatchdog" xml:space="preserve">
    <value>ウォッチドッグデバイスファイルが存在しないか存在しない</value>
  </data>
  <data name="conf_enonode" xml:space="preserve">
    <value>クラスターホストが入力されていません</value>
  </data>
  <data name="conf_ethisnode" xml:space="preserve">
    <value>このホスト $1はクラスターホストリストにありません</value>
  </data>
  <data name="conf_elogfile" xml:space="preserve">
    <value>ログファイル名がないか、無効です</value>
  </data>
  <data name="conf_einitdead" xml:space="preserve">
    <value>初期デッドタイムが欠落しているか無効です</value>
  </data>
  <data name="conf_einitdead2" xml:space="preserve">
    <value>最初のデッドタイムは、ノードがデッドとみなされるまでの時間の少なくとも2倍である必要があります</value>
  </data>
  <data name="conf_emcast_dev" xml:space="preserve">
    <value>マルチキャストデバイスが見つからないか無効です</value>
  </data>
  <data name="conf_emcast_ip" xml:space="preserve">
    <value>マルチキャストグループアドレスが欠落しているか無効です</value>
  </data>
  <data name="conf_emcast_port" xml:space="preserve">
    <value>マルチキャストポート番号が欠落しているか無効です</value>
  </data>
  <data name="conf_emcast_ttl" xml:space="preserve">
    <value>マルチキャストの存続時間の欠落または無効</value>
  </data>
  <data name="conf_auto_on" xml:space="preserve">
    <value>$ {conf_enabled}</value>
  </data>
  <data name="conf_auto_off" xml:space="preserve">
    <value>$ {conf_disabled}</value>
  </data>
  <data name="conf_auto_legacy" xml:space="preserve">
    <value>レガシーモード</value>
  </data>
  <data name="conf_auto_" xml:space="preserve">
    <value>$ {デフォルト}</value>
  </data>
  <data name="res_title" xml:space="preserve">
    <value>クラスターリソース</value>
  </data>
  <data name="res_node" xml:space="preserve">
    <value>プライマリノード</value>
  </data>
  <data name="res_ips" xml:space="preserve">
    <value>IPアドレス</value>
  </data>
  <data name="res_servs" xml:space="preserve">
    <value>ノードサービス</value>
  </data>
  <data name="res_none" xml:space="preserve">
    <value>なし</value>
  </data>
  <data name="res_nores" xml:space="preserve">
    <value>システムにクラスターリソースが定義されていません。</value>
  </data>
  <data name="res_add" xml:space="preserve">
    <value>クラスターリソースを追加する</value>
  </data>
  <data name="res_return" xml:space="preserve">
    <value>リソースリスト</value>
  </data>
  <data name="res_active" xml:space="preserve">
    <value>リソースの状態</value>
  </data>
  <data name="res_getserv" xml:space="preserve">
    <value>リソースを取得</value>
  </data>
  <data name="res_hbdown" xml:space="preserve">
    <value>ハートビートダウン</value>
  </data>
  <data name="res_up" xml:space="preserve">
    <value>アップ</value>
  </data>
  <data name="res_down" xml:space="preserve">
    <value>ダウン</value>
  </data>
  <data name="node_create" xml:space="preserve">
    <value>クラスターリソースの追加</value>
  </data>
  <data name="node_edit" xml:space="preserve">
    <value>クラスターリソースの編集</value>
  </data>
  <data name="node_header" xml:space="preserve">
    <value>クラスターリソースの詳細</value>
  </data>
  <data name="node_node" xml:space="preserve">
    <value>リソースのプライマリノード</value>
  </data>
  <data name="node_ips" xml:space="preserve">
    <value>リソースのIPアドレス</value>
  </data>
  <data name="node_ip" xml:space="preserve">
    <value>IPアドレス</value>
  </data>
  <data name="node_cidr" xml:space="preserve">
    <value>ネットマスクCIDR</value>
  </data>
  <data name="node_broad" xml:space="preserve">
    <value>放送アドレス</value>
  </data>
  <data name="node_servs" xml:space="preserve">
    <value>リソースのサービス</value>
  </data>
  <data name="node_serv" xml:space="preserve">
    <value>サービス</value>
  </data>
  <data name="node_args" xml:space="preserve">
    <value>追加の引数</value>
  </data>
  <data name="node_err" xml:space="preserve">
    <value>クラスターリソースの保存に失敗しました</value>
  </data>
  <data name="node_enone" xml:space="preserve">
    <value>プライマリノードが見つからないか無効です</value>
  </data>
  <data name="node_eip" xml:space="preserve">
    <value>「$1」は有効なIPアドレスではありません</value>
  </data>
  <data name="node_ecidr" xml:space="preserve">
    <value>「$1」は有効なCIDRではありません</value>
  </data>
  <data name="node_ebroad" xml:space="preserve">
    <value>「$1」は有効なブロードキャストアドレスではありません</value>
  </data>
  <data name="auth_title" xml:space="preserve">
    <value>認証キー</value>
  </data>
  <data name="auth_header" xml:space="preserve">
    <value>クラスターノード認証</value>
  </data>
  <data name="auth_mode" xml:space="preserve">
    <value>認証モード</value>
  </data>
  <data name="auth_crc" xml:space="preserve">
    <value>CRC（セキュリティなし）</value>
  </data>
  <data name="auth_sha1" xml:space="preserve">
    <value>パスワード付きのSHA1</value>
  </data>
  <data name="auth_md5" xml:space="preserve">
    <value>パスワード付きのMD5</value>
  </data>
  <data name="auth_err" xml:space="preserve">
    <value>認証キーを保存できませんでした</value>
  </data>
  <data name="auth_emd5" xml:space="preserve">
    <value>MD5パスワードがないか無効です</value>
  </data>
  <data name="auth_esha1" xml:space="preserve">
    <value>SHA1パスワードがないか無効です</value>
  </data>
  <data name="start_err" xml:space="preserve">
    <value>ハートビートを開始できませんでした</value>
  </data>
  <data name="apply_err" xml:space="preserve">
    <value>変更を適用できませんでした</value>
  </data>
  <data name="apply_epid" xml:space="preserve">
    <value>プロセスはもう実行されていません</value>
  </data>
</root>