<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="acl_ggid" xml:space="preserve">
    <value>범위에 GID가있는 그룹</value>
  </data>
  <data name="egroup_listalldesc" xml:space="preserve">
    <value>이 버튼을 클릭하면이 그룹에 디스크 할당량이있는 모든 파일 시스템 목록과 해당 파일을 편집 할 수있는 링크가 표시됩니다.</value>
  </data>
  <data name="euser_listalldesc" xml:space="preserve">
    <value>이 버튼을 클릭하면이 사용자에게 디스크 할당량이있는 모든 파일 시스템의 목록과 해당 파일을 편집 할 수있는 링크가 표시됩니다.</value>
  </data>
  <data name="gfilesys_editdesc" xml:space="preserve">
    <value>현재 할당량이없는 다른 파일 시스템에서이 그룹의 할당량을보고 편집합니다.</value>
  </data>
  <data name="gfilesys_copydesc" xml:space="preserve">
    <value>모든 파일 시스템에서이 그룹의 할당량 제한을 일부 또는 모든 다른 그룹으로 복사하십시오.</value>
  </data>
  <data name="gfilesys_enone" xml:space="preserve">
    <value>그룹 이름이 입력되지 않았습니다</value>
  </data>
  <data name="index_supported" xml:space="preserve">
    <value>아직 지원되지 않는 할당량</value>
  </data>
  <data name="index_enable2" xml:space="preserve">
    <value>지원 활성화</value>
  </data>
  <data name="index_euserdesc" xml:space="preserve">
    <value>사용자를 입력하거나 선택하고이 버튼을 클릭하면 모든 파일 시스템에서 할당량을 볼 수 있습니다.</value>
  </data>
  <data name="index_egroupdesc" xml:space="preserve">
    <value>그룹을 입력하거나 선택하고이 버튼을 클릭하면 모든 파일 시스템의 할당량을 볼 수 있습니다.</value>
  </data>
  <data name="lgroups_tablist" xml:space="preserve">
    <value>그룹리스트</value>
  </data>
  <data name="ufilesys_editdesc" xml:space="preserve">
    <value>현재 할당량이없는 다른 파일 시스템에서이 사용자의 할당량을보고 편집합니다.</value>
  </data>
  <data name="ufilesys_copydesc" xml:space="preserve">
    <value>모든 파일 시스템에서이 사용자에 대한 할당량 제한을 일부 또는 모든 다른 사용자에게 복사하십시오.</value>
  </data>
  <data name="ufilesys_enone" xml:space="preserve">
    <value>입력 한 사용자 이름이 없습니다</value>
  </data>
  <data name="lusers_tablist" xml:space="preserve">
    <value>사용자 목록</value>
  </data>
  <data name="lusers_tabdefault" xml:space="preserve">
    <value>기본 할당량</value>
  </data>
  <data name="lusers_tabemail" xml:space="preserve">
    <value>이메일 알림</value>
  </data>
  <data name="lusers_cc" xml:space="preserve">
    <value>또한 이메일을 보내</value>
  </data>
  <data name="lusers_nocc" xml:space="preserve">
    <value>아무도</value>
  </data>
  <data name="log_support" xml:space="preserve">
    <value>$1 에 대한 할당량 지원 활성화</value>
  </data>
  <data name="email_ecc" xml:space="preserve">
    <value>Cc : 주소가 없거나 잘못되었습니다</value>
  </data>
</root>