<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Perl模块</value>
  </data>
  <data name="index_name" xml:space="preserve">
    <value>模块</value>
  </data>
  <data name="index_sub" xml:space="preserve">
    <value>子模块</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>版本</value>
  </data>
  <data name="index_desc" xml:space="preserve">
    <value>描述</value>
  </data>
  <data name="index_ver" xml:space="preserve">
    <value>版本</value>
  </data>
  <data name="index_date" xml:space="preserve">
    <value>安装日期</value>
  </data>
  <data name="index_installmsg" xml:space="preserve">
    <value>选择一个新的Perl模块编译并安装到您的系统上</value>
  </data>
  <data name="index_cpan" xml:space="preserve">
    <value>来自CPAN，命名为</value>
  </data>
  <data name="index_refresh" xml:space="preserve">
    <value>刷新CPAN模块列表</value>
  </data>
  <data name="index_local" xml:space="preserve">
    <value>从本地文件</value>
  </data>
  <data name="index_uploaded" xml:space="preserve">
    <value>从上载文件</value>
  </data>
  <data name="index_ftp" xml:space="preserve">
    <value>从ftp或者http URL</value>
  </data>
  <data name="index_installok" xml:space="preserve">
    <value>安装</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>模块列表</value>
  </data>
  <data name="index_pversion" xml:space="preserve">
    <value>Perl 版本 $1</value>
  </data>
  <data name="download_err" xml:space="preserve">
    <value>模块安装失败</value>
  </data>
  <data name="download_elocal" xml:space="preserve">
    <value>没有给出本地文件</value>
  </data>
  <data name="download_elocal2" xml:space="preserve">
    <value>'$1'不存在</value>
  </data>
  <data name="download_eupload" xml:space="preserve">
    <value>您的浏览器不支持文件上载</value>
  </data>
  <data name="download_eurl" xml:space="preserve">
    <value>无效的URL'$1'</value>
  </data>
  <data name="download_edir" xml:space="preserve">
    <value>$1不是有效的目录</value>
  </data>
  <data name="download_etar" xml:space="preserve">
    <value>不能解压压缩文件$1</value>
  </data>
  <data name="download_emod" xml:space="preserve">
    <value>无效的 Perl 模块</value>
  </data>
  <data name="download_title" xml:space="preserve">
    <value>安装模块</value>
  </data>
  <data name="download_header" xml:space="preserve">
    <value>Perl 模块安装选项</value>
  </data>
  <data name="download_mod" xml:space="preserve">
    <value>模块名</value>
  </data>
  <data name="download_mods" xml:space="preserve">
    <value>模块名称</value>
  </data>
  <data name="download_ver" xml:space="preserve">
    <value>版本</value>
  </data>
  <data name="download_act" xml:space="preserve">
    <value>安装行动</value>
  </data>
  <data name="download_src" xml:space="preserve">
    <value>源</value>
  </data>
  <data name="download_pres" xml:space="preserve">
    <value>缺少前缀</value>
  </data>
  <data name="download_m" xml:space="preserve">
    <value>仅编译</value>
  </data>
  <data name="download_mt" xml:space="preserve">
    <value>编译并测试</value>
  </data>
  <data name="download_mi" xml:space="preserve">
    <value>编译并安装</value>
  </data>
  <data name="download_mti" xml:space="preserve">
    <value>编译、测试并安装</value>
  </data>
  <data name="download_cont" xml:space="preserve">
    <value>继续安装</value>
  </data>
  <data name="download_epackages" xml:space="preserve">
    <value>无效的 CPAN 模块 URL</value>
  </data>
  <data name="download_ecpan" xml:space="preserve">
    <value>在 CPAN 模块列表中未找到模块 $1</value>
  </data>
  <data name="download_eisperl" xml:space="preserve">
    <value>模块 $1 已经包含在Perl的标准发行版中</value>
  </data>
  <data name="download_args" xml:space="preserve">
    <value>&lt;tt&gt;Makefile.PL&lt;/tt&gt;参数</value>
  </data>
  <data name="download_envs" xml:space="preserve">
    <value>&lt;tt&gt;Makefile.PL&lt;/tt&gt; 环境变量</value>
  </data>
  <data name="download_name" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="download_value" xml:space="preserve">
    <value>变量值</value>
  </data>
  <data name="download_emodname" xml:space="preserve">
    <value>模块没有安装</value>
  </data>
  <data name="download_need" xml:space="preserve">
    <value>Fetching Missing Pre-Requesites</value>
  </data>
  <data name="download_missing" xml:space="preserve">
    <value>缺少模块 $1</value>
  </data>
  <data name="download_nomissing" xml:space="preserve">
    <value>已全部安装</value>
  </data>
  <data name="install_title" xml:space="preserve">
    <value>安装模块</value>
  </data>
  <data name="install_untar" xml:space="preserve">
    <value>解压压缩的模块文件</value>
  </data>
  <data name="install_make" xml:space="preserve">
    <value>编译模块中</value>
  </data>
  <data name="install_test" xml:space="preserve">
    <value>测试模块中</value>
  </data>
  <data name="install_install" xml:space="preserve">
    <value>安装模块中</value>
  </data>
  <data name="install_loop" xml:space="preserve">
    <value>在输出中发现可能的无限循环</value>
  </data>
  <data name="install_done_0" xml:space="preserve">
    <value>编译 $1 成功。</value>
  </data>
  <data name="install_done_1" xml:space="preserve">
    <value>编译并测试 $1 成功。</value>
  </data>
  <data name="install_done_2" xml:space="preserve">
    <value>编译并安装 $1 成功。</value>
  </data>
  <data name="install_done_3" xml:space="preserve">
    <value>编译、测试并安装 $1 成功。</value>
  </data>
  <data name="install_doing_0" xml:space="preserve">
    <value>编译 $1 ...</value>
  </data>
  <data name="install_doing_1" xml:space="preserve">
    <value>编译并测试 $1 ...</value>
  </data>
  <data name="install_doing_2" xml:space="preserve">
    <value>编译并安装 $1 ...</value>
  </data>
  <data name="install_doing_3" xml:space="preserve">
    <value>编译，测试并安装 $1 ...</value>
  </data>
  <data name="install_err" xml:space="preserve">
    <value>安装 $1 失败。检查上面的输出，并尝试手工安装。</value>
  </data>
  <data name="install_err2" xml:space="preserve">
    <value>您也可以用命令$1从CPAN来安装模块</value>
  </data>
  <data name="install_exec" xml:space="preserve">
    <value>执行 $1..</value>
  </data>
  <data name="install_efile" xml:space="preserve">
    <value>模块文件 $1 不存在</value>
  </data>
  <data name="cpan_sel" xml:space="preserve">
    <value>模块在 $1 下..</value>
  </data>
  <data name="cpan_title" xml:space="preserve">
    <value>选择 Perl 模块</value>
  </data>
  <data name="cpan_search" xml:space="preserve">
    <value>寻找名为..的模块</value>
  </data>
  <data name="cpan_match" xml:space="preserve">
    <value>与模组$1 .. 匹配</value>
  </data>
  <data name="cpan_none" xml:space="preserve">
    <value>未找到匹配的模组。</value>
  </data>
  <data name="edit_title" xml:space="preserve">
    <value>模块细节</value>
  </data>
  <data name="edit_header" xml:space="preserve">
    <value>模块信息</value>
  </data>
  <data name="edit_mod" xml:space="preserve">
    <value>模块名称</value>
  </data>
  <data name="edit_desc" xml:space="preserve">
    <value>描述</value>
  </data>
  <data name="edit_date" xml:space="preserve">
    <value>安装位置</value>
  </data>
  <data name="edit_subs" xml:space="preserve">
    <value>子模块</value>
  </data>
  <data name="edit_header2" xml:space="preserve">
    <value>模块文档</value>
  </data>
  <data name="edit_file" xml:space="preserve">
    <value>模块文件</value>
  </data>
  <data name="edit_none" xml:space="preserve">
    <value>不可用</value>
  </data>
  <data name="edit_return" xml:space="preserve">
    <value>模块细节</value>
  </data>
  <data name="edit_uninstall" xml:space="preserve">
    <value>卸载模块和子模块</value>
  </data>
  <data name="edit_upgrade" xml:space="preserve">
    <value>从 CPAN 升级模块</value>
  </data>
  <data name="uninstall_title" xml:space="preserve">
    <value>卸载模块</value>
  </data>
  <data name="uninstall_rusure" xml:space="preserve">
    <value>您确定要卸载Perl模块$1？下面的文件也将被删除：</value>
  </data>
  <data name="uninstall_rusure2" xml:space="preserve">
    <value>您确定要卸载Perl模块$1和子模块$2吗？下面的文件也将被删除：</value>
  </data>
  <data name="uninstall_ok" xml:space="preserve">
    <value>现在卸载</value>
  </data>
  <data name="delete_efile" xml:space="preserve">
    <value>无效的文件包</value>
  </data>
</root>