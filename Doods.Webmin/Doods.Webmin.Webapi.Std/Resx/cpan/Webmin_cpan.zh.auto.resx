<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_forcecpan" xml:space="preserve">
    <value>一律从源代码安装最新版本</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>卸载模块</value>
  </data>
  <data name="index_upgrade" xml:space="preserve">
    <value>升级模块</value>
  </data>
  <data name="index_recs" xml:space="preserve">
    <value>Webmin建议安装以下Perl模块：</value>
  </data>
  <data name="index_user" xml:space="preserve">
    <value>$1（由 $2使用）</value>
  </data>
  <data name="index_recsok" xml:space="preserve">
    <value>安装选定的模块</value>
  </data>
  <data name="index_recsgot" xml:space="preserve">
    <value>已安装Webmin推荐的以下所有Perl模块： $1</value>
  </data>
  <data name="index_ezone" xml:space="preserve">
    <value>Perl似乎与全局区域共享，因此无法在此处安装模块。必须将它们安装在全局区域中。</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>在您的系统上找不到已安装的Perl模块。</value>
  </data>
  <data name="index_tabmods" xml:space="preserve">
    <value>现有模块</value>
  </data>
  <data name="index_tabinstall" xml:space="preserve">
    <value>安装模块</value>
  </data>
  <data name="index_tabsuggest" xml:space="preserve">
    <value>建议模块</value>
  </data>
  <data name="index_allmods2" xml:space="preserve">
    <value>Webmin使用的缺少模块</value>
  </data>
  <data name="index_wantmods" xml:space="preserve">
    <value>要安装的模块</value>
  </data>
  <data name="download_ecpangz" xml:space="preserve">
    <value>URL $1不是CPAN模块列表。检查模块配置。</value>
  </data>
  <data name="download_ebuild" xml:space="preserve">
    <value>需要构建 $1的一个或多个Perl模块，但是尚未安装此Perl模块。</value>
  </data>
  <data name="download_yum" xml:space="preserve">
    <value>从软件包 $2..中安装Perl模块 $1。</value>
  </data>
  <data name="download_missingok" xml:space="preserve">
    <value>CPAN中缺少的模块</value>
  </data>
  <data name="download_fallback" xml:space="preserve">
    <value>有些模块无法从软件包安装，而是尝试从源代码安装。</value>
  </data>
  <data name="edit_method" xml:space="preserve">
    <value>从安装</value>
  </data>
  <data name="edit_rpm" xml:space="preserve">
    <value>RPM软件包 $1</value>
  </data>
  <data name="edit_debian" xml:space="preserve">
    <value>Debian软件包 $1</value>
  </data>
  <data name="edit_manual" xml:space="preserve">
    <value>手动安装Perl模块</value>
  </data>
  <data name="uninstall_rpm" xml:space="preserve">
    <value>卸载 $1 RPM软件包将删除该模块。</value>
  </data>
  <data name="uninstall_debian" xml:space="preserve">
    <value>卸载 $1 Debian软件包将删除该模块。</value>
  </data>
  <data name="uninstall_err" xml:space="preserve">
    <value>无法卸载模块</value>
  </data>
  <data name="uninstalls_title" xml:space="preserve">
    <value>卸载模块</value>
  </data>
  <data name="uninstalls_err" xml:space="preserve">
    <value>无法卸载模块</value>
  </data>
  <data name="uninstalls_enone" xml:space="preserve">
    <value>未选择</value>
  </data>
  <data name="uninstalls_emod" xml:space="preserve">
    <value>$1失败： $2</value>
  </data>
  <data name="uninstalls_rusure" xml:space="preserve">
    <value>您确定要卸载 $1所选模块吗？ $2个子模块和 $3个文件将被删除。</value>
  </data>
</root>