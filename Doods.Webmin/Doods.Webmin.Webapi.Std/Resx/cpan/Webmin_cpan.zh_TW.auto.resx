<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_forcecpan" xml:space="preserve">
    <value>一律從源代碼安裝最新版本</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>卸載模塊</value>
  </data>
  <data name="index_upgrade" xml:space="preserve">
    <value>升級模塊</value>
  </data>
  <data name="index_recs" xml:space="preserve">
    <value>Webmin建議安裝以下Perl模塊：</value>
  </data>
  <data name="index_user" xml:space="preserve">
    <value>$1（由 $2使用）</value>
  </data>
  <data name="index_recsok" xml:space="preserve">
    <value>安裝選定的模塊</value>
  </data>
  <data name="index_recsgot" xml:space="preserve">
    <value>已安裝Webmin推薦的以下所有Perl模塊： $1</value>
  </data>
  <data name="index_ezone" xml:space="preserve">
    <value>Perl似乎與全局區域共享，因此無法在此處安裝模塊。必須將它們安裝在全局區域中。</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>在您的系統上找不到已安裝的Perl模塊。</value>
  </data>
  <data name="index_tabmods" xml:space="preserve">
    <value>現有模塊</value>
  </data>
  <data name="index_tabinstall" xml:space="preserve">
    <value>安裝模塊</value>
  </data>
  <data name="index_tabsuggest" xml:space="preserve">
    <value>建議模塊</value>
  </data>
  <data name="index_allmods2" xml:space="preserve">
    <value>Webmin使用的缺少模塊</value>
  </data>
  <data name="index_wantmods" xml:space="preserve">
    <value>要安裝的模塊</value>
  </data>
  <data name="download_ecpangz" xml:space="preserve">
    <value>URL $1不是CPAN模塊列表。檢查模塊配置。</value>
  </data>
  <data name="download_ebuild" xml:space="preserve">
    <value>需要構建 $1的一個或多個Perl模塊，但是尚未安裝此Perl模塊。</value>
  </data>
  <data name="download_yum" xml:space="preserve">
    <value>從軟件包 $2..中安裝Perl模塊 $1。</value>
  </data>
  <data name="download_missingok" xml:space="preserve">
    <value>CPAN中缺少的模塊</value>
  </data>
  <data name="download_fallback" xml:space="preserve">
    <value>某些模塊無法從軟件包安裝，而是嘗試從源代碼安裝。</value>
  </data>
  <data name="edit_method" xml:space="preserve">
    <value>從安裝</value>
  </data>
  <data name="edit_rpm" xml:space="preserve">
    <value>RPM軟件包 $1</value>
  </data>
  <data name="edit_debian" xml:space="preserve">
    <value>Debian軟件包 $1</value>
  </data>
  <data name="edit_manual" xml:space="preserve">
    <value>手動安裝Perl模塊</value>
  </data>
  <data name="uninstall_rpm" xml:space="preserve">
    <value>卸載 $1 RPM軟件包將刪除該模塊。</value>
  </data>
  <data name="uninstall_debian" xml:space="preserve">
    <value>卸載 $1 Debian軟件包將刪除該模塊。</value>
  </data>
  <data name="uninstall_err" xml:space="preserve">
    <value>無法卸載模塊</value>
  </data>
  <data name="uninstalls_title" xml:space="preserve">
    <value>卸載模塊</value>
  </data>
  <data name="uninstalls_err" xml:space="preserve">
    <value>無法卸載模塊</value>
  </data>
  <data name="uninstalls_enone" xml:space="preserve">
    <value>未選擇</value>
  </data>
  <data name="uninstalls_emod" xml:space="preserve">
    <value>$1失敗： $2</value>
  </data>
  <data name="uninstalls_rusure" xml:space="preserve">
    <value>您確定要卸載 $1所選模塊嗎？ $2子模塊和 $3文件將被刪除。</value>
  </data>
</root>