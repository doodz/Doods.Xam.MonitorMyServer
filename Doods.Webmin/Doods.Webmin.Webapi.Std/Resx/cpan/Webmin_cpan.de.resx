<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Perl-Module</value>
  </data>
  <data name="index_name" xml:space="preserve">
    <value>Modul</value>
  </data>
  <data name="index_sub" xml:space="preserve">
    <value>Untermodule</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="index_desc" xml:space="preserve">
    <value>Beschreibung</value>
  </data>
  <data name="index_ver" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="index_date" xml:space="preserve">
    <value>Installiert am</value>
  </data>
  <data name="index_installmsg" xml:space="preserve">
    <value>Wählen Sie ein neues Perl-Modul, das auf ihrem System kompiliert und installiert werden soll.</value>
  </data>
  <data name="index_cpan" xml:space="preserve">
    <value>Von CPAN, namens</value>
  </data>
  <data name="index_refresh" xml:space="preserve">
    <value>Neue Modul-Liste von CPAN holen</value>
  </data>
  <data name="index_forcecpan" xml:space="preserve">
    <value>Installiere immer die aktuellste Version aus dem Quellcode</value>
  </data>
  <data name="index_local" xml:space="preserve">
    <value>Aus lokaler Datei</value>
  </data>
  <data name="index_uploaded" xml:space="preserve">
    <value>Aus heraufgeladener Datei</value>
  </data>
  <data name="index_ftp" xml:space="preserve">
    <value>Von ftp- oder http-URL</value>
  </data>
  <data name="index_installok" xml:space="preserve">
    <value>Installieren</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>Perl-Module</value>
  </data>
  <data name="index_pversion" xml:space="preserve">
    <value>Perl-Version $1</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>Deinstalliere Module</value>
  </data>
  <data name="index_upgrade" xml:space="preserve">
    <value>Aktualisiere ausgewählte Module</value>
  </data>
  <data name="index_recs" xml:space="preserve">
    <value>Die Installation folgenden Perl-Module wird von Webmin empfohlen:</value>
  </data>
  <data name="index_user" xml:space="preserve">
    <value>$1 (benutzt von $2)</value>
  </data>
  <data name="index_recsok" xml:space="preserve">
    <value>Installiere ausgewählte Module</value>
  </data>
  <data name="index_recsgot" xml:space="preserve">
    <value>Die folgenden Perl Module die Webmin benötigt sind bereits installiert : $1</value>
  </data>
  <data name="index_ezone" xml:space="preserve">
    <value>Perl scheint mit der globalen Zone gemeinsam genutzt zu werden, sodass Module hier nicht installiert werden können. Diese müssen stattdessen in der globalen Zone installiert werden.</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>Auf ihrem System wurden keine installierten Perl-Module gefunden.</value>
  </data>
  <data name="index_tabmods" xml:space="preserve">
    <value>Bereits installierte Module</value>
  </data>
  <data name="index_tabinstall" xml:space="preserve">
    <value>Installiere Module</value>
  </data>
  <data name="index_tabsuggest" xml:space="preserve">
    <value>Empfohlene Module</value>
  </data>
  <data name="index_allmods2" xml:space="preserve">
    <value>Fehlende Module, die von Webmin verwendet werden</value>
  </data>
  <data name="index_wantmods" xml:space="preserve">
    <value>Module zum installieren</value>
  </data>
  <data name="download_err" xml:space="preserve">
    <value>Fehler beim Installieren des Moduls</value>
  </data>
  <data name="download_elocal" xml:space="preserve">
    <value>Keine lokale Datei angegeben</value>
  </data>
  <data name="download_elocal2" xml:space="preserve">
    <value>'$1' ist nicht vorhanden</value>
  </data>
  <data name="download_eupload" xml:space="preserve">
    <value>Der von Ihnen verwendete Browser unterstützt keine Datei-Uploads</value>
  </data>
  <data name="download_eurl" xml:space="preserve">
    <value>Unverständliche URL '$1'</value>
  </data>
  <data name="download_edir" xml:space="preserve">
    <value>Kein gültiges $1 Verzeichnis</value>
  </data>
  <data name="download_etar" xml:space="preserve">
    <value>Fehler beim Entpacken des TAR-Archivs : $1</value>
  </data>
  <data name="download_emod" xml:space="preserve">
    <value>Kein gültiges Perl-Modul</value>
  </data>
  <data name="download_title" xml:space="preserve">
    <value>Installiere Modul</value>
  </data>
  <data name="download_header" xml:space="preserve">
    <value>Perl-Modul Installationsoptionen</value>
  </data>
  <data name="download_mod" xml:space="preserve">
    <value>Modulname</value>
  </data>
  <data name="download_mods" xml:space="preserve">
    <value>Modulnamen</value>
  </data>
  <data name="download_ver" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="download_act" xml:space="preserve">
    <value>Installationsaktion</value>
  </data>
  <data name="download_src" xml:space="preserve">
    <value>Quelle</value>
  </data>
  <data name="download_pres" xml:space="preserve">
    <value>Abhängigkeiten</value>
  </data>
  <data name="download_m" xml:space="preserve">
    <value>Nur kompilieren</value>
  </data>
  <data name="download_mt" xml:space="preserve">
    <value>Kompilieren und testen</value>
  </data>
  <data name="download_mi" xml:space="preserve">
    <value>Kompilieren und installieren</value>
  </data>
  <data name="download_mti" xml:space="preserve">
    <value>Kompilieren, testen und installieren</value>
  </data>
  <data name="download_cont" xml:space="preserve">
    <value>Installation fortsetzen</value>
  </data>
  <data name="download_epackages" xml:space="preserve">
    <value>Ungültige CPAN Modul-URL</value>
  </data>
  <data name="download_ecpan" xml:space="preserve">
    <value>Modul $1 wurde nicht in der CPAN Modul-Liste gefunden</value>
  </data>
  <data name="download_eisperl" xml:space="preserve">
    <value>Modul $1 ist Teil der Standard Perl-Distribution</value>
  </data>
  <data name="download_ecpangz" xml:space="preserve">
    <value>URL $1 ist nicht die CPAN-Module Liste. Überprüfen Sie die Konfiguration des Moduls.</value>
  </data>
  <data name="download_args" xml:space="preserve">
    <value>&lt;tt&gt;Makefile.PL&lt;/tt&gt; Argumente</value>
  </data>
  <data name="download_envs" xml:space="preserve">
    <value>&lt;tt&gt;Makefile.PL&lt;/tt&gt; Umgebungsvariable</value>
  </data>
  <data name="download_name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="download_value" xml:space="preserve">
    <value>Wert</value>
  </data>
  <data name="download_emodname" xml:space="preserve">
    <value>Kein zu installierendes Modul eingegeben</value>
  </data>
  <data name="download_need" xml:space="preserve">
    <value>Hole fehlende Abhängigkeiten</value>
  </data>
  <data name="download_missing" xml:space="preserve">
    <value>Fehlende $1 Module</value>
  </data>
  <data name="download_nomissing" xml:space="preserve">
    <value>Alles installiert</value>
  </data>
  <data name="download_ebuild" xml:space="preserve">
    <value>Ein oder mehrere der Perl-Module benötigen $1 um gebaut zu werden, aber dieses Perl-Modul ist nicht installiert.</value>
  </data>
  <data name="download_yum" xml:space="preserve">
    <value>Installiere Perl Module $1 vom Paket $2 ..</value>
  </data>
  <data name="download_missingok" xml:space="preserve">
    <value>Module fehlend von CPAN</value>
  </data>
  <data name="download_fallback" xml:space="preserve">
    <value>Einige Module konnten nicht von den Packages installiert werden, versuche die Installation stattdessen von der Quelle ..</value>
  </data>
  <data name="install_title" xml:space="preserve">
    <value>Installiere Modul</value>
  </data>
  <data name="install_untar" xml:space="preserve">
    <value>Entpacke Moduldateien</value>
  </data>
  <data name="install_make" xml:space="preserve">
    <value>Kompiliere Modul</value>
  </data>
  <data name="install_test" xml:space="preserve">
    <value>Teste Modul</value>
  </data>
  <data name="install_install" xml:space="preserve">
    <value>Installiere Modul</value>
  </data>
  <data name="install_loop" xml:space="preserve">
    <value>Mögliche Endlosschleife in der Modulausgabe!</value>
  </data>
  <data name="install_done_0" xml:space="preserve">
    <value>Kompilierung von $1 erfolgreich.</value>
  </data>
  <data name="install_done_1" xml:space="preserve">
    <value>Kompilierung und Test von $1 erfolgreich.</value>
  </data>
  <data name="install_done_2" xml:space="preserve">
    <value>Kompilierung und Installation von $1 erfolgreich.</value>
  </data>
  <data name="install_done_3" xml:space="preserve">
    <value>Kompilierung, Test und Installation von $1 erfolgreich.</value>
  </data>
  <data name="install_doing_0" xml:space="preserve">
    <value>Kompiliere $1 ..</value>
  </data>
  <data name="install_doing_1" xml:space="preserve">
    <value>Kompiliere und teste $1 ..</value>
  </data>
  <data name="install_doing_2" xml:space="preserve">
    <value>Kompiliere und installiere $1 ..</value>
  </data>
  <data name="install_doing_3" xml:space="preserve">
    <value>Kompiliere, teste und installieren $1</value>
  </data>
  <data name="install_err" xml:space="preserve">
    <value>Installation von $1 fehlgeschlagen. Überprüfen Sie die obigen Ausgaben und versuchen Sie, das Modul manuell zu installieren.</value>
  </data>
  <data name="install_err2" xml:space="preserve">
    <value>Sie können das Modul von CPAN auch installieren mit dem Befehl $1.</value>
  </data>
  <data name="install_exec" xml:space="preserve">
    <value>Starte $1 ..</value>
  </data>
  <data name="install_efile" xml:space="preserve">
    <value>Moduldatei $1 ist nicht mehr vorhanden</value>
  </data>
  <data name="cpan_sel" xml:space="preserve">
    <value>Module unter $1 ..</value>
  </data>
  <data name="cpan_title" xml:space="preserve">
    <value>Wählen Sie das Perl-Modul</value>
  </data>
  <data name="cpan_search" xml:space="preserve">
    <value>Finde Module mit dem Namen:</value>
  </data>
  <data name="cpan_match" xml:space="preserve">
    <value>Passende(s) Modul(e) $1 ..</value>
  </data>
  <data name="cpan_none" xml:space="preserve">
    <value>Keine Übereinstimmung gefunden.</value>
  </data>
  <data name="edit_title" xml:space="preserve">
    <value>Modul-Details</value>
  </data>
  <data name="edit_header" xml:space="preserve">
    <value>Modulinformation</value>
  </data>
  <data name="edit_mod" xml:space="preserve">
    <value>Modulname</value>
  </data>
  <data name="edit_desc" xml:space="preserve">
    <value>Beschreibung</value>
  </data>
  <data name="edit_date" xml:space="preserve">
    <value>Installiert am</value>
  </data>
  <data name="edit_subs" xml:space="preserve">
    <value>Untermodule</value>
  </data>
  <data name="edit_header2" xml:space="preserve">
    <value>Moduldokumentation</value>
  </data>
  <data name="edit_file" xml:space="preserve">
    <value>Moduldatei</value>
  </data>
  <data name="edit_none" xml:space="preserve">
    <value>Keines verfügbar</value>
  </data>
  <data name="edit_return" xml:space="preserve">
    <value>Modul-Details</value>
  </data>
  <data name="edit_uninstall" xml:space="preserve">
    <value>Deinstalliere Modul und Untermodule</value>
  </data>
  <data name="edit_upgrade" xml:space="preserve">
    <value>Aktualisiere Modul via CPAN</value>
  </data>
  <data name="edit_method" xml:space="preserve">
    <value>Installiert von</value>
  </data>
  <data name="edit_rpm" xml:space="preserve">
    <value>RPM-Paket $1</value>
  </data>
  <data name="edit_debian" xml:space="preserve">
    <value>Debianpaket $1</value>
  </data>
  <data name="edit_manual" xml:space="preserve">
    <value>Manuelle Installation eines Perl-Modules</value>
  </data>
  <data name="uninstall_title" xml:space="preserve">
    <value>Deinstalliere Module</value>
  </data>
  <data name="uninstall_rusure" xml:space="preserve">
    <value>Sind Sie sicher, daß Sie das Perl-Modul $1 deinstallieren wollen? Die folgenden Dateien werden gelöscht:</value>
  </data>
  <data name="uninstall_rusure2" xml:space="preserve">
    <value>Sind Sie sicher, daß Sie das Perl-Modul $1 und Untermodul(e) $2 deinstallieren wollen? &lt;br&gt; Die folgenden Dateien werden gelöscht:</value>
  </data>
  <data name="uninstall_ok" xml:space="preserve">
    <value>Jetzt deinstallieren</value>
  </data>
  <data name="uninstall_rpm" xml:space="preserve">
    <value>Das Modul wird durch die Deinstallation des RPM-Paketes $1 deinstalliert.</value>
  </data>
  <data name="uninstall_debian" xml:space="preserve">
    <value>Dieses Modul wird durch die Deinstallation des $1 Debianpaketes entfernt.</value>
  </data>
  <data name="uninstall_err" xml:space="preserve">
    <value>Konnte Modul nicht deinstallieren</value>
  </data>
  <data name="delete_efile" xml:space="preserve">
    <value>Ungültige Paketdatei!</value>
  </data>
  <data name="uninstalls_title" xml:space="preserve">
    <value>Deinstalliere ausgewählte Module</value>
  </data>
  <data name="uninstalls_err" xml:space="preserve">
    <value>Fehler beim Deinstallieren der Module</value>
  </data>
  <data name="uninstalls_enone" xml:space="preserve">
    <value>Keine Module ausgewählt</value>
  </data>
  <data name="uninstalls_emod" xml:space="preserve">
    <value>$1 fehlgeschlagen : $2</value>
  </data>
  <data name="uninstalls_rusure" xml:space="preserve">
    <value>Sind Sie sicher, dass Sie die ausgewählten Module $1 deinstallieren möchten? Die folgenden Untermodule $2 und $3-Dateien werden ebenfalls entfernt.</value>
  </data>
</root>