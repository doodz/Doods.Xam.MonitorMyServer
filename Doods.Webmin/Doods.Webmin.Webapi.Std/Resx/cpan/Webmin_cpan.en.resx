<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Perl Modules</value>
  </data>
  <data name="index_name" xml:space="preserve">
    <value>Module</value>
  </data>
  <data name="index_sub" xml:space="preserve">
    <value>Submodules</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="index_desc" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="index_ver" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="index_date" xml:space="preserve">
    <value>Installed on</value>
  </data>
  <data name="index_installmsg" xml:space="preserve">
    <value>Select a new Perl module to compile and install on your system.</value>
  </data>
  <data name="index_cpan" xml:space="preserve">
    <value>From CPAN, named</value>
  </data>
  <data name="index_refresh" xml:space="preserve">
    <value>Refresh module list from CPAN</value>
  </data>
  <data name="index_forcecpan" xml:space="preserve">
    <value>Always install latest version from source</value>
  </data>
  <data name="index_local" xml:space="preserve">
    <value>From local file</value>
  </data>
  <data name="index_uploaded" xml:space="preserve">
    <value>From uploaded file</value>
  </data>
  <data name="index_ftp" xml:space="preserve">
    <value>From ftp or http URL</value>
  </data>
  <data name="index_installok" xml:space="preserve">
    <value>Install</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>modules list</value>
  </data>
  <data name="index_pversion" xml:space="preserve">
    <value>Perl version $1</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>Uninstall Modules</value>
  </data>
  <data name="index_upgrade" xml:space="preserve">
    <value>Upgrade Modules</value>
  </data>
  <data name="index_recs" xml:space="preserve">
    <value>The following Perl modules are recommended for installation by Webmin :</value>
  </data>
  <data name="index_user" xml:space="preserve">
    <value>$1 (used by $2)</value>
  </data>
  <data name="index_recsok" xml:space="preserve">
    <value>Install Selected Modules</value>
  </data>
  <data name="index_recsgot" xml:space="preserve">
    <value>All of the following Perl modules recommended by Webmin are installed : $1</value>
  </data>
  <data name="index_ezone" xml:space="preserve">
    <value>Perl appears to be shared with the global zone, so modules cannot be installed here. They must be installed in the global zone instead.</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>No installed Perl modules were found on your system.</value>
  </data>
  <data name="index_tabmods" xml:space="preserve">
    <value>Existing modules</value>
  </data>
  <data name="index_tabinstall" xml:space="preserve">
    <value>Install module</value>
  </data>
  <data name="index_tabsuggest" xml:space="preserve">
    <value>Suggested modules</value>
  </data>
  <data name="index_allmods2" xml:space="preserve">
    <value>Missing modules used by Webmin</value>
  </data>
  <data name="index_wantmods" xml:space="preserve">
    <value>Modules to install</value>
  </data>
  <data name="download_err" xml:space="preserve">
    <value>Failed to install module</value>
  </data>
  <data name="download_elocal" xml:space="preserve">
    <value>No local file given</value>
  </data>
  <data name="download_elocal2" xml:space="preserve">
    <value>'$1' does not exist</value>
  </data>
  <data name="download_eupload" xml:space="preserve">
    <value>Your browser does not support file uploads</value>
  </data>
  <data name="download_eurl" xml:space="preserve">
    <value>Incomprehensible URL '$1'</value>
  </data>
  <data name="download_edir" xml:space="preserve">
    <value>Not a valid $1 directory</value>
  </data>
  <data name="download_etar" xml:space="preserve">
    <value>Failed to extract tar file : $1</value>
  </data>
  <data name="download_emod" xml:space="preserve">
    <value>Not a valid Perl module</value>
  </data>
  <data name="download_title" xml:space="preserve">
    <value>Install Module</value>
  </data>
  <data name="download_header" xml:space="preserve">
    <value>Perl module install options</value>
  </data>
  <data name="download_mod" xml:space="preserve">
    <value>Module name</value>
  </data>
  <data name="download_mods" xml:space="preserve">
    <value>Module names</value>
  </data>
  <data name="download_ver" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="download_act" xml:space="preserve">
    <value>Install action</value>
  </data>
  <data name="download_src" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="download_pres" xml:space="preserve">
    <value>Pre-requisites</value>
  </data>
  <data name="download_m" xml:space="preserve">
    <value>Make only</value>
  </data>
  <data name="download_mt" xml:space="preserve">
    <value>Make and test</value>
  </data>
  <data name="download_mi" xml:space="preserve">
    <value>Make and install</value>
  </data>
  <data name="download_mti" xml:space="preserve">
    <value>Make, test and install</value>
  </data>
  <data name="download_cont" xml:space="preserve">
    <value>Continue With Install</value>
  </data>
  <data name="download_epackages" xml:space="preserve">
    <value>Invalid CPAN modules URL</value>
  </data>
  <data name="download_ecpan" xml:space="preserve">
    <value>Module $1 was not found in the CPAN modules list</value>
  </data>
  <data name="download_eisperl" xml:space="preserve">
    <value>Module $1 is part of the standard Perl distribution</value>
  </data>
  <data name="download_ecpangz" xml:space="preserve">
    <value>URL $1 is not the CPAN modules list. Check the module configuration.</value>
  </data>
  <data name="download_args" xml:space="preserve">
    <value>&lt;tt&gt;Makefile.PL&lt;/tt&gt; arguments</value>
  </data>
  <data name="download_envs" xml:space="preserve">
    <value>&lt;tt&gt;Makefile.PL&lt;/tt&gt; environment variables</value>
  </data>
  <data name="download_name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="download_value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="download_emodname" xml:space="preserve">
    <value>No module to install was entered</value>
  </data>
  <data name="download_need" xml:space="preserve">
    <value>Fetching Missing Pre-Requisites</value>
  </data>
  <data name="download_missing" xml:space="preserve">
    <value>Missing $1 modules</value>
  </data>
  <data name="download_nomissing" xml:space="preserve">
    <value>All installed</value>
  </data>
  <data name="download_ebuild" xml:space="preserve">
    <value>One or more of the Perl modules needs $1 to be built, but this Perl module is not installed.</value>
  </data>
  <data name="download_yum" xml:space="preserve">
    <value>Installing Perl module $1 from package $2 ..</value>
  </data>
  <data name="download_missingok" xml:space="preserve">
    <value>Modules missing from CPAN</value>
  </data>
  <data name="download_fallback" xml:space="preserve">
    <value>Some modules failed to install from packages, trying installation from source instead..</value>
  </data>
  <data name="install_title" xml:space="preserve">
    <value>Install Module</value>
  </data>
  <data name="install_untar" xml:space="preserve">
    <value>Untarring module file</value>
  </data>
  <data name="install_make" xml:space="preserve">
    <value>Compiling module</value>
  </data>
  <data name="install_test" xml:space="preserve">
    <value>Testing module</value>
  </data>
  <data name="install_install" xml:space="preserve">
    <value>Installing module</value>
  </data>
  <data name="install_loop" xml:space="preserve">
    <value>Possible endless loop in output detected!</value>
  </data>
  <data name="install_done_0" xml:space="preserve">
    <value>Make of $1 successful.</value>
  </data>
  <data name="install_done_1" xml:space="preserve">
    <value>Make and test of $1 successful.</value>
  </data>
  <data name="install_done_2" xml:space="preserve">
    <value>Make and install of $1 successful.</value>
  </data>
  <data name="install_done_3" xml:space="preserve">
    <value>Make, test and install of $1 successful.</value>
  </data>
  <data name="install_doing_0" xml:space="preserve">
    <value>Making $1 ..</value>
  </data>
  <data name="install_doing_1" xml:space="preserve">
    <value>Making and testing $1 ..</value>
  </data>
  <data name="install_doing_2" xml:space="preserve">
    <value>Making and installing $1 ..</value>
  </data>
  <data name="install_doing_3" xml:space="preserve">
    <value>Making, testing and installing $1 ..</value>
  </data>
  <data name="install_err" xml:space="preserve">
    <value>Installation of $1 failed. Check the output above and try installing manually.</value>
  </data>
  <data name="install_err2" xml:space="preserve">
    <value>You can also install the module from CPAN with the command $1.</value>
  </data>
  <data name="install_exec" xml:space="preserve">
    <value>Executing $1 ..</value>
  </data>
  <data name="install_efile" xml:space="preserve">
    <value>Module file $1 no longer exists</value>
  </data>
  <data name="cpan_sel" xml:space="preserve">
    <value>Modules under $1 ..</value>
  </data>
  <data name="cpan_title" xml:space="preserve">
    <value>Select Perl module</value>
  </data>
  <data name="cpan_search" xml:space="preserve">
    <value>Find modules named</value>
  </data>
  <data name="cpan_match" xml:space="preserve">
    <value>Modules matching $1 ..</value>
  </data>
  <data name="cpan_none" xml:space="preserve">
    <value>No matches found.</value>
  </data>
  <data name="edit_title" xml:space="preserve">
    <value>Module Details</value>
  </data>
  <data name="edit_header" xml:space="preserve">
    <value>Module information</value>
  </data>
  <data name="edit_mod" xml:space="preserve">
    <value>Module name</value>
  </data>
  <data name="edit_desc" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="edit_date" xml:space="preserve">
    <value>Installed on</value>
  </data>
  <data name="edit_subs" xml:space="preserve">
    <value>Submodules</value>
  </data>
  <data name="edit_header2" xml:space="preserve">
    <value>Module documentation</value>
  </data>
  <data name="edit_file" xml:space="preserve">
    <value>Module file</value>
  </data>
  <data name="edit_none" xml:space="preserve">
    <value>None available</value>
  </data>
  <data name="edit_return" xml:space="preserve">
    <value>module details</value>
  </data>
  <data name="edit_uninstall" xml:space="preserve">
    <value>Uninstall module and submodules</value>
  </data>
  <data name="edit_upgrade" xml:space="preserve">
    <value>Upgrade module from CPAN</value>
  </data>
  <data name="edit_method" xml:space="preserve">
    <value>Installed from</value>
  </data>
  <data name="edit_rpm" xml:space="preserve">
    <value>RPM package $1</value>
  </data>
  <data name="edit_debian" xml:space="preserve">
    <value>Debian package $1</value>
  </data>
  <data name="edit_manual" xml:space="preserve">
    <value>Manual Perl module install</value>
  </data>
  <data name="uninstall_title" xml:space="preserve">
    <value>Uninstall Module</value>
  </data>
  <data name="uninstall_rusure" xml:space="preserve">
    <value>Are you sure you want to uninstall the Perl module $1 ? The following files will be deleted :</value>
  </data>
  <data name="uninstall_rusure2" xml:space="preserve">
    <value>Are you sure you want to uninstall the Perl module $1 and submodule(s) $2 ?&lt;br&gt;The following files will be deleted :</value>
  </data>
  <data name="uninstall_ok" xml:space="preserve">
    <value>Uninstall Now</value>
  </data>
  <data name="uninstall_rpm" xml:space="preserve">
    <value>The module will be removed by un-installing the $1 RPM package.</value>
  </data>
  <data name="uninstall_debian" xml:space="preserve">
    <value>The module will be removed by un-installing the $1 Debian package.</value>
  </data>
  <data name="uninstall_err" xml:space="preserve">
    <value>Failed to uninstall module</value>
  </data>
  <data name="delete_efile" xml:space="preserve">
    <value>Invalid package file!</value>
  </data>
  <data name="uninstalls_title" xml:space="preserve">
    <value>Uninstall Modules</value>
  </data>
  <data name="uninstalls_err" xml:space="preserve">
    <value>Failed to uninstall modules</value>
  </data>
  <data name="uninstalls_enone" xml:space="preserve">
    <value>None selected</value>
  </data>
  <data name="uninstalls_emod" xml:space="preserve">
    <value>$1 failed : $2</value>
  </data>
  <data name="uninstalls_rusure" xml:space="preserve">
    <value>Are you sure you want to un-install the $1 selected modules? $2 sub-modules and $3 files will be removed.</value>
  </data>
  <data name="__norefs" xml:space="preserve">
    <value>1</value>
  </data>
</root>