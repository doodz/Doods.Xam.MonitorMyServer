<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>FirewallD</value>
  </data>
  <data name="index_atboot" xml:space="preserve">
    <value>Enable firewall at boot time?</value>
  </data>
  <data name="index_bootup" xml:space="preserve">
    <value>Activate at boot</value>
  </data>
  <data name="index_bootupdesc" xml:space="preserve">
    <value>Change this option to control whether your firewall is activated at boot time or not.</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>Apply Configuration</value>
  </data>
  <data name="index_applydesc" xml:space="preserve">
    <value>Click this button to make the firewall configuration listed above active. Any firewall rules currently in effect will be flushed and replaced </value>
  </data>
  <data name="index_restart" xml:space="preserve">
    <value>Apply Configuration</value>
  </data>
  <data name="index_restartdesc" xml:space="preserve">
    <value>Activate all the allowed services and ports listed above, in all zones. Any active rules that were not permanently created will be replaced.</value>
  </data>
  <data name="index_start" xml:space="preserve">
    <value>Start FirewallD</value>
  </data>
  <data name="index_startdesc" xml:space="preserve">
    <value>Start the FirewallD server and apply the rules listed above.</value>
  </data>
  <data name="index_stop" xml:space="preserve">
    <value>Stop FirewallD</value>
  </data>
  <data name="index_stopdesc" xml:space="preserve">
    <value>Shut down the FirewallD server and remove all the rules listed above.</value>
  </data>
  <data name="index_cerr" xml:space="preserve">
    <value>The FirewallD module cannot be used : $1</value>
  </data>
  <data name="index_zone" xml:space="preserve">
    <value>Show rules in zone:</value>
  </data>
  <data name="index_zoneok" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="index_zoneadd" xml:space="preserve">
    <value>Add Zone..</value>
  </data>
  <data name="index_zonedel" xml:space="preserve">
    <value>Delete Zone</value>
  </data>
  <data name="index_zonedef" xml:space="preserve">
    <value>Make Default</value>
  </data>
  <data name="index_type" xml:space="preserve">
    <value>Rule type</value>
  </data>
  <data name="index_port" xml:space="preserve">
    <value>Port or service</value>
  </data>
  <data name="index_proto" xml:space="preserve">
    <value>Protocol</value>
  </data>
  <data name="index_tservice" xml:space="preserve">
    <value>Service</value>
  </data>
  <data name="index_tport" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="index_tforward" xml:space="preserve">
    <value>Forward</value>
  </data>
  <data name="index_padd" xml:space="preserve">
    <value>Add allowed port.</value>
  </data>
  <data name="index_sadd" xml:space="preserve">
    <value>Add allowed service.</value>
  </data>
  <data name="index_fadd" xml:space="preserve">
    <value>Add port forward.</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>Delete Selected Rules</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>list of zones</value>
  </data>
  <data name="index_ezones" xml:space="preserve">
    <value>No FirewallD zones found!</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>This zone does not have any allowed ports or services yet.</value>
  </data>
  <data name="index_ifaces" xml:space="preserve">
    <value>Apply rules to interfaces:</value>
  </data>
  <data name="port_edit" xml:space="preserve">
    <value>Edit Port</value>
  </data>
  <data name="port_create" xml:space="preserve">
    <value>Add Port</value>
  </data>
  <data name="port_header" xml:space="preserve">
    <value>Allowed port options</value>
  </data>
  <data name="port_zone" xml:space="preserve">
    <value>Allowed in zone</value>
  </data>
  <data name="port_port" xml:space="preserve">
    <value>Port to allow</value>
  </data>
  <data name="port_mode0" xml:space="preserve">
    <value>Single port</value>
  </data>
  <data name="port_mode1" xml:space="preserve">
    <value>Port range</value>
  </data>
  <data name="port_mode2" xml:space="preserve">
    <value>Same as original port</value>
  </data>
  <data name="port_proto" xml:space="preserve">
    <value>Network protocol</value>
  </data>
  <data name="port_ezone" xml:space="preserve">
    <value>Zone does not exist!</value>
  </data>
  <data name="port_err" xml:space="preserve">
    <value>Failed to save port</value>
  </data>
  <data name="port_eport" xml:space="preserve">
    <value>Missing or invalid port number or name</value>
  </data>
  <data name="port_eportlow" xml:space="preserve">
    <value>Low port must be a number</value>
  </data>
  <data name="port_eporthigh" xml:space="preserve">
    <value>High port must be a number</value>
  </data>
  <data name="port_eportrange" xml:space="preserve">
    <value>Low port must be below the high port</value>
  </data>
  <data name="serv_edit" xml:space="preserve">
    <value>Edit Service</value>
  </data>
  <data name="serv_create" xml:space="preserve">
    <value>Add Service</value>
  </data>
  <data name="serv_header" xml:space="preserve">
    <value>Allowed service options</value>
  </data>
  <data name="serv_name" xml:space="preserve">
    <value>Service to allow</value>
  </data>
  <data name="serv_err" xml:space="preserve">
    <value>Failed to save service</value>
  </data>
  <data name="forward_edit" xml:space="preserve">
    <value>Edit Forward</value>
  </data>
  <data name="forward_create" xml:space="preserve">
    <value>Create Forward</value>
  </data>
  <data name="forward_header" xml:space="preserve">
    <value>Port forwarding options</value>
  </data>
  <data name="forward_zone" xml:space="preserve">
    <value>Forward for zone</value>
  </data>
  <data name="forward_err" xml:space="preserve">
    <value>Failed to save forward</value>
  </data>
  <data name="forward_port" xml:space="preserve">
    <value>Source port</value>
  </data>
  <data name="forward_dstport" xml:space="preserve">
    <value>Desintation port</value>
  </data>
  <data name="forward_dstaddr" xml:space="preserve">
    <value>Destination address</value>
  </data>
  <data name="forward_dstlocal" xml:space="preserve">
    <value>This system</value>
  </data>
  <data name="forward_edstaddr" xml:space="preserve">
    <value>Invalid IPv4 destination address</value>
  </data>
  <data name="forward_eneither" xml:space="preserve">
    <value>Either a destination address or port or both must be entered</value>
  </data>
  <data name="check_ecmd" xml:space="preserve">
    <value>The FirewallD control command $1 was not found on your system</value>
  </data>
  <data name="delete_err" xml:space="preserve">
    <value>Failed to delete rules</value>
  </data>
  <data name="delete_enone" xml:space="preserve">
    <value>None selected!</value>
  </data>
  <data name="delete_edel" xml:space="preserve">
    <value>Removal of $1 failed : $2</value>
  </data>
  <data name="zone_title" xml:space="preserve">
    <value>Create Zone</value>
  </data>
  <data name="zone_header" xml:space="preserve">
    <value>New zone options</value>
  </data>
  <data name="zone_name" xml:space="preserve">
    <value>Zone name</value>
  </data>
  <data name="zone_mode" xml:space="preserve">
    <value>Allowed ports and services</value>
  </data>
  <data name="zone_mode0" xml:space="preserve">
    <value>None (all traffic will be blocked)</value>
  </data>
  <data name="zone_mode1" xml:space="preserve">
    <value>Copy from zone</value>
  </data>
  <data name="zone_mode2" xml:space="preserve">
    <value>SSH, IDENT and Webmin only</value>
  </data>
  <data name="zone_mode3" xml:space="preserve">
    <value>SSH, IDENT, Webmin and high ports</value>
  </data>
  <data name="zone_mode4" xml:space="preserve">
    <value>Ports used for virtual hosting</value>
  </data>
  <data name="zone_err" xml:space="preserve">
    <value>Failed to create zone</value>
  </data>
  <data name="zone_ename" xml:space="preserve">
    <value>Missing or invalid zone name</value>
  </data>
  <data name="zone_eclash" xml:space="preserve">
    <value>A zone with the same name already exists</value>
  </data>
  <data name="delzone_title" xml:space="preserve">
    <value>Delete Zone</value>
  </data>
  <data name="delzone_err" xml:space="preserve">
    <value>Failed to delete zone</value>
  </data>
  <data name="delzone_edefault" xml:space="preserve">
    <value>The default zone cannot be removed</value>
  </data>
  <data name="delzone_rusure" xml:space="preserve">
    <value>Are you sure you want to delete the zone $1, which contains $2 ports and $3 services?</value>
  </data>
  <data name="defzone_err" xml:space="preserve">
    <value>Failed to make zone the default</value>
  </data>
  <data name="restart_err" xml:space="preserve">
    <value>Failed to apply configuration</value>
  </data>
  <data name="stop_err" xml:space="preserve">
    <value>Failed to stop FirewallD</value>
  </data>
  <data name="start_err" xml:space="preserve">
    <value>Failed to start FirewallD</value>
  </data>
  <data name="log_stop" xml:space="preserve">
    <value>Stopped FirewallD</value>
  </data>
  <data name="log_start" xml:space="preserve">
    <value>Started FirewallD</value>
  </data>
  <data name="log_restart" xml:space="preserve">
    <value>Applied FirewallD configuration</value>
  </data>
  <data name="log_bootup" xml:space="preserve">
    <value>Enabled FirewallD at boot</value>
  </data>
  <data name="log_bootdown" xml:space="preserve">
    <value>Disabled FirewallD at boot</value>
  </data>
  <data name="log_create_port" xml:space="preserve">
    <value>Added allowed port $1</value>
  </data>
  <data name="log_delete_port" xml:space="preserve">
    <value>Removed allowed port $1</value>
  </data>
  <data name="log_update_port" xml:space="preserve">
    <value>Updated allowed port $1</value>
  </data>
  <data name="log_create_serv" xml:space="preserve">
    <value>Added allowed service $1</value>
  </data>
  <data name="log_delete_serv" xml:space="preserve">
    <value>Removed allowed service $1</value>
  </data>
  <data name="log_update_serv" xml:space="preserve">
    <value>Updated allowed service $1</value>
  </data>
  <data name="log_create_forward" xml:space="preserve">
    <value>Added forward $1</value>
  </data>
  <data name="log_delete_forward" xml:space="preserve">
    <value>Removed forward $1</value>
  </data>
  <data name="log_update_forward" xml:space="preserve">
    <value>Updated forward $1</value>
  </data>
  <data name="log_delete_rules" xml:space="preserve">
    <value>Removed $1 allowed ports</value>
  </data>
  <data name="log_ifaces_zone" xml:space="preserve">
    <value>Updated interfaces for zone $1</value>
  </data>
  <data name="log_create_zone" xml:space="preserve">
    <value>Created zone $1</value>
  </data>
  <data name="log_delete_zone" xml:space="preserve">
    <value>Deleted zone $1</value>
  </data>
  <data name="log_default_zone" xml:space="preserve">
    <value>Made zone $1 the default</value>
  </data>
</root>