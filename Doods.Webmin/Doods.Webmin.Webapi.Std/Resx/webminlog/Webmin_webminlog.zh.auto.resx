<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_nuser" xml:space="preserve">
    <value>除以下任何用户</value>
  </data>
  <data name="index_ouser" xml:space="preserve">
    <value>由非Webmin用户</value>
  </data>
  <data name="index_yesterday" xml:space="preserve">
    <value>仅昨天</value>
  </data>
  <data name="index_week" xml:space="preserve">
    <value>在最后一周</value>
  </data>
  <data name="index_fall" xml:space="preserve">
    <value>哪个修改了任何文件</value>
  </data>
  <data name="index_file" xml:space="preserve">
    <value>那个修改过的文件</value>
  </data>
  <data name="index_wall" xml:space="preserve">
    <value>从任何Webmin服务器</value>
  </data>
  <data name="index_whost" xml:space="preserve">
    <value>从服务器</value>
  </data>
  <data name="index_susers" xml:space="preserve">
    <value>Webmin用户的操作</value>
  </data>
  <data name="index_smods" xml:space="preserve">
    <value>模块中的动作</value>
  </data>
  <data name="index_sfile" xml:space="preserve">
    <value>修改文件的动作</value>
  </data>
  <data name="index_sdiff" xml:space="preserve">
    <value>文件更改或命令运行</value>
  </data>
  <data name="index_dall" xml:space="preserve">
    <value>任何改变</value>
  </data>
  <data name="index_diff" xml:space="preserve">
    <value>更改包含</value>
  </data>
  <data name="index_stimes" xml:space="preserve">
    <value>日期上的动作</value>
  </data>
  <data name="index_sdesc" xml:space="preserve">
    <value>动作说明包含</value>
  </data>
  <data name="index_shost" xml:space="preserve">
    <value>源Webmin服务器</value>
  </data>
  <data name="index_long" xml:space="preserve">
    <value>显示完整的动作说明？</value>
  </data>
  <data name="index_global" xml:space="preserve">
    <value>&amp;lt;不在任何模块中&amp;gt;</value>
  </data>
  <data name="search_webmin" xml:space="preserve">
    <value>Webmin服务器</value>
  </data>
  <data name="search_none2" xml:space="preserve">
    <value>没有动作符合您对动作的搜索</value>
  </data>
  <data name="search_critnu" xml:space="preserve">
    <value>除用户 $1以外的任何人</value>
  </data>
  <data name="search_critd" xml:space="preserve">
    <value>描述包含&lt;tt&gt;$1&lt;/tt&gt;</value>
  </data>
  <data name="search_etime" xml:space="preserve">
    <value>无效的开始或结束时间</value>
  </data>
  <data name="search_err" xml:space="preserve">
    <value>搜索失败</value>
  </data>
  <data name="search_global" xml:space="preserve">
    <value>没有</value>
  </data>
  <data name="search_global_login" xml:space="preserve">
    <value>登录到Webmin</value>
  </data>
  <data name="search_global_logout" xml:space="preserve">
    <value>注销Webmin</value>
  </data>
  <data name="search_global_failed" xml:space="preserve">
    <value>登录Webmin失败： $1</value>
  </data>
  <data name="search_global_expiredpass" xml:space="preserve">
    <value>密码已过期</value>
  </data>
  <data name="search_global_wronguser" xml:space="preserve">
    <value>无效的用户</value>
  </data>
  <data name="search_global_wrongpass" xml:space="preserve">
    <value>无效的密码</value>
  </data>
  <data name="search_global_baduser" xml:space="preserve">
    <value>用户名错误</value>
  </data>
  <data name="search_global_badpass" xml:space="preserve">
    <value>密码错误</value>
  </data>
  <data name="search_global_twofactor" xml:space="preserve">
    <value>无效的双重因素令牌</value>
  </data>
  <data name="search_csv" xml:space="preserve">
    <value>导出为CSV。</value>
  </data>
  <data name="view_host" xml:space="preserve">
    <value>源Webmin服务器</value>
  </data>
  <data name="view_ecannot" xml:space="preserve">
    <value>您无权查看此日志条目</value>
  </data>
  <data name="view_rollback2" xml:space="preserve">
    <value>回滚所选文件</value>
  </data>
  <data name="view_return" xml:space="preserve">
    <value>动作细节</value>
  </data>
  <data name="view_input" xml:space="preserve">
    <value>输入命令</value>
  </data>
  <data name="view_anno" xml:space="preserve">
    <value>日志条目注释</value>
  </data>
  <data name="view_output" xml:space="preserve">
    <value>Webmin页面内容</value>
  </data>
  <data name="view_files" xml:space="preserve">
    <value>文件已更改，命令已运行</value>
  </data>
  <data name="view_raw" xml:space="preserve">
    <value>原始日志数据</value>
  </data>
  <data name="view_rawname" xml:space="preserve">
    <value>参数名称</value>
  </data>
  <data name="view_rawvalue" xml:space="preserve">
    <value>参数值</value>
  </data>
  <data name="acl_mods" xml:space="preserve">
    <value>可以查看模块中的日志</value>
  </data>
  <data name="acl_all" xml:space="preserve">
    <value>所有</value>
  </data>
  <data name="acl_sel" xml:space="preserve">
    <value>在下面选择 ..</value>
  </data>
  <data name="acl_self" xml:space="preserve">
    <value>只有自我</value>
  </data>
  <data name="acl_users" xml:space="preserve">
    <value>可以查看用户的操作</value>
  </data>
  <data name="acl_rollback" xml:space="preserve">
    <value>可以回滚动作吗？</value>
  </data>
  <data name="rollback_title" xml:space="preserve">
    <value>回滚动作</value>
  </data>
  <data name="rollback_rusure" xml:space="preserve">
    <value>您确定要在执行此操作之前将下面列出的所有文件还原为它们的内容吗？它们当前包含的任何数据将被以下更改覆盖：</value>
  </data>
  <data name="rollback_isdir" xml:space="preserve">
    <value>目录-不会进行任何更改。</value>
  </data>
  <data name="rollback_link" xml:space="preserve">
    <value>链接目标将从 $2更改为 $1。</value>
  </data>
  <data name="rollback_nolink" xml:space="preserve">
    <value>链接目标未更改。</value>
  </data>
  <data name="rollback_clink" xml:space="preserve">
    <value>将创建到 $1的链接。</value>
  </data>
  <data name="rollback_makefile" xml:space="preserve">
    <value>指向 $1的链接将替换为：</value>
  </data>
  <data name="rollback_makelink" xml:space="preserve">
    <value>整个文件将替换为指向 $1的链接。</value>
  </data>
  <data name="rollback_changes" xml:space="preserve">
    <value>将进行以下更改：</value>
  </data>
  <data name="rollback_nochanges" xml:space="preserve">
    <value>此文件未更改。</value>
  </data>
  <data name="rollback_delete" xml:space="preserve">
    <value>文件将被删除。</value>
  </data>
  <data name="rollback_nodelete" xml:space="preserve">
    <value>文件在操作之前不存在，现在也不存在。</value>
  </data>
  <data name="rollback_fillfile" xml:space="preserve">
    <value>将使用内容创建文件：</value>
  </data>
  <data name="rollback_none" xml:space="preserve">
    <value>所有文件的内容均与执行此操作之前相同。无需更改。</value>
  </data>
  <data name="rollback_ok" xml:space="preserve">
    <value>立即回滚文件</value>
  </data>
  <data name="rollback_skipdir" xml:space="preserve">
    <value>跳过目录 $1。</value>
  </data>
  <data name="rollback_madelink" xml:space="preserve">
    <value>已创建 $1到 $2的链接。</value>
  </data>
  <data name="rollback_madefile" xml:space="preserve">
    <value>将链接 $1替换为文件。</value>
  </data>
  <data name="rollback_modfile" xml:space="preserve">
    <value>回滚文件 $1的内容。</value>
  </data>
  <data name="rollback_deleted" xml:space="preserve">
    <value>已删除文件 $1。</value>
  </data>
  <data name="rollback_nodeleted" xml:space="preserve">
    <value>跳过的不存在的文件 $1。</value>
  </data>
  <data name="rollback_enone" xml:space="preserve">
    <value>未选择文件</value>
  </data>
  <data name="log_rollback" xml:space="preserve">
    <value>在模块 $2中回滚了操作 $1</value>
  </data>
</root>