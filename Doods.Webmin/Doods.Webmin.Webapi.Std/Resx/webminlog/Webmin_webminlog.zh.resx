<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Webmin 行动日志</value>
  </data>
  <data name="index_header" xml:space="preserve">
    <value>搜索 Webmin 日志查找行动</value>
  </data>
  <data name="index_uall" xml:space="preserve">
    <value>由任一用户</value>
  </data>
  <data name="index_user" xml:space="preserve">
    <value>由用户</value>
  </data>
  <data name="index_mall" xml:space="preserve">
    <value>由任何模式</value>
  </data>
  <data name="index_module" xml:space="preserve">
    <value>以模式</value>
  </data>
  <data name="index_tall" xml:space="preserve">
    <value>随时</value>
  </data>
  <data name="index_today" xml:space="preserve">
    <value>仅今日</value>
  </data>
  <data name="index_time" xml:space="preserve">
    <value>在 $1 和 $2 之间</value>
  </data>
  <data name="index_search" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>搜索方式</value>
  </data>
  <data name="search_title" xml:space="preserve">
    <value>搜索结果</value>
  </data>
  <data name="search_date" xml:space="preserve">
    <value>日期</value>
  </data>
  <data name="search_time" xml:space="preserve">
    <value>时间</value>
  </data>
  <data name="search_user" xml:space="preserve">
    <value>用户</value>
  </data>
  <data name="search_host" xml:space="preserve">
    <value>客户地址</value>
  </data>
  <data name="search_module" xml:space="preserve">
    <value>模式</value>
  </data>
  <data name="search_action" xml:space="preserve">
    <value>行动</value>
  </data>
  <data name="search_return" xml:space="preserve">
    <value>搜索结果</value>
  </data>
  <data name="search_sid" xml:space="preserve">
    <value>在会话 $2 中用户 $1 的行动</value>
  </data>
  <data name="search_critall" xml:space="preserve">
    <value>所有被记录的行动</value>
  </data>
  <data name="search_crit" xml:space="preserve">
    <value>被记录的行动</value>
  </data>
  <data name="search_critu" xml:space="preserve">
    <value>由用户 $1</value>
  </data>
  <data name="search_critm" xml:space="preserve">
    <value>来自模块 $1</value>
  </data>
  <data name="search_critt" xml:space="preserve">
    <value>在 $1 和 $2 之间</value>
  </data>
  <data name="search_critt2" xml:space="preserve">
    <value>在 $1 上</value>
  </data>
  <data name="search_config" xml:space="preserve">
    <value>改变模块配置</value>
  </data>
  <data name="view_title" xml:space="preserve">
    <value>行动详述</value>
  </data>
  <data name="view_header" xml:space="preserve">
    <value>被记录的行动 $1 详述</value>
  </data>
  <data name="view_action" xml:space="preserve">
    <value>描述</value>
  </data>
  <data name="view_module" xml:space="preserve">
    <value>Webmin 模块</value>
  </data>
  <data name="view_script" xml:space="preserve">
    <value>由脚本产生</value>
  </data>
  <data name="view_user" xml:space="preserve">
    <value>Webmin 用户</value>
  </data>
  <data name="view_ip" xml:space="preserve">
    <value>客户 IP 或主机名</value>
  </data>
  <data name="view_sid" xml:space="preserve">
    <value>会话 ID </value>
  </data>
  <data name="view_time" xml:space="preserve">
    <value>日期和时间</value>
  </data>
  <data name="view_nofiles" xml:space="preserve">
    <value>对此行动没有记录配置文件的改动</value>
  </data>
  <data name="view_type_create" xml:space="preserve">
    <value>创建文件 $1</value>
  </data>
  <data name="view_type_modify" xml:space="preserve">
    <value>改变文件 $1</value>
  </data>
  <data name="view_type_delete" xml:space="preserve">
    <value>删除文件 $1</value>
  </data>
  <data name="view_type_exec" xml:space="preserve">
    <value>执行命令</value>
  </data>
  <data name="view_type_sql" xml:space="preserve">
    <value>在数据库 $1 中执行 SQL 语句</value>
  </data>
  <data name="view_type_kill" xml:space="preserve">
    <value>发送信号 $1 到 PID $2</value>
  </data>
  <data name="view_type_symlink" xml:space="preserve">
    <value>创建符号连接 $1 -&amp;gt; $2</value>
  </data>
  <data name="view_type_unsymlink" xml:space="preserve">
    <value>删除符号连接 $1 -&amp;gt; $2</value>
  </data>
  <data name="view_type_resymlink" xml:space="preserve">
    <value>更新符号连接 $1 -&amp;gt; $2</value>
  </data>
  <data name="view_type_mkdir" xml:space="preserve">
    <value>创建目录 $1</value>
  </data>
  <data name="view_type_rmdir" xml:space="preserve">
    <value>删除目录 $1</value>
  </data>
  <data name="view_type_rename" xml:space="preserve">
    <value>将 $1 改名为 $2</value>
  </data>
</root>