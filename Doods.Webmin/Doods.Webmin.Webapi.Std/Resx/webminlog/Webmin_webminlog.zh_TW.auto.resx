<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_ouser" xml:space="preserve">
    <value>由非Webmin用戶</value>
  </data>
  <data name="index_yesterday" xml:space="preserve">
    <value>僅昨天</value>
  </data>
  <data name="index_week" xml:space="preserve">
    <value>在最後一周</value>
  </data>
  <data name="index_fall" xml:space="preserve">
    <value>哪個修改了任何文件</value>
  </data>
  <data name="index_file" xml:space="preserve">
    <value>那個修改過的文件</value>
  </data>
  <data name="index_wall" xml:space="preserve">
    <value>從任何Webmin服務器</value>
  </data>
  <data name="index_whost" xml:space="preserve">
    <value>從服務器</value>
  </data>
  <data name="index_susers" xml:space="preserve">
    <value>Webmin用戶的動作</value>
  </data>
  <data name="index_smods" xml:space="preserve">
    <value>模塊中的動作</value>
  </data>
  <data name="index_sfile" xml:space="preserve">
    <value>修改文件的動作</value>
  </data>
  <data name="index_sdiff" xml:space="preserve">
    <value>文件更改或命令運行</value>
  </data>
  <data name="index_dall" xml:space="preserve">
    <value>任何改變</value>
  </data>
  <data name="index_diff" xml:space="preserve">
    <value>更改包含</value>
  </data>
  <data name="index_stimes" xml:space="preserve">
    <value>日期上的動作</value>
  </data>
  <data name="index_sdesc" xml:space="preserve">
    <value>動作說明包含</value>
  </data>
  <data name="index_shost" xml:space="preserve">
    <value>源Webmin服務器</value>
  </data>
  <data name="index_long" xml:space="preserve">
    <value>顯示完整的動作說明？</value>
  </data>
  <data name="index_global" xml:space="preserve">
    <value>&amp;lt;不在任何模塊中&amp;gt;</value>
  </data>
  <data name="search_webmin" xml:space="preserve">
    <value>Webmin服務器</value>
  </data>
  <data name="search_none2" xml:space="preserve">
    <value>沒有動作符合您對動作的搜索</value>
  </data>
  <data name="search_critd" xml:space="preserve">
    <value>描述包含&lt;tt&gt;$1&lt;/tt&gt;</value>
  </data>
  <data name="search_global" xml:space="preserve">
    <value>沒有</value>
  </data>
  <data name="search_global_login" xml:space="preserve">
    <value>登錄到Webmin</value>
  </data>
  <data name="search_global_logout" xml:space="preserve">
    <value>註銷Webmin</value>
  </data>
  <data name="search_global_failed" xml:space="preserve">
    <value>登錄Webmin失敗： $1</value>
  </data>
  <data name="search_global_expiredpass" xml:space="preserve">
    <value>密碼已過期</value>
  </data>
  <data name="search_global_wronguser" xml:space="preserve">
    <value>無效的用戶</value>
  </data>
  <data name="search_global_wrongpass" xml:space="preserve">
    <value>無效的密碼</value>
  </data>
  <data name="search_global_baduser" xml:space="preserve">
    <value>用戶名錯誤</value>
  </data>
  <data name="search_global_badpass" xml:space="preserve">
    <value>密碼錯誤</value>
  </data>
  <data name="search_global_twofactor" xml:space="preserve">
    <value>無效的雙重因素令牌</value>
  </data>
  <data name="search_csv" xml:space="preserve">
    <value>導出為CSV。</value>
  </data>
  <data name="view_host" xml:space="preserve">
    <value>源Webmin服務器</value>
  </data>
  <data name="view_ecannot" xml:space="preserve">
    <value>您無權查看此日誌條目</value>
  </data>
  <data name="view_rollback2" xml:space="preserve">
    <value>回滾所選文件</value>
  </data>
  <data name="view_return" xml:space="preserve">
    <value>動作細節</value>
  </data>
  <data name="view_input" xml:space="preserve">
    <value>輸入命令</value>
  </data>
  <data name="view_anno" xml:space="preserve">
    <value>日誌條目註釋</value>
  </data>
  <data name="view_output" xml:space="preserve">
    <value>Webmin頁面內容</value>
  </data>
  <data name="view_files" xml:space="preserve">
    <value>文件已更改，命令已運行</value>
  </data>
  <data name="view_raw" xml:space="preserve">
    <value>原始日誌數據</value>
  </data>
  <data name="view_rawname" xml:space="preserve">
    <value>參數名稱</value>
  </data>
  <data name="view_rawvalue" xml:space="preserve">
    <value>參數值</value>
  </data>
  <data name="acl_mods" xml:space="preserve">
    <value>可以查看模塊中的日誌</value>
  </data>
  <data name="acl_all" xml:space="preserve">
    <value>所有</value>
  </data>
  <data name="acl_sel" xml:space="preserve">
    <value>在下面選擇 ..</value>
  </data>
  <data name="acl_self" xml:space="preserve">
    <value>只有自我</value>
  </data>
  <data name="acl_users" xml:space="preserve">
    <value>可以查看用戶的操作</value>
  </data>
  <data name="acl_rollback" xml:space="preserve">
    <value>可以回滾動作嗎？</value>
  </data>
  <data name="rollback_title" xml:space="preserve">
    <value>回滾動作</value>
  </data>
  <data name="rollback_rusure" xml:space="preserve">
    <value>您確定要在執行此操作之前將下面列出的所有文件還原為它們的內容嗎？它們當前包含的任何數據將被以下更改覆蓋：</value>
  </data>
  <data name="rollback_isdir" xml:space="preserve">
    <value>目錄-不會進行任何更改。</value>
  </data>
  <data name="rollback_link" xml:space="preserve">
    <value>鏈接目標將從 $2更改為 $1。</value>
  </data>
  <data name="rollback_nolink" xml:space="preserve">
    <value>鏈接目標未更改。</value>
  </data>
  <data name="rollback_clink" xml:space="preserve">
    <value>將創建到 $1的鏈接。</value>
  </data>
  <data name="rollback_makefile" xml:space="preserve">
    <value>指向 $1的鏈接將替換為：</value>
  </data>
  <data name="rollback_makelink" xml:space="preserve">
    <value>整個文件將替換為指向 $1的鏈接。</value>
  </data>
  <data name="rollback_changes" xml:space="preserve">
    <value>將進行以下更改：</value>
  </data>
  <data name="rollback_nochanges" xml:space="preserve">
    <value>此文件未更改。</value>
  </data>
  <data name="rollback_delete" xml:space="preserve">
    <value>文件將被刪除。</value>
  </data>
  <data name="rollback_nodelete" xml:space="preserve">
    <value>文件在操作之前不存在，現在也不存在。</value>
  </data>
  <data name="rollback_fillfile" xml:space="preserve">
    <value>將使用內容創建文件：</value>
  </data>
  <data name="rollback_none" xml:space="preserve">
    <value>所有文件的內容均與執行此操作之前相同。無需更改。</value>
  </data>
  <data name="rollback_ok" xml:space="preserve">
    <value>立即回滾文件</value>
  </data>
  <data name="rollback_skipdir" xml:space="preserve">
    <value>跳過目錄 $1。</value>
  </data>
  <data name="rollback_madelink" xml:space="preserve">
    <value>已創建 $1到 $2的鏈接。</value>
  </data>
  <data name="rollback_madefile" xml:space="preserve">
    <value>將鏈接 $1替換為文件。</value>
  </data>
  <data name="rollback_modfile" xml:space="preserve">
    <value>回滾文件 $1的內容。</value>
  </data>
  <data name="rollback_deleted" xml:space="preserve">
    <value>已刪除文件 $1。</value>
  </data>
  <data name="rollback_nodeleted" xml:space="preserve">
    <value>跳過的不存在的文件 $1。</value>
  </data>
  <data name="rollback_enone" xml:space="preserve">
    <value>未選擇文件</value>
  </data>
  <data name="log_rollback" xml:space="preserve">
    <value>在模塊 $2中回滾了操作 $1</value>
  </data>
</root>