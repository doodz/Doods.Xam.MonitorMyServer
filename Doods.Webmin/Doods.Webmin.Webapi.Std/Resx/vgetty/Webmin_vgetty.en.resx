<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Voicemail Server</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>voicemail index</value>
  </data>
  <data name="vgetty_title" xml:space="preserve">
    <value>Serial Port Configuration</value>
  </data>
  <data name="vgetty_desc" xml:space="preserve">
    <value>For your server to answer voice calls with a modem connected to a serial port, it must be listed below. When you add a port to this list, the $1 program will be configured to answer calls and play a message.</value>
  </data>
  <data name="vgetty_add" xml:space="preserve">
    <value>Add a new serial port</value>
  </data>
  <data name="vgetty_tty" xml:space="preserve">
    <value>Serial device</value>
  </data>
  <data name="vgetty_type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="vgetty_vgetty" xml:space="preserve">
    <value>Voice</value>
  </data>
  <data name="vgetty_mgetty" xml:space="preserve">
    <value>Data/fax</value>
  </data>
  <data name="vgetty_none" xml:space="preserve">
    <value>No serial ports have been configured for voicemail yet.</value>
  </data>
  <data name="vgetty_apply" xml:space="preserve">
    <value>Apply Configuration</value>
  </data>
  <data name="vgetty_applydesc" xml:space="preserve">
    <value>Click this button to apply the current voicemail server configuration by running the command $1 and killing all Vgetty processes.</value>
  </data>
  <data name="vgetty_applyerr" xml:space="preserve">
    <value>Failed to apply configuration</value>
  </data>
  <data name="vgetty_return" xml:space="preserve">
    <value>serial port list</value>
  </data>
  <data name="vgetty_create" xml:space="preserve">
    <value>Add Serial Port</value>
  </data>
  <data name="vgetty_edit" xml:space="preserve">
    <value>Edit Serial Port</value>
  </data>
  <data name="vgetty_header" xml:space="preserve">
    <value>Serial port configuration options</value>
  </data>
  <data name="vgetty_ts" xml:space="preserve">
    <value>Serial port $1</value>
  </data>
  <data name="vgetty_other" xml:space="preserve">
    <value>Other device..</value>
  </data>
  <data name="vgetty_rings" xml:space="preserve">
    <value>Rings before answering</value>
  </data>
  <data name="vgetty_default" xml:space="preserve">
    <value>Global default</value>
  </data>
  <data name="vgetty_ans" xml:space="preserve">
    <value>Answer mode</value>
  </data>
  <data name="vgetty_ans_" xml:space="preserve">
    <value>&amp;nbsp;</value>
  </data>
  <data name="vgetty_ans_voice" xml:space="preserve">
    <value>Voice</value>
  </data>
  <data name="vgetty_ans_fax" xml:space="preserve">
    <value>Fax</value>
  </data>
  <data name="vgetty_ans_data" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="vgetty_err" xml:space="preserve">
    <value>Failed to save serial port</value>
  </data>
  <data name="vgetty_etty" xml:space="preserve">
    <value>Missing or non-existent serial device</value>
  </data>
  <data name="vgetty_erings" xml:space="preserve">
    <value>Missing or invalid number of rings</value>
  </data>
  <data name="vgetty_erings2" xml:space="preserve">
    <value>Number of rings must be at least 2</value>
  </data>
  <data name="vgetty_eans" xml:space="preserve">
    <value>No answer modes selected</value>
  </data>
  <data name="vgetty_eclash" xml:space="preserve">
    <value>The serial port $1 is already in use</value>
  </data>
  <data name="options_title" xml:space="preserve">
    <value>Voicemail Server Options</value>
  </data>
  <data name="options_header" xml:space="preserve">
    <value>Options for all serial ports</value>
  </data>
  <data name="options_maxlen" xml:space="preserve">
    <value>Maximum message length</value>
  </data>
  <data name="options_secs" xml:space="preserve">
    <value>seconds</value>
  </data>
  <data name="options_minlen" xml:space="preserve">
    <value>Minimum message length</value>
  </data>
  <data name="options_silence" xml:space="preserve">
    <value>Remove silence from end of messages?</value>
  </data>
  <data name="options_thresh" xml:space="preserve">
    <value>Silence threshold level</value>
  </data>
  <data name="options_rgain" xml:space="preserve">
    <value>Recording volume level</value>
  </data>
  <data name="options_tgain" xml:space="preserve">
    <value>Playback volume level</value>
  </data>
  <data name="options_rings" xml:space="preserve">
    <value>Rings before answering</value>
  </data>
  <data name="options_perport" xml:space="preserve">
    <value>Can be set for each serial port</value>
  </data>
  <data name="options_ans" xml:space="preserve">
    <value>Answer mode</value>
  </data>
  <data name="options_keep" xml:space="preserve">
    <value>Keep messages containing data or DTMF codes?</value>
  </data>
  <data name="options_light" xml:space="preserve">
    <value>Enable auto-answer light after receiving?</value>
  </data>
  <data name="options_owner" xml:space="preserve">
    <value>Unix owner for message files</value>
  </data>
  <data name="options_group" xml:space="preserve">
    <value>Unix group for message files</value>
  </data>
  <data name="options_mode" xml:space="preserve">
    <value>Permissions for message files</value>
  </data>
  <data name="options_prog" xml:space="preserve">
    <value>After recording message</value>
  </data>
  <data name="options_prog0" xml:space="preserve">
    <value>Do nothing</value>
  </data>
  <data name="options_prog1" xml:space="preserve">
    <value>Email in WAV format to</value>
  </data>
  <data name="options_prog2" xml:space="preserve">
    <value>Run command on message file</value>
  </data>
  <data name="options_err" xml:space="preserve">
    <value>Failed to save voicemail options</value>
  </data>
  <data name="options_erings" xml:space="preserve">
    <value>Missing or invalid number of rings</value>
  </data>
  <data name="options_erings2" xml:space="preserve">
    <value>Number of rings must be at least 2</value>
  </data>
  <data name="options_emaxlen" xml:space="preserve">
    <value>Missing or invalid maximum message length</value>
  </data>
  <data name="options_eminlen" xml:space="preserve">
    <value>Missing or invalid minimum message length</value>
  </data>
  <data name="options_ethresh" xml:space="preserve">
    <value>Missing or invalid silence threshold</value>
  </data>
  <data name="options_ergain" xml:space="preserve">
    <value>Missing or invalid recording volume level</value>
  </data>
  <data name="options_ergain2" xml:space="preserve">
    <value>Recording volume level must be between 0 and 100</value>
  </data>
  <data name="options_etgain" xml:space="preserve">
    <value>Missing or invalid playback volume level</value>
  </data>
  <data name="options_etgain2" xml:space="preserve">
    <value>Playback volume level must be between 0 and 100</value>
  </data>
  <data name="options_eemail" xml:space="preserve">
    <value>Missing or invalid email address</value>
  </data>
  <data name="options_eprog" xml:space="preserve">
    <value>Missing or non-existent program to run</value>
  </data>
  <data name="options_eowner" xml:space="preserve">
    <value>Missing or invalid Unix user for message files</value>
  </data>
  <data name="options_egroup" xml:space="preserve">
    <value>Missing or invalid Unix group for message files</value>
  </data>
  <data name="options_emode" xml:space="preserve">
    <value>Missing or invalid octal permissions for message files</value>
  </data>
  <data name="received_title" xml:space="preserve">
    <value>Received Messages</value>
  </data>
  <data name="recieved_desc" xml:space="preserve">
    <value>Voicemail messages that have been received by your server are listed below. To listen to a message, click on the date/time in the first column.</value>
  </data>
  <data name="received_none" xml:space="preserve">
    <value>No received voicemail messages were found.</value>
  </data>
  <data name="received_date" xml:space="preserve">
    <value>Received at</value>
  </data>
  <data name="received_size" xml:space="preserve">
    <value>File size</value>
  </data>
  <data name="received_speed" xml:space="preserve">
    <value>Sample rate</value>
  </data>
  <data name="received_type" xml:space="preserve">
    <value>Audio format</value>
  </data>
  <data name="received_delete" xml:space="preserve">
    <value>Delete selected messages</value>
  </data>
  <data name="received_move" xml:space="preserve">
    <value>Convert selected to greetings</value>
  </data>
  <data name="received_all" xml:space="preserve">
    <value>Select all</value>
  </data>
  <data name="received_invert" xml:space="preserve">
    <value>Invert selection</value>
  </data>
  <data name="listen_efile" xml:space="preserve">
    <value>Invalid message filename!</value>
  </data>
  <data name="listen_epath" xml:space="preserve">
    <value>Voicemail message no longer exists</value>
  </data>
  <data name="delete_efile" xml:space="preserve">
    <value>Invalid message filename! </value>
  </data>
  <data name="messages_title" xml:space="preserve">
    <value>Greeting Messages</value>
  </data>
  <data name="messages_desc" xml:space="preserve">
    <value>This page lists greeting messages that will be played when a caller connects to your voicemail server. If you have more that one, a single randomly chosen message will be used.</value>
  </data>
  <data name="messages_file" xml:space="preserve">
    <value>Filename</value>
  </data>
  <data name="messages_none" xml:space="preserve">
    <value>No greeting messages are available.</value>
  </data>
  <data name="messages_updesc" xml:space="preserve">
    <value>This form allows you to upload an additional greeting message WAV file, which will be converted to the chosen format for use by your modem. The sample rate of the uploaded WAV should be the same as the sample rate of received messages, as should the selected format.</value>
  </data>
  <data name="messages_upload" xml:space="preserve">
    <value>Upload message</value>
  </data>
  <data name="messages_fmt" xml:space="preserve">
    <value>convert to</value>
  </data>
  <data name="pvfdesc" xml:space="preserve">
    <value>$1, $2 bits</value>
  </data>
  <data name="upload_err" xml:space="preserve">
    <value>Failed to add message</value>
  </data>
  <data name="upload_emessage" xml:space="preserve">
    <value>No WAV file selected</value>
  </data>
  <data name="upload_ewav" xml:space="preserve">
    <value>Failed to convert WAV file : $1</value>
  </data>
  <data name="upload_epvf" xml:space="preserve">
    <value>Failed to create RMD file : $1</value>
  </data>
  <data name="upload_esame" xml:space="preserve">
    <value>The message file $1 already exists</value>
  </data>
  <data name="log_apply" xml:space="preserve">
    <value>Applied configuration</value>
  </data>
  <data name="log_upload" xml:space="preserve">
    <value>Uploaded greeting message $1</value>
  </data>
  <data name="log_move" xml:space="preserve">
    <value>Converted $1 received messages</value>
  </data>
  <data name="log_delete0" xml:space="preserve">
    <value>Deleted $1 received messages</value>
  </data>
  <data name="log_delete1" xml:space="preserve">
    <value>Deleted $1 greeting messages</value>
  </data>
  <data name="log_options" xml:space="preserve">
    <value>Changed voicemail options</value>
  </data>
  <data name="log_vgetty_create" xml:space="preserve">
    <value>Added serial port $1</value>
  </data>
  <data name="log_vgetty_modify" xml:space="preserve">
    <value>Modified serial port $1</value>
  </data>
  <data name="log_vgetty_delete" xml:space="preserve">
    <value>Deleted serial port $1</value>
  </data>
  <data name="email_subject" xml:space="preserve">
    <value>Voicemail message</value>
  </data>
  <data name="email_body" xml:space="preserve">
    <value>Voicemail message received at $1 by $2.</value>
  </data>
  <data name="__norefs" xml:space="preserve">
    <value>1</value>
  </data>
</root>