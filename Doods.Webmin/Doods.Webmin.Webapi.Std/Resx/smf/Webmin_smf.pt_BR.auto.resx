<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cmds_run" xml:space="preserve">
    <value>Comandos executados na geração desta página</value>
  </data>
  <data name="whats_this_title" xml:space="preserve">
    <value>O que é isso?</value>
  </data>
  <data name="state_enable" xml:space="preserve">
    <value>Habilitar</value>
  </data>
  <data name="state_disable" xml:space="preserve">
    <value>Desativar</value>
  </data>
  <data name="state_refresh" xml:space="preserve">
    <value>Atualizar</value>
  </data>
  <data name="state_restart" xml:space="preserve">
    <value>Reiniciar</value>
  </data>
  <data name="state_maintenance" xml:space="preserve">
    <value>Manutenção</value>
  </data>
  <data name="state_degraded" xml:space="preserve">
    <value>Degradado</value>
  </data>
  <data name="state_clear" xml:space="preserve">
    <value>Claro</value>
  </data>
  <data name="index_title" xml:space="preserve">
    <value>Instalação de Gerenciamento de Serviços</value>
  </data>
  <data name="index_detail" xml:space="preserve">
    <value>Listagem de serviço SMF</value>
  </data>
  <data name="index_svc_type" xml:space="preserve">
    <value>Selecione o tipo de serviço</value>
  </data>
  <data name="index_extraopts" xml:space="preserve">
    <value>Adicione opções extras para visualizar</value>
  </data>
  <data name="index_include_disabled" xml:space="preserve">
    <value>Incluir serviços desativados?</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>Aplicar a itens marcados</value>
  </data>
  <data name="index_sort_by" xml:space="preserve">
    <value>Ordenar por</value>
  </data>
  <data name="index_create_new_service" xml:space="preserve">
    <value>Criar novo serviço</value>
  </data>
  <data name="index_search_instance" xml:space="preserve">
    <value>Procurar Serviços</value>
  </data>
  <data name="index_select" xml:space="preserve">
    <value>Selecione</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>Excluir</value>
  </data>
  <data name="index_Select" xml:space="preserve">
    <value>Selecione</value>
  </data>
  <data name="index_FMRI" xml:space="preserve">
    <value>FMRI</value>
  </data>
  <data name="index_INST" xml:space="preserve">
    <value>INST</value>
  </data>
  <data name="index_STATE" xml:space="preserve">
    <value>ESTADO</value>
  </data>
  <data name="index_DESC" xml:space="preserve">
    <value>DESC</value>
  </data>
  <data name="index_NSTATE" xml:space="preserve">
    <value>NSTATE</value>
  </data>
  <data name="index_SCOPE" xml:space="preserve">
    <value>ESCOPO</value>
  </data>
  <data name="index_STIME" xml:space="preserve">
    <value>STIME</value>
  </data>
  <data name="index_deleteconfirm" xml:space="preserve">
    <value>Tem certeza de que deseja excluir permanentemente os serviços selecionados?</value>
  </data>
  <data name="search_instance_title" xml:space="preserve">
    <value>Procurar</value>
  </data>
  <data name="search_instance_detail" xml:space="preserve">
    <value>Pesquisar/procurar instâncias de serviço</value>
  </data>
  <data name="search_instance_go" xml:space="preserve">
    <value>Ir!</value>
  </data>
  <data name="search_instance_browse" xml:space="preserve">
    <value>Procurar serviço</value>
  </data>
  <data name="search_instance_noresults" xml:space="preserve">
    <value>Nenhum resultado para esta pesquisa!</value>
  </data>
  <data name="instance_viewer_title" xml:space="preserve">
    <value>Informações da Instância</value>
  </data>
  <data name="instance_viewer_detail" xml:space="preserve">
    <value>Detalhes da Instância</value>
  </data>
  <data name="instance_viewer_goto_pgroup_editor" xml:space="preserve">
    <value>Exibir/editar grupos/propriedades de propriedades</value>
  </data>
  <data name="instance_viewer_goto_dep_viewer" xml:space="preserve">
    <value>Exibir árvores de dependência/dependentes</value>
  </data>
  <data name="dep_viewer_title" xml:space="preserve">
    <value>Dependências/Dependentes</value>
  </data>
  <data name="dep_viewer_detail" xml:space="preserve">
    <value>Árvores de dependência/dependentes para instância</value>
  </data>
  <data name="dep_viewer_apply" xml:space="preserve">
    <value>Aplicar a itens marcados</value>
  </data>
  <data name="dep_viewer_depy_info" xml:space="preserve">
    <value>Árvore de dependência</value>
  </data>
  <data name="dep_viewer_dept_info" xml:space="preserve">
    <value>Árvore dependente</value>
  </data>
  <data name="dep_viewer_back" xml:space="preserve">
    <value>visualizador de instância</value>
  </data>
  <data name="state_editor_title" xml:space="preserve">
    <value>Informações sobre o estado do serviço</value>
  </data>
  <data name="state_editor_detail" xml:space="preserve">
    <value>Detalhes do estado da instância</value>
  </data>
  <data name="state_editor_stateinfo" xml:space="preserve">
    <value>Informações sobre o estado da instância</value>
  </data>
  <data name="state_editor_apply" xml:space="preserve">
    <value>Aplicar a itens marcados</value>
  </data>
  <data name="state_editor_depy_info" xml:space="preserve">
    <value>Informações de Dependência</value>
  </data>
  <data name="state_editor_dept_info" xml:space="preserve">
    <value>Informações dependentes</value>
  </data>
  <data name="log_viewer_title" xml:space="preserve">
    <value>Visualizador de arquivos de log</value>
  </data>
  <data name="log_viewer_detail" xml:space="preserve">
    <value>Exibir (final de) arquivo de log</value>
  </data>
  <data name="log_viewer_show_last" xml:space="preserve">
    <value>Mostrar último</value>
  </data>
  <data name="log_viewer_num_lines" xml:space="preserve">
    <value>linhas em</value>
  </data>
  <data name="log_viewer_submit" xml:space="preserve">
    <value>Atualizar visualização</value>
  </data>
  <data name="property_group_editor_title" xml:space="preserve">
    <value>Informações do grupo de propriedades</value>
  </data>
  <data name="property_group_editor_detail" xml:space="preserve">
    <value>Grupos de propriedades para serviço</value>
  </data>
  <data name="property_group_editor_addsinst" xml:space="preserve">
    <value>Selecione Serviço/Instância</value>
  </data>
  <data name="property_group_editor_addname" xml:space="preserve">
    <value>Novo nome do grupo de propriedades</value>
  </data>
  <data name="property_group_editor_addtype" xml:space="preserve">
    <value>Novo tipo de grupo de propriedades</value>
  </data>
  <data name="property_group_editor_addpg" xml:space="preserve">
    <value>Adicionar novo grupo de propriedades</value>
  </data>
  <data name="property_group_editor_add" xml:space="preserve">
    <value>Adicionar</value>
  </data>
  <data name="property_group_editor_apply" xml:space="preserve">
    <value>Aplicar a itens marcados</value>
  </data>
  <data name="property_group_editor_deleteconfirm" xml:space="preserve">
    <value>Tem certeza de que deseja excluir permanentemente os grupos de propriedades selecionados?</value>
  </data>
  <data name="property_group_editor_delete" xml:space="preserve">
    <value>Excluir</value>
  </data>
  <data name="property_group_editor_select" xml:space="preserve">
    <value>Selecione</value>
  </data>
  <data name="property_group_editor_sinst" xml:space="preserve">
    <value>Serviço/Instância</value>
  </data>
  <data name="property_group_editor_pgroup_name" xml:space="preserve">
    <value>Nome do grupo de propriedades</value>
  </data>
  <data name="property_group_editor_pgroup_type" xml:space="preserve">
    <value>Tipo de grupo de propriedades</value>
  </data>
  <data name="property_group_editor_back" xml:space="preserve">
    <value>visualizador de instância</value>
  </data>
  <data name="property_editor_title" xml:space="preserve">
    <value>Informação de Propriedade</value>
  </data>
  <data name="property_editor_detail" xml:space="preserve">
    <value>Propriedades para grupo de serviços/propriedades</value>
  </data>
  <data name="property_editor_addprop" xml:space="preserve">
    <value>Adicionar nova propriedade</value>
  </data>
  <data name="property_editor_addname" xml:space="preserve">
    <value>Nome da nova propriedade</value>
  </data>
  <data name="property_editor_addtype" xml:space="preserve">
    <value>Novo Tipo de Propriedade</value>
  </data>
  <data name="property_editor_addvalue" xml:space="preserve">
    <value>Novo valor da propriedade</value>
  </data>
  <data name="property_editor_add" xml:space="preserve">
    <value>Adicionar</value>
  </data>
  <data name="property_editor_apply" xml:space="preserve">
    <value>Aplicar a itens marcados</value>
  </data>
  <data name="property_editor_deleteconfirm" xml:space="preserve">
    <value>Tem certeza de que deseja excluir permanentemente as propriedades selecionadas?</value>
  </data>
  <data name="property_editor_delete" xml:space="preserve">
    <value>Excluir</value>
  </data>
  <data name="property_editor_select" xml:space="preserve">
    <value>Selecione</value>
  </data>
  <data name="property_editor_prop_name" xml:space="preserve">
    <value>Nome da propriedade</value>
  </data>
  <data name="property_editor_prop_type" xml:space="preserve">
    <value>Tipo de Propriedade</value>
  </data>
  <data name="property_editor_prop_value" xml:space="preserve">
    <value>Valor da propriedade</value>
  </data>
  <data name="property_editor_update" xml:space="preserve">
    <value>Atualizar</value>
  </data>
  <data name="property_editor_back" xml:space="preserve">
    <value>grupos de propriedades</value>
  </data>
  <data name="whats_this" xml:space="preserve">
    <value>(O que é isso?)</value>
  </data>
  <data name="close_window" xml:space="preserve">
    <value>Janela fechada</value>
  </data>
  <data name="svc_chooser_titlesvc" xml:space="preserve">
    <value>Escolha FMRI de serviço</value>
  </data>
  <data name="svc_chooser_titleinst" xml:space="preserve">
    <value>Escolha FMRI da instância de serviço</value>
  </data>
  <data name="svc_chooser_titleboth" xml:space="preserve">
    <value>Escolha FMRI de serviço/instância</value>
  </data>
  <data name="svc_chooser_ok" xml:space="preserve">
    <value>Está bem</value>
  </data>
  <data name="svc_chooser_cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="svc_chooser_fmri" xml:space="preserve">
    <value>Localização da árvore FMRI do serviço $1 </value>
  </data>
  <data name="path_chooser_title" xml:space="preserve">
    <value>Escolha o caminho FMRI</value>
  </data>
  <data name="path_chooser_ok" xml:space="preserve">
    <value>Está bem</value>
  </data>
  <data name="path_chooser_cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="path_chooser_path" xml:space="preserve">
    <value>Localização da Árvore FMRI do Caminho $1 </value>
  </data>
  <data name="editserv_title" xml:space="preserve">
    <value>Editar serviço SMF</value>
  </data>
  <data name="editserv_newtitle" xml:space="preserve">
    <value>Crie um novo serviço SMF</value>
  </data>
  <data name="editserv_propviewer" xml:space="preserve">
    <value>Criar/Visualizar/Modificar Serviço</value>
  </data>
  <data name="editserv_service_detail" xml:space="preserve">
    <value>Detalhes do serviço</value>
  </data>
  <data name="editserv_bundle_name" xml:space="preserve">
    <value>Nome do Pacote de Serviço</value>
  </data>
  <data name="editserv_service_name" xml:space="preserve">
    <value>Nome do Serviço</value>
  </data>
  <data name="editserv_service_type" xml:space="preserve">
    <value>Tipo</value>
  </data>
  <data name="editserv_service_version" xml:space="preserve">
    <value>Versão</value>
  </data>
  <data name="editserv_stability" xml:space="preserve">
    <value>Estabilidade</value>
  </data>
  <data name="editserv_fmri" xml:space="preserve">
    <value>Especifique FMRI</value>
  </data>
  <data name="editserv_instance_detail" xml:space="preserve">
    <value>Detalhes da Instância</value>
  </data>
  <data name="editserv_instance_name" xml:space="preserve">
    <value>Nome da instância</value>
  </data>
  <data name="editserv_instance_enabled" xml:space="preserve">
    <value>Ativado?</value>
  </data>
  <data name="editserv_serv_instname" xml:space="preserve">
    <value>Selecione Nível de Serviço ou Instância</value>
  </data>
  <data name="editserv_restarter_detail" xml:space="preserve">
    <value>Detalhes do Restarter</value>
  </data>
  <data name="editserv_depy_detail" xml:space="preserve">
    <value>Detalhes da dependência</value>
  </data>
  <data name="editserv_depy_name" xml:space="preserve">
    <value>Nome da Dependência</value>
  </data>
  <data name="editserv_depy_type" xml:space="preserve">
    <value>Tipo de Dependência</value>
  </data>
  <data name="editserv_depy_grouping" xml:space="preserve">
    <value>Agrupamento de Dependências</value>
  </data>
  <data name="editserv_depy_restart_on" xml:space="preserve">
    <value>Valor de reinicialização</value>
  </data>
  <data name="editserv_dept_detail" xml:space="preserve">
    <value>Detalhes dependentes</value>
  </data>
  <data name="editserv_dept_name" xml:space="preserve">
    <value>Nome Dependente</value>
  </data>
  <data name="editserv_dept_grouping" xml:space="preserve">
    <value>Agrupamento dependente</value>
  </data>
  <data name="editserv_dept_restart_on" xml:space="preserve">
    <value>Valor de reinicialização</value>
  </data>
  <data name="editserv_exec_detail" xml:space="preserve">
    <value>Detalhes do método de execução</value>
  </data>
  <data name="editserv_exec_name" xml:space="preserve">
    <value>Nome do método de execução</value>
  </data>
  <data name="editserv_exec_timeout_seconds" xml:space="preserve">
    <value>Tempo limite (segundos)</value>
  </data>
  <data name="editserv_exec_exec" xml:space="preserve">
    <value>Caminho do método Execute</value>
  </data>
  <data name="editserv_exec_user" xml:space="preserve">
    <value>Credencial do método do usuário</value>
  </data>
  <data name="editserv_exec_group" xml:space="preserve">
    <value>Credencial do método de grupo</value>
  </data>
  <data name="editserv_exec_privileges" xml:space="preserve">
    <value>Privilégios</value>
  </data>
  <data name="editserv_pgroup_detail" xml:space="preserve">
    <value>Detalhes do grupo de propriedades</value>
  </data>
  <data name="editserv_pgroup_name" xml:space="preserve">
    <value>Nome do grupo de propriedades</value>
  </data>
  <data name="editserv_pgroup_type" xml:space="preserve">
    <value>Tipo de grupo de propriedades</value>
  </data>
  <data name="editserv_sinst_pgroup_name" xml:space="preserve">
    <value>[Serviço/Instância]. [Property_Group]</value>
  </data>
  <data name="editserv_prop_detail" xml:space="preserve">
    <value>Detalhes da propriedade</value>
  </data>
  <data name="editserv_prop_name" xml:space="preserve">
    <value>Nome da propriedade</value>
  </data>
  <data name="editserv_prop_type" xml:space="preserve">
    <value>Tipo de Propriedade</value>
  </data>
  <data name="editserv_prop_value" xml:space="preserve">
    <value>Valor da propriedade</value>
  </data>
  <data name="editserv_template_detail" xml:space="preserve">
    <value>Detalhes do modelo</value>
  </data>
  <data name="editserv_template_common_name" xml:space="preserve">
    <value>Nome comum</value>
  </data>
  <data name="editserv_template_description" xml:space="preserve">
    <value>Descrição</value>
  </data>
  <data name="editserv_man_detail" xml:space="preserve">
    <value>Detalhes da página de manual</value>
  </data>
  <data name="editserv_man_title" xml:space="preserve">
    <value>Título</value>
  </data>
  <data name="editserv_man_section" xml:space="preserve">
    <value>Seção</value>
  </data>
  <data name="editserv_man_manpath" xml:space="preserve">
    <value>Manpath</value>
  </data>
  <data name="editserv_update" xml:space="preserve">
    <value>Atualizar</value>
  </data>
  <data name="editserv_new" xml:space="preserve">
    <value>Novo</value>
  </data>
  <data name="editserv_finish" xml:space="preserve">
    <value>Terminar</value>
  </data>
  <data name="editserv_cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="editserv_add" xml:space="preserve">
    <value>Adicionar</value>
  </data>
  <data name="editserv_addnew" xml:space="preserve">
    <value>Adicionar novo</value>
  </data>
  <data name="editserv_createservice" xml:space="preserve">
    <value>Criar Serviço</value>
  </data>
  <data name="editserv_next" xml:space="preserve">
    <value>Próximo</value>
  </data>
  <data name="editserv_continue" xml:space="preserve">
    <value>Continuar</value>
  </data>
  <data name="editserv_skip" xml:space="preserve">
    <value>Pular</value>
  </data>
  <data name="editserv_clear" xml:space="preserve">
    <value>Claro</value>
  </data>
  <data name="editserv_restarter_fmri" xml:space="preserve">
    <value>Restarter FMRI</value>
  </data>
  <data name="editserv_dependency" xml:space="preserve">
    <value>Dependência</value>
  </data>
  <data name="editstate_detail" xml:space="preserve">
    <value>Editar estado do serviço</value>
  </data>
  <data name="editstate_stateinfo" xml:space="preserve">
    <value>Informações sobre o estado da instância</value>
  </data>
  <data name="editstate_depy_detail" xml:space="preserve">
    <value>Informações de dependência da instância</value>
  </data>
  <data name="editstate_dept_detail" xml:space="preserve">
    <value>Informações dependentes da instância</value>
  </data>
  <data name="editstate_enable" xml:space="preserve">
    <value>Habilitar</value>
  </data>
  <data name="editstate_disable" xml:space="preserve">
    <value>Desativar</value>
  </data>
  <data name="editstate_refresh" xml:space="preserve">
    <value>Atualizar</value>
  </data>
  <data name="editstate_restart" xml:space="preserve">
    <value>Reiniciar</value>
  </data>
  <data name="editstate_clear" xml:space="preserve">
    <value>Claro</value>
  </data>
  <data name="editstate_maintenance" xml:space="preserve">
    <value>Manutenção</value>
  </data>
  <data name="editstate_degraded" xml:space="preserve">
    <value>Degradado</value>
  </data>
  <data name="whats_this_stateinfo" xml:space="preserve">
    <value>Exibidas são informações pertencentes ao estado da instância de serviço, conforme coletadas no comando svcs. Veja: svcs (1). Veja: smf (5).</value>
  </data>
  <data name="whats_this_extraopts" xml:space="preserve">
    <value>Verifique essas opções adicionais e clique em Atualizar modo de exibição, se desejar vê-las na lista de serviços abaixo. O significado das opções pode ser encontrado na página de manual do svcs. Veja: svcs (1).</value>
  </data>
  <data name="whats_this_enabledonly" xml:space="preserve">
    <value>Selecione se deseja que os serviços ativados sejam exibidos apenas ou se deseja que todos os serviços (ativados e desativados) na lista.</value>
  </data>
  <data name="whats_this_create_new_service" xml:space="preserve">
    <value>Clique aqui se você deseja adicionar um novo serviço.</value>
  </data>
  <data name="whats_this_serviceviewer" xml:space="preserve">
    <value>O visualizador de serviço fornece uma visualização categórica dos serviços disponíveis/em execução no sistema e seus estados, com base na listagem fornecida pelo comando svcs. Clicar em uma guia específica mostra serviços específicos para essa categoria, por exemplo Rede contém todos os serviços no formato svc:/network. É possível executar várias operações de ativar/desativar/atualizar/reiniciar/manutenção/degradar/limpar/excluir, verificando as instâncias de serviço candidatas e clicando no botão de aplicação relevante. Serviços/instâncias individuais podem ser editados clicando no fmri ou na instância, respectivamente, e o estado de uma instância de serviço individual pode ser examinado clicando no estado. Veja: svcs (1).</value>
  </data>
  <data name="whats_this_apply" xml:space="preserve">
    <value>Você pode executar operações em vários itens na lista de serviços, verificando os serviços apropriados e usando esses botões. Veja: svcadm (1M).</value>
  </data>
  <data name="whats_this_FMRI" xml:space="preserve">
    <value>O FMRI é um URI (Universal Resource Indicator) que especifica um serviço específico. Na lista "Todos", o FMRI completo é exibido, mas em determinadas categorias de serviço, por exemplo rede, a categoria de rede não é exibida. Ao clicar em um serviço específico, o FMRI o levará ao visualizador de serviços, onde você poderá editar as propriedades desse serviço com efeito imediato (tenha cuidado!). Veja: smf (5). Veja: svcs (1).</value>
  </data>
  <data name="whats_this_INST" xml:space="preserve">
    <value>A instância é o nome da instância associado ao serviço FMRI adjacente. Um determinado serviço pode ter várias instâncias. Clicar na instância o levará ao visualizador de serviço, mas permitirá que você atualize as propriedades dessa instância. Se você deseja atualizar o nível de serviço e outras propriedades da instância, clique no serviço FMRI. Veja: smf (5). Veja: svcs (1).</value>
  </data>
  <data name="whats_this_STATE" xml:space="preserve">
    <value>O estado da instância específica. Os significados dos vários estados são descritos na página de manual do smf. Veja: smf (5). Veja: svcs (1).</value>
  </data>
  <data name="whats_this_DESC" xml:space="preserve">
    <value>Uma descrição textual do serviço. Veja: smf (5). Veja: svcs (1).</value>
  </data>
  <data name="whats_this_NSTATE" xml:space="preserve">
    <value>O próximo estado do serviço, útil quando o serviço está em transição. Um '-' indica que não está em transição. Veja: svcs (1).</value>
  </data>
  <data name="whats_this_SCOPE" xml:space="preserve">
    <value>O nome do escopo da instância de serviço. Veja: smf (5). Veja: svcs (1).</value>
  </data>
  <data name="whats_this_STIME" xml:space="preserve">
    <value>A hora (se hoje) ou a data em que o serviço entrou no estado atual. Veja: smf (5). Veja: svcs (1).</value>
  </data>
  <data name="whats_this_Select" xml:space="preserve">
    <value>Marque a lista de serviços que você deseja ativar/desativar/atualizar etc aqui.</value>
  </data>
  <data name="whats_this_service_detail" xml:space="preserve">
    <value>Especifique/edite informações de serviço de nível superior aqui: nome do serviço, número da versão, nome do pacote configurável para manifesto e estabilidade. Veja: smf (5). Veja: svccfg (1M). Veja: service_bundle (4).</value>
  </data>
  <data name="whats_this_bundle_name" xml:space="preserve">
    <value>Nome do pacote de serviços no manifesto. Vários serviços podem ser agrupados em um manifesto, mas o nome aqui não é importante. Para serviços já existentes, ele será configurado para exportar, pois é o que o svccfg faz quando exporta um manifesto do repositório SMF. Veja: svccfg (1M). Veja: service_bundle (4).</value>
  </data>
  <data name="whats_this_service_name" xml:space="preserve">
    <value>Nome do serviço. A convenção é usar o formato [general_service_category]/[name]. As categorias já fornecidas incluem aplicativo (aplicativos de nível superior), marco (coleções de outros serviços, como serviços de nomes), plataforma (serviços específicos da plataforma), sistema (serviços do sistema Solaris), dispositivo (serviços específicos do dispositivo), rede (serviços de rede/internet) e site (descrições específicas do site). Você também pode especificar sua própria categoria, é claro, mas a maioria dos serviços deve caber confortavelmente em uma das opções acima. Veja: smf (5).</value>
  </data>
  <data name="whats_this_service_version" xml:space="preserve">
    <value>Especifique o número da versão do serviço.</value>
  </data>
  <data name="whats_this_instance_detail" xml:space="preserve">
    <value>Especifique/edite as informações da instância aqui: nome da instância e se ela deve ser ativada por padrão ou não. Veja: smf (5).</value>
  </data>
  <data name="whats_this_instance_name" xml:space="preserve">
    <value>Especifique o nome da instância. Os serviços com apenas uma instância geralmente usam o padrão como o nome da instância (por exemplo, inetd). Os serviços que permitem várias instâncias da mesma execução binária com configurações diferentes exigirão várias instâncias, por exemplo o serviço chargen inetd, que requer uma versão baseada em fluxo e datagrama, executando em portas diferentes. Veja: smf (5).</value>
  </data>
  <data name="whats_this_instance_enabled" xml:space="preserve">
    <value>Especifique se você deseja que essa instância de serviço seja ativada por padrão ou não.</value>
  </data>
  <data name="whats_this_serv_instname" xml:space="preserve">
    <value>Especifique se deseja atualizar as informações no nível do serviço ou da instância. Se uma propriedade, dependência etc existir no nível do serviço e da instância, o valor no nível da instância será usado para essa instância específica, caso contrário, herdará o valor no nível do serviço. Isso permite que as instâncias herdam seletivamente valores da especificação de nível de serviço, enquanto podem definir valores que eles podem exigir exclusivamente.</value>
  </data>
  <data name="whats_this_stability" xml:space="preserve">
    <value>Especifique o valor da estabilidade, - significa deixar por definir.</value>
  </data>
  <data name="whats_this_fmri" xml:space="preserve">
    <value>Especifique o FMRI de serviço/instância relevante.</value>
  </data>
  <data name="whats_this_restarter_detail" xml:space="preserve">
    <value>Por padrão, os serviços usam o restaurador principal (sistema/serviço de restaurador) para controlar seu comportamento. Restarters delegados, como inetd, também podem ser especificados. Como o nome sugere, isso envolve confiar no restarter delegado para lidar com o início/parada dos serviços e, no caso do inetd, esses métodos têm nomes diferentes para diferenciar dos serviços baseados no restarter principal. Veja: inetd (1M). Veja: svc.startd (1M). Veja: smf_restarter (5).</value>
  </data>
  <data name="whats_this_exec_detail" xml:space="preserve">
    <value>Os métodos de execução são o coração de um serviço smf; é onde você especifica quais programas serão executados ao iniciar/parar o serviço. Os serviços que usam um restarter delegado (como inetd) têm seus próprios métodos de início/parada (por exemplo, inetd_start, inetd_stop), mas os serviços que usam o restarter principal geralmente especificam um método de início e parada no mínimo. Veja: svc.startd (1M). Veja: smf_method (5). Veja: inetd (1M).</value>
  </data>
  <data name="whats_this_exec_name" xml:space="preserve">
    <value>Forneça um nome exclusivo para este método de execução aqui. Para serviços que usam o mestre restarter, os métodos start e stop são obrigatórios e executados respectivamente quando o serviço está ativado e as dependências atendidas; quando uma dependência fica offline, o serviço falha, o administrador desativa o serviço etc. Consulte: smf_method (5). Veja: inetd (1M).</value>
  </data>
  <data name="whats_this_exec_timeout_seconds" xml:space="preserve">
    <value>Os métodos que excederem o tempo limite serão eliminados. Para métodos ilimitados, defina o tempo limite como 0.</value>
  </data>
  <data name="whats_this_exec_exec" xml:space="preserve">
    <value>Forneça o caminho para executar o método mais argumentos. Palavras-chave: kill e: true são fornecidas e podem ser usadas como métodos exec. O primeiro mata todo o processo iniciado pelo serviço, o último simplesmente devolve o sucesso ao restarter. Os tokens de método também podem ser usados para passar informações relacionadas ao smf para o método. Veja: smf_method (5).</value>
  </data>
  <data name="whats_this_exec_user" xml:space="preserve">
    <value>Especifique uma substituição no valor do ambiente do método padrão para o usuário (o ambiente do método padrão é herdado do init).</value>
  </data>
  <data name="whats_this_exec_group" xml:space="preserve">
    <value>Especifique uma substituição no valor do ambiente do método padrão para o grupo (o ambiente do método padrão é herdado do init).</value>
  </data>
  <data name="whats_this_exec_privileges" xml:space="preserve">
    <value>Especifique uma substituição para os privilégios de ambiente do método padrão.</value>
  </data>
  <data name="whats_this_depy_detail" xml:space="preserve">
    <value>As dependências fornecem uma maneira de especificar quais serviços seu serviço precisa estar (às vezes não) em execução antes de ser executado. Chamar dependências é um dos principais benefícios do SMF, pois impõe uma estrutura determinística sobre o que era uma rede muito complicada de scripts init etc. As dependências oferecem muita flexibilidade, pois você pode especificar que seu serviço aguardará uma dependência específica para ficar online, aguarde um membro de um grupo (por exemplo, qualquer serviço de nomes que esteja configurado) ou até mesmo execute apenas se outro serviço não estiver em execução. Veja: smf (5).</value>
  </data>
  <data name="whats_this_depy_name" xml:space="preserve">
    <value>Forneça um nome exclusivo para essa dependência aqui.</value>
  </data>
  <data name="whats_this_depy_type" xml:space="preserve">
    <value>Selecione o tipo de dependência (caminho ou serviço). As dependências do caminho exigem que o arquivo nomeado esteja no local (?). Um exemplo de um fmri válido para uma dependência de caminho seria file :: // localhost/path2file. Dependências de serviço são apenas fmris identificando o serviço em que dependem.</value>
  </data>
  <data name="whats_this_depy_grouping" xml:space="preserve">
    <value>Selecione um valor de agrupamento para sua dependência. Os valores de agrupamento determinam a natureza da relação de dependência. Por exemplo, para require_all, todas as dependências do grupo precisam estar online/degradadas antes do início do serviço, enquanto que para require_any, qualquer um do grupo precisa estar online/degradado. Para optional_all, todos os serviços ativados e capazes de executar devem estar online, enquanto para exclude_all, se a dependência estiver on-line/degradada, o serviço não deverá ser executado.</value>
  </data>
  <data name="whats_this_depy_restart_on" xml:space="preserve">
    <value>Especifique aqui o modelo de propagação de falhas, ou seja, como meu serviço deve reagir a falhas na dependência? Os valores são nenhum (não nos importamos com a dependência após a inicialização), falha (reinicie se a dependência tiver uma falha), reinicie (reinicie se a dependência for reiniciada) e atualize (reinicie se a dependência for atualizada).</value>
  </data>
  <data name="whats_this_dept_detail" xml:space="preserve">
    <value>Dependentes podem parecer um pouco confusos - por que ter um mecanismo para especificar quais serviços dependem do meu serviço? Não é possível adicionar apenas uma dependência no candidato dependente? Dependentes abordam a situação em que você não possui o manifesto dependente e não pode fazer isso. Como conseqüência, os dependentes se parecem muito com dependências, mas, em vez de especificar que o serviço atual depende dessa dependência, estamos dizendo que o serviço atual é uma dependência desse serviço filho/dependente. Veja: smf (5).</value>
  </data>
  <data name="whats_this_dept_name" xml:space="preserve">
    <value>Forneça um nome exclusivo para este dependente aqui.</value>
  </data>
  <data name="whats_this_dept_grouping" xml:space="preserve">
    <value>Selecione um valor de agrupamento ao qual este serviço aderirá para seus dependentes. Os valores de agrupamento determinam a natureza da relação de dependência. Por exemplo, para require_all, todos os serviços no grupo que especificam o dependente precisam estar online/degradados antes que o dependente seja iniciado, enquanto que para require_any, qualquer um do grupo deve estar online/degradado. Para optional_all, todos os serviços ativados e capazes de executar devem estar online, enquanto para exclude_all, se o serviço estiver on-line/degradado, o serviço dependente não deverá ser executado.</value>
  </data>
  <data name="whats_this_dept_restart_on" xml:space="preserve">
    <value>Especifique aqui o modelo de propagação de falhas, ou seja, como esse serviço deve propagar falhas para seus dependentes? Os valores são nenhum (dependente não se importa com o serviço após a inicialização), falha (depende do reinício, se o serviço tiver uma falha), reiniciar (depende do reinício, se o serviço for reiniciado) e atualizar (dependente da reinicialização, se o serviço for atualizado).</value>
  </data>
  <data name="whats_this_pgroup_detail" xml:space="preserve">
    <value>No smf, todas as informações de serviço, dependências, métodos exec etc. são armazenadas como propriedades nos grupos de propriedades. Além disso, os serviços podem precisar especificar outras propriedades, por exemplo Os serviços inetd precisam especificar propriedades que o restaurador delegado inetd entende e precisa. Os serviços também podem armazenar seus próprios dados de aplicativo nas propriedades. Veja: smf (5).</value>
  </data>
  <data name="whats_this_pgroup_name" xml:space="preserve">
    <value>Especifique o nome do grupo de propriedades. Veja: smf (5).</value>
  </data>
  <data name="whats_this_pgroup_type" xml:space="preserve">
    <value>Especifique o tipo de grupo de propriedades. Veja: smf (5).</value>
  </data>
  <data name="whats_this_sinst_pgroup_name" xml:space="preserve">
    <value>Selecione o grupo de propriedades no nível de serviço/instância apropriado. Isso permite a criação/atualização de propriedades no nível específico da instância e no serviço.</value>
  </data>
  <data name="whats_this_prop_detail" xml:space="preserve">
    <value>As propriedades são associadas a grupos de propriedades e usadas para armazenar informações relevantes ao serviço. Veja: smf (5).</value>
  </data>
  <data name="whats_this_prop_name" xml:space="preserve">
    <value>Especifique o nome da propriedade. Veja: smf (5).</value>
  </data>
  <data name="whats_this_prop_type" xml:space="preserve">
    <value>Especifique o tipo de propriedade. Os tipos válidos são contagem, número inteiro, opaco, host, nome do host, endereço_net_v4, endereço_net_v6, tempo, adstring, ustring, booleano, fmri, uri. Veja: smf (5).</value>
  </data>
  <data name="whats_this_prop_value" xml:space="preserve">
    <value>Especifique o valor da propriedade. Veja: smf (5).</value>
  </data>
  <data name="whats_this_man_detail" xml:space="preserve">
    <value>Forneça informações sobre a documentação da página de manual do serviço. Veja: homem (1).</value>
  </data>
  <data name="whats_this_man_title" xml:space="preserve">
    <value>Especifique o título da página de manual. Veja: homem (1).</value>
  </data>
  <data name="whats_this_man_section" xml:space="preserve">
    <value>Especifique a seção da página de manual. Veja: homem (1).</value>
  </data>
  <data name="whats_this_man_manpath" xml:space="preserve">
    <value>Especifique manpath. Veja: homem (1).</value>
  </data>
  <data name="whats_this_template_detail" xml:space="preserve">
    <value>Forneça detalhes do serviço, seu nome comumente usado e uma descrição do que o serviço faz.</value>
  </data>
  <data name="whats_this_template_common_name" xml:space="preserve">
    <value>Especifique o nome comum para o serviço.</value>
  </data>
  <data name="whats_this_template_description" xml:space="preserve">
    <value>Descreva o serviço.</value>
  </data>
  <data name="wizard_back" xml:space="preserve">
    <value>Costas</value>
  </data>
  <data name="wizard_next" xml:space="preserve">
    <value>Próximo</value>
  </data>
  <data name="wizard_add" xml:space="preserve">
    <value>Adicionar</value>
  </data>
  <data name="wizard_update" xml:space="preserve">
    <value>Atualizar</value>
  </data>
  <data name="wizard_new" xml:space="preserve">
    <value>Novo</value>
  </data>
  <data name="wizard_remove" xml:space="preserve">
    <value>Retirar</value>
  </data>
  <data name="wizard_finish" xml:space="preserve">
    <value>Terminar</value>
  </data>
  <data name="smfwizard_title" xml:space="preserve">
    <value>Criar serviço SMF</value>
  </data>
  <data name="smfwizard_service_heading" xml:space="preserve">
    <value>Inserir informações de serviço</value>
  </data>
  <data name="smfwizard_service_description" xml:space="preserve">
    <value>Especifique/edite as informações de serviço de nível superior aqui. Para o nome do serviço, a convenção é usar o formato [general_service_category]/[name]. As categorias já fornecidas incluem aplicativo (aplicativos de nível superior), marco (coleções de outros serviços, como serviços de nomes), plataforma (serviços específicos da plataforma), sistema (serviços do sistema Solaris), dispositivo (serviços específicos do dispositivo), rede (rede/serviços de internet) e site (descrições específicas do site). Você também pode especificar sua própria categoria, é claro, mas a maioria dos serviços deve caber confortavelmente em uma das opções acima. Especifique também um número de versão inteiro. Veja: smf (5). Veja: svccfg (1M). Veja: service_bundle (4).</value>
  </data>
  <data name="smfwizard_service_name" xml:space="preserve">
    <value>Digite o nome do serviço</value>
  </data>
  <data name="smfwizard_service_name_error" xml:space="preserve">
    <value>* O nome deve ser não nulo! *</value>
  </data>
  <data name="smfwizard_service_version" xml:space="preserve">
    <value>Digite a versão do serviço</value>
  </data>
  <data name="smfwizard_service_version_error" xml:space="preserve">
    <value>* A versão deve ser um número positivo! *</value>
  </data>
  <data name="smfwizard_instance_heading" xml:space="preserve">
    <value>Inserir informações da instância</value>
  </data>
  <data name="smfwizard_instance_description" xml:space="preserve">
    <value>Especifique o nome da instância. Os serviços com apenas uma instância geralmente usam o padrão como o nome da instância (por exemplo, inetd). Os serviços que permitem várias instâncias da mesma execução binária com configurações diferentes exigirão várias instâncias, por exemplo o serviço chargen inetd, que requer uma versão baseada em fluxo e em datagrama executando na mesma porta. Veja: smf (5).</value>
  </data>
  <data name="smfwizard_instance_name" xml:space="preserve">
    <value>Especifique o nome da instância</value>
  </data>
  <data name="smfwizard_instance_name_error" xml:space="preserve">
    <value>* O nome deve ser não nulo! *</value>
  </data>
  <data name="smfwizard_instance_enabled" xml:space="preserve">
    <value>Especifique se você deseja que essa instância de serviço seja ativada por padrão ou não.</value>
  </data>
  <data name="smfwizard_instance_enabled_error" xml:space="preserve">
    <value>* Ativado deve ser verdadeiro/falso *</value>
  </data>
  <data name="smfwizard_sinst_name" xml:space="preserve">
    <value>Selecione Serviço/Instância específica à qual as Propriedades se aplicam</value>
  </data>
  <data name="smfwizard_sinst_error" xml:space="preserve">
    <value>* O serviço ou instância deve ser selecionado! *</value>
  </data>
  <data name="smfwizard_restarter_heading" xml:space="preserve">
    <value>Inserir informações do Restarter</value>
  </data>
  <data name="smfwizard_restarter_description" xml:space="preserve">
    <value>Por padrão, os serviços usam o restaurador principal (sistema/serviço de restaurador) para controlar seu comportamento. Restarters delegados, como inetd, também podem ser especificados. Como o nome sugere, isso envolve confiar no restarter delegado para lidar com o início/parada dos serviços e, no caso do inetd, esses métodos têm nomes diferentes para diferenciar dos serviços baseados no restarter principal. Veja: inetd (1M). Veja: svc.startd (1M). Veja: smf_restarter (5).</value>
  </data>
  <data name="smfwizard_restarter_fmri" xml:space="preserve">
    <value>Digite o FMRI que identifica o restarter</value>
  </data>
  <data name="smfwizard_restarter_fmri_error" xml:space="preserve">
    <value>* Não é um FMRI válido! *</value>
  </data>
  <data name="smfwizard_dependency_heading" xml:space="preserve">
    <value>Inserir informações de dependência</value>
  </data>
  <data name="smfwizard_dependency_description" xml:space="preserve">
    <value>As dependências fornecem uma maneira de especificar quais serviços seu serviço precisa estar (às vezes não) em execução antes de ser executado. Chamar dependências é um dos principais benefícios do SMF, pois impõe uma estrutura determinística sobre o que era uma rede muito complicada de scripts init etc. As dependências fornecem muita flexibilidade, pois você pode especificar agrupamentos que significam que seu serviço aguardará por todos. dependências para ficarem on-line (require_all), aguardar qualquer membro de um grupo (require_any), aguardar todos os membros ativados (opcional_all) ou executar apenas se o grupo não estiver ativado (exclude_all). Especifique também o modelo de propagação de falhas aqui, ou seja, como meu serviço deve reagir a falhas na dependência? Os valores são nenhum (não nos importamos com a dependência após a inicialização), falha (reinicie se a dependência tiver uma falha), reinicie (reinicie se a dependência for reiniciada) e atualize (reinicie se a dependência for atualizada). Por fim, especifique o fmri identificando a dependência e a estabilidade (opcional). Veja: smf (5).</value>
  </data>
  <data name="smfwizard_dependency_name" xml:space="preserve">
    <value>Digite o nome da dependência</value>
  </data>
  <data name="smfwizard_dependency_name_error" xml:space="preserve">
    <value>* O nome deve ser não nulo! *</value>
  </data>
  <data name="smfwizard_dependency_type" xml:space="preserve">
    <value>Digite o tipo de dependência</value>
  </data>
  <data name="smfwizard_dependency_type_error" xml:space="preserve">
    <value>* O tipo deve ser não nulo! *</value>
  </data>
  <data name="smfwizard_dependency_grouping" xml:space="preserve">
    <value>Selecione Agrupamento de Dependências</value>
  </data>
  <data name="smfwizard_dependency_grouping_error" xml:space="preserve">
    <value>* O agrupamento deve ser não nulo! *</value>
  </data>
  <data name="smfwizard_dependency_restart_on" xml:space="preserve">
    <value>Selecione o valor de reinicialização</value>
  </data>
  <data name="smfwizard_dependency_restart_on_error" xml:space="preserve">
    <value>* O valor de reinicialização deve ser não nulo! *</value>
  </data>
  <data name="smfwizard_dependency_fmri" xml:space="preserve">
    <value>Digite FMRI que identifica dependência</value>
  </data>
  <data name="smfwizard_dependency_fmri_error" xml:space="preserve">
    <value>* Não é um FMRI válido! *</value>
  </data>
  <data name="smfwizard_dependency_stability" xml:space="preserve">
    <value>Selecionar valor de estabilidade da dependência</value>
  </data>
  <data name="smfwizard_dependency_stability_error" xml:space="preserve">
    <value>* A estabilidade deve ser não nula! *</value>
  </data>
  <data name="smfwizard_dependent_heading" xml:space="preserve">
    <value>Inserir informações dependentes</value>
  </data>
  <data name="smfwizard_dependent_description" xml:space="preserve">
    <value>Dependentes podem parecer um pouco confusos - por que ter um mecanismo para especificar quais serviços dependem do meu serviço? Não é possível adicionar apenas uma dependência no candidato dependente? Dependentes abordam a situação em que você não possui o manifesto dependente e não pode fazer isso. Como conseqüência, os dependentes se parecem muito com dependências, mas, em vez de especificar que o serviço atual depende dessa dependência, estamos dizendo que o serviço atual é uma dependência desse serviço filho/dependente. Como dependências, podemos especificar agrupamentos, valores restart_on. Para dependentes, o FMRI refere-se ao serviço dependente (filho), é claro. Veja: smf (5).</value>
  </data>
  <data name="smfwizard_dependent_name" xml:space="preserve">
    <value>Digite o nome do dependente</value>
  </data>
  <data name="smfwizard_dependent_name_error" xml:space="preserve">
    <value>* O nome deve ser não nulo! *</value>
  </data>
  <data name="smfwizard_dependent_type" xml:space="preserve">
    <value>Digite o tipo de dependente</value>
  </data>
  <data name="smfwizard_dependent_type_error" xml:space="preserve">
    <value>* O tipo deve ser não nulo! *</value>
  </data>
  <data name="smfwizard_dependent_grouping" xml:space="preserve">
    <value>Selecione agrupamento dependente</value>
  </data>
  <data name="smfwizard_dependent_grouping_error" xml:space="preserve">
    <value>* O agrupamento deve ser não nulo! *</value>
  </data>
  <data name="smfwizard_dependent_restart_on" xml:space="preserve">
    <value>Selecione o valor de reinicialização</value>
  </data>
  <data name="smfwizard_dependent_restart_on_error" xml:space="preserve">
    <value>* O valor de reinicialização deve ser não nulo! *</value>
  </data>
  <data name="smfwizard_dependent_fmri" xml:space="preserve">
    <value>Digite FMRI identificando dependente</value>
  </data>
  <data name="smfwizard_dependent_fmri_error" xml:space="preserve">
    <value>* Não é um FMRI válido! *</value>
  </data>
  <data name="smfwizard_dependent_stability" xml:space="preserve">
    <value>Selecionar valor de estabilidade dependente</value>
  </data>
  <data name="smfwizard_dependent_stability_error" xml:space="preserve">
    <value>* A estabilidade deve ser não nula! *</value>
  </data>
  <data name="smfwizard_exec_heading" xml:space="preserve">
    <value>Inserir informações sobre o método de execução</value>
  </data>
  <data name="smfwizard_exec_description" xml:space="preserve">
    <value>Os métodos de execução são o coração de um serviço smf; é onde você especifica quais programas serão executados ao iniciar/parar o serviço. Os serviços que usam um restarter delegado (como inetd) têm seus próprios nomes para métodos start/stop (inetd_start, inetd_stop), mas os serviços que usam o restarter principal geralmente especificam exec_methods denominados método start e stop no mínimo. Os métodos que excederem o valor do tempo limite (especificado em segundos) serão eliminados. Para métodos ilimitados, defina o tempo limite como 0. Para o próprio método exec, você deve fornecer um caminho para o método mais argumentos. Palavras-chave: kill e: true são fornecidas e podem ser usadas como métodos exec. O primeiro mata todos os processos iniciados pelo serviço, o último simplesmente devolve o sucesso ao restarter. Os tokens de método também podem ser usados para passar informações relacionadas ao smf para o método. As substituições de usuário/grupo/privilégios podem ser especificadas no ambiente de método padrão (herdado de init). Veja: smf_method (5). Veja: svc.startd (1M). Veja: inetd (1M).</value>
  </data>
  <data name="smfwizard_exec_name" xml:space="preserve">
    <value>Digite o nome do método de execução</value>
  </data>
  <data name="smfwizard_exec_name_error" xml:space="preserve">
    <value>* O nome deve ser não nulo! *</value>
  </data>
  <data name="smfwizard_exec_timeout" xml:space="preserve">
    <value>Digite o tempo limite (segundos) após o qual o método de execução é eliminado</value>
  </data>
  <data name="smfwizard_exec_timeout_error" xml:space="preserve">
    <value>* O tempo limite deve ser um número inteiro! *</value>
  </data>
  <data name="smfwizard_exec_exec" xml:space="preserve">
    <value>Digite o caminho para executar o método mais argumentos</value>
  </data>
  <data name="smfwizard_exec_exec_error" xml:space="preserve">
    <value>* O método Execute deve ser não nulo! *</value>
  </data>
  <data name="smfwizard_exec_user" xml:space="preserve">
    <value>Especifique uma substituição para o usuário do ambiente do método padrão</value>
  </data>
  <data name="smfwizard_exec_user_error" xml:space="preserve">
    <value>*Usuário Inválido!*</value>
  </data>
  <data name="smfwizard_exec_group" xml:space="preserve">
    <value>Especifique uma substituição para o grupo de ambiente do método padrão</value>
  </data>
  <data name="smfwizard_exec_group_error" xml:space="preserve">
    <value>* Grupo inválido! *</value>
  </data>
  <data name="smfwizard_exec_privileges" xml:space="preserve">
    <value>Especifique uma substituição para os privilégios de ambiente do método padrão</value>
  </data>
  <data name="smfwizard_exec_privileges_error" xml:space="preserve">
    <value>* Privilégios inválidos! *</value>
  </data>
  <data name="smfwizard_property_group_heading" xml:space="preserve">
    <value>Inserir detalhes do grupo de propriedades</value>
  </data>
  <data name="smfwizard_property_group_description" xml:space="preserve">
    <value>No smf, todas as informações de serviço, dependências, métodos exec etc. são armazenadas como propriedades nos grupos de propriedades. Além disso, os serviços podem precisar especificar outras propriedades, por exemplo Os serviços inetd precisam especificar propriedades que o restaurador delegado inetd entende e precisa. Os serviços também podem armazenar seus próprios dados de aplicativo nas propriedades. Veja: smf (5).</value>
  </data>
  <data name="smfwizard_property_group_name" xml:space="preserve">
    <value>Especifique o nome do grupo de propriedades</value>
  </data>
  <data name="smfwizard_property_group_name_error" xml:space="preserve">
    <value>* O nome deve ser não nulo! *</value>
  </data>
  <data name="smfwizard_property_group_type" xml:space="preserve">
    <value>Especifique o tipo de grupo de propriedades</value>
  </data>
  <data name="smfwizard_property_group_type_error" xml:space="preserve">
    <value>* O tipo deve ser não nulo! *</value>
  </data>
  <data name="smfwizard_property_group_stability" xml:space="preserve">
    <value>Selecione o valor da estabilidade do property_group</value>
  </data>
  <data name="smfwizard_property_group_stability_error" xml:space="preserve">
    <value>* A estabilidade deve ser não nula! *</value>
  </data>
  <data name="smfwizard_property_heading" xml:space="preserve">
    <value>Digite os detalhes da propriedade</value>
  </data>
  <data name="smfwizard_property_description" xml:space="preserve">
    <value>As propriedades são associadas a grupos de propriedades e usadas para armazenar informações relevantes de serviço ou instância. Veja: smf (5).</value>
  </data>
  <data name="smfwizard_pgroup_name" xml:space="preserve">
    <value>Selecionar grupo de propriedades</value>
  </data>
  <data name="mfwizard_pgroup_name_error" xml:space="preserve">
    <value>* O grupo de propriedades deve ser não nulo! *</value>
  </data>
  <data name="smfwizard_property_name" xml:space="preserve">
    <value>Digite o nome da propriedade</value>
  </data>
  <data name="smfwizard_property_name_error" xml:space="preserve">
    <value>* O nome deve ser não nulo! *</value>
  </data>
  <data name="smfwizard_property_type" xml:space="preserve">
    <value>Selecione o tipo de propriedade</value>
  </data>
  <data name="smfwizard_property_type_error" xml:space="preserve">
    <value>* O tipo deve ser não nulo! *</value>
  </data>
  <data name="smfwizard_property_value" xml:space="preserve">
    <value>Digite o valor da propriedade</value>
  </data>
  <data name="smfwizard_property_value_error" xml:space="preserve">
    <value>*Valor inválido!*</value>
  </data>
  <data name="smfwizard_template_heading" xml:space="preserve">
    <value>Inserir detalhes do modelo</value>
  </data>
  <data name="smfwizard_template_description" xml:space="preserve">
    <value>Forneça detalhes do serviço, seu nome comumente usado e uma descrição do que o serviço faz.</value>
  </data>
  <data name="smfwizard_template_common_name" xml:space="preserve">
    <value>Especifique o nome comum para o serviço</value>
  </data>
  <data name="smfwizard_template_common_name_error" xml:space="preserve">
    <value>* O nome comum deve ser não nulo! *</value>
  </data>
  <data name="smfwizard_template_svc_description" xml:space="preserve">
    <value>Descreva o serviço</value>
  </data>
  <data name="smfwizard_template_svc_description_error" xml:space="preserve">
    <value>* A descrição deve ser não nula! *</value>
  </data>
  <data name="smfwizard_manpage_heading" xml:space="preserve">
    <value>Digite os detalhes do ManPage</value>
  </data>
  <data name="smfwizard_manpage_description" xml:space="preserve">
    <value>Forneça informações sobre a documentação da página de manual do serviço. Veja: homem (1).</value>
  </data>
  <data name="smfwizard_manpage_title" xml:space="preserve">
    <value>Especifique o título da página de manual</value>
  </data>
  <data name="smfwizard_manpage_title_error" xml:space="preserve">
    <value>* O título não pode ser nulo! *</value>
  </data>
  <data name="smfwizard_manpage_section" xml:space="preserve">
    <value>Seção Especificar página de manual</value>
  </data>
  <data name="smfwizard_manpage_section_error" xml:space="preserve">
    <value>* A seção deve ser não nula! *</value>
  </data>
  <data name="smfwizard_manpage_manpath" xml:space="preserve">
    <value>Especifique manpath</value>
  </data>
  <data name="smfwizard_manpage_manpath_error" xml:space="preserve">
    <value>* Manpath deve ser não nulo! *</value>
  </data>
</root>