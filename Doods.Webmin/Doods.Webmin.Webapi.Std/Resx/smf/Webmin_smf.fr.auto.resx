<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cmds_run" xml:space="preserve">
    <value>Commandes exécutées lors de la génération de cette page</value>
  </data>
  <data name="whats_this_title" xml:space="preserve">
    <value>Qu'est-ce que c'est ça?</value>
  </data>
  <data name="state_enable" xml:space="preserve">
    <value>Activer</value>
  </data>
  <data name="state_disable" xml:space="preserve">
    <value>Désactiver</value>
  </data>
  <data name="state_refresh" xml:space="preserve">
    <value>Rafraîchir</value>
  </data>
  <data name="state_restart" xml:space="preserve">
    <value>Redémarrer</value>
  </data>
  <data name="state_maintenance" xml:space="preserve">
    <value>Entretien</value>
  </data>
  <data name="state_degraded" xml:space="preserve">
    <value>Dégradé</value>
  </data>
  <data name="state_clear" xml:space="preserve">
    <value>Clair</value>
  </data>
  <data name="index_title" xml:space="preserve">
    <value>Installation de gestion des services</value>
  </data>
  <data name="index_detail" xml:space="preserve">
    <value>Liste des services SMF</value>
  </data>
  <data name="index_svc_type" xml:space="preserve">
    <value>Sélectionnez le type de service</value>
  </data>
  <data name="index_extraopts" xml:space="preserve">
    <value>Ajouter des options supplémentaires pour afficher</value>
  </data>
  <data name="index_include_disabled" xml:space="preserve">
    <value>Inclure les services aux personnes handicapées?</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>Appliquer aux éléments cochés</value>
  </data>
  <data name="index_sort_by" xml:space="preserve">
    <value>Trier par</value>
  </data>
  <data name="index_create_new_service" xml:space="preserve">
    <value>Créer un nouveau service</value>
  </data>
  <data name="index_search_instance" xml:space="preserve">
    <value>Recherche de services</value>
  </data>
  <data name="index_select" xml:space="preserve">
    <value>Sélectionner</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="index_Select" xml:space="preserve">
    <value>Sélectionner</value>
  </data>
  <data name="index_FMRI" xml:space="preserve">
    <value>FMRI</value>
  </data>
  <data name="index_INST" xml:space="preserve">
    <value>INST</value>
  </data>
  <data name="index_STATE" xml:space="preserve">
    <value>ETAT</value>
  </data>
  <data name="index_DESC" xml:space="preserve">
    <value>DESC</value>
  </data>
  <data name="index_NSTATE" xml:space="preserve">
    <value>NSTATE</value>
  </data>
  <data name="index_SCOPE" xml:space="preserve">
    <value>PORTÉE</value>
  </data>
  <data name="index_STIME" xml:space="preserve">
    <value>STIME</value>
  </data>
  <data name="index_deleteconfirm" xml:space="preserve">
    <value>Voulez-vous vraiment supprimer définitivement le ou les services sélectionnés?</value>
  </data>
  <data name="search_instance_title" xml:space="preserve">
    <value>Chercher</value>
  </data>
  <data name="search_instance_detail" xml:space="preserve">
    <value>Rechercher/parcourir les instances de service</value>
  </data>
  <data name="search_instance_go" xml:space="preserve">
    <value>Aller!</value>
  </data>
  <data name="search_instance_browse" xml:space="preserve">
    <value>Rechercher un service</value>
  </data>
  <data name="search_instance_noresults" xml:space="preserve">
    <value>Pas de résultat pour cette recherche!</value>
  </data>
  <data name="instance_viewer_title" xml:space="preserve">
    <value>Informations sur l'instance</value>
  </data>
  <data name="instance_viewer_detail" xml:space="preserve">
    <value>Détails de l'instance</value>
  </data>
  <data name="instance_viewer_goto_pgroup_editor" xml:space="preserve">
    <value>Afficher/modifier des groupes de propriétés/propriétés</value>
  </data>
  <data name="instance_viewer_goto_dep_viewer" xml:space="preserve">
    <value>Afficher les arbres de dépendance/dépendants</value>
  </data>
  <data name="dep_viewer_title" xml:space="preserve">
    <value>Dépendances/personnes à charge</value>
  </data>
  <data name="dep_viewer_detail" xml:space="preserve">
    <value>Dépendance/Arbres dépendants pour l'instance</value>
  </data>
  <data name="dep_viewer_apply" xml:space="preserve">
    <value>Appliquer aux éléments cochés</value>
  </data>
  <data name="dep_viewer_depy_info" xml:space="preserve">
    <value>Arbre de dépendance</value>
  </data>
  <data name="dep_viewer_dept_info" xml:space="preserve">
    <value>Arbre dépendant</value>
  </data>
  <data name="dep_viewer_back" xml:space="preserve">
    <value>visionneuse d'instance</value>
  </data>
  <data name="state_editor_title" xml:space="preserve">
    <value>Informations sur l'état du service</value>
  </data>
  <data name="state_editor_detail" xml:space="preserve">
    <value>Détails de l'état de l'instance</value>
  </data>
  <data name="state_editor_stateinfo" xml:space="preserve">
    <value>Informations sur l'état de l'instance</value>
  </data>
  <data name="state_editor_apply" xml:space="preserve">
    <value>Appliquer aux éléments cochés</value>
  </data>
  <data name="state_editor_depy_info" xml:space="preserve">
    <value>Informations sur la dépendance</value>
  </data>
  <data name="state_editor_dept_info" xml:space="preserve">
    <value>Information dépendante</value>
  </data>
  <data name="log_viewer_title" xml:space="preserve">
    <value>Visionneuse de fichier journal</value>
  </data>
  <data name="log_viewer_detail" xml:space="preserve">
    <value>Afficher (fin de) le fichier journal</value>
  </data>
  <data name="log_viewer_show_last" xml:space="preserve">
    <value>Afficher dernier</value>
  </data>
  <data name="log_viewer_num_lines" xml:space="preserve">
    <value>lignes en</value>
  </data>
  <data name="log_viewer_submit" xml:space="preserve">
    <value>Mettre à jour la vue</value>
  </data>
  <data name="property_group_editor_title" xml:space="preserve">
    <value>Informations sur le groupe de propriétés</value>
  </data>
  <data name="property_group_editor_detail" xml:space="preserve">
    <value>Groupes de propriétés pour le service</value>
  </data>
  <data name="property_group_editor_addsinst" xml:space="preserve">
    <value>Sélectionnez Service/Instance</value>
  </data>
  <data name="property_group_editor_addname" xml:space="preserve">
    <value>Nouveau nom du groupe de propriétés</value>
  </data>
  <data name="property_group_editor_addtype" xml:space="preserve">
    <value>Nouveau type de groupe de propriétés</value>
  </data>
  <data name="property_group_editor_addpg" xml:space="preserve">
    <value>Ajouter un nouveau groupe de propriétés</value>
  </data>
  <data name="property_group_editor_add" xml:space="preserve">
    <value>Ajouter</value>
  </data>
  <data name="property_group_editor_apply" xml:space="preserve">
    <value>Appliquer aux éléments cochés</value>
  </data>
  <data name="property_group_editor_deleteconfirm" xml:space="preserve">
    <value>Voulez-vous vraiment supprimer définitivement le ou les groupes de propriétés sélectionnés?</value>
  </data>
  <data name="property_group_editor_delete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="property_group_editor_select" xml:space="preserve">
    <value>Sélectionner</value>
  </data>
  <data name="property_group_editor_sinst" xml:space="preserve">
    <value>Service/Instance</value>
  </data>
  <data name="property_group_editor_pgroup_name" xml:space="preserve">
    <value>Nom du groupe de propriétés</value>
  </data>
  <data name="property_group_editor_pgroup_type" xml:space="preserve">
    <value>Type de groupe de propriétés</value>
  </data>
  <data name="property_group_editor_back" xml:space="preserve">
    <value>visionneuse d'instance</value>
  </data>
  <data name="property_editor_title" xml:space="preserve">
    <value>Informations sur la propriété</value>
  </data>
  <data name="property_editor_detail" xml:space="preserve">
    <value>Propriétés du service/groupe de propriétés</value>
  </data>
  <data name="property_editor_addprop" xml:space="preserve">
    <value>Ajouter une nouvelle propriété</value>
  </data>
  <data name="property_editor_addname" xml:space="preserve">
    <value>Nouveau nom de propriété</value>
  </data>
  <data name="property_editor_addtype" xml:space="preserve">
    <value>Nouveau type de propriété</value>
  </data>
  <data name="property_editor_addvalue" xml:space="preserve">
    <value>Nouvelle valeur de propriété</value>
  </data>
  <data name="property_editor_add" xml:space="preserve">
    <value>Ajouter</value>
  </data>
  <data name="property_editor_apply" xml:space="preserve">
    <value>Appliquer aux éléments cochés</value>
  </data>
  <data name="property_editor_deleteconfirm" xml:space="preserve">
    <value>Voulez-vous vraiment supprimer définitivement la ou les propriétés sélectionnées?</value>
  </data>
  <data name="property_editor_delete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="property_editor_select" xml:space="preserve">
    <value>Sélectionner</value>
  </data>
  <data name="property_editor_prop_name" xml:space="preserve">
    <value>Nom de la propriété</value>
  </data>
  <data name="property_editor_prop_type" xml:space="preserve">
    <value>Type de propriété</value>
  </data>
  <data name="property_editor_prop_value" xml:space="preserve">
    <value>Valeur de la propriété</value>
  </data>
  <data name="property_editor_update" xml:space="preserve">
    <value>Mise à jour</value>
  </data>
  <data name="property_editor_back" xml:space="preserve">
    <value>groupes de propriétés</value>
  </data>
  <data name="whats_this" xml:space="preserve">
    <value>(Qu'est-ce que c'est ça?)</value>
  </data>
  <data name="close_window" xml:space="preserve">
    <value>Fermer la fenêtre</value>
  </data>
  <data name="svc_chooser_titlesvc" xml:space="preserve">
    <value>Choisissez le service FMRI</value>
  </data>
  <data name="svc_chooser_titleinst" xml:space="preserve">
    <value>Choisissez l'instance de service FMRI</value>
  </data>
  <data name="svc_chooser_titleboth" xml:space="preserve">
    <value>Choisissez Service/Instance FMRI</value>
  </data>
  <data name="svc_chooser_ok" xml:space="preserve">
    <value>D'accord</value>
  </data>
  <data name="svc_chooser_cancel" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="svc_chooser_fmri" xml:space="preserve">
    <value>Service Emplacement de l'arborescence FMRI $1 </value>
  </data>
  <data name="path_chooser_title" xml:space="preserve">
    <value>Choisissez le chemin FMRI</value>
  </data>
  <data name="path_chooser_ok" xml:space="preserve">
    <value>D'accord</value>
  </data>
  <data name="path_chooser_cancel" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="path_chooser_path" xml:space="preserve">
    <value>Emplacement de l'arborescence FMRI du chemin $1 </value>
  </data>
  <data name="editserv_title" xml:space="preserve">
    <value>Modifier le service SMF</value>
  </data>
  <data name="editserv_newtitle" xml:space="preserve">
    <value>Créer un nouveau service SMF</value>
  </data>
  <data name="editserv_propviewer" xml:space="preserve">
    <value>Créer/afficher/modifier un service</value>
  </data>
  <data name="editserv_service_detail" xml:space="preserve">
    <value>Détails du service</value>
  </data>
  <data name="editserv_bundle_name" xml:space="preserve">
    <value>Nom du groupe de services</value>
  </data>
  <data name="editserv_service_name" xml:space="preserve">
    <value>Nom du service</value>
  </data>
  <data name="editserv_service_type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="editserv_service_version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="editserv_stability" xml:space="preserve">
    <value>La stabilité</value>
  </data>
  <data name="editserv_fmri" xml:space="preserve">
    <value>Spécifiez FMRI</value>
  </data>
  <data name="editserv_instance_detail" xml:space="preserve">
    <value>Détails de l'instance</value>
  </data>
  <data name="editserv_instance_name" xml:space="preserve">
    <value>Nom de l'instance</value>
  </data>
  <data name="editserv_instance_enabled" xml:space="preserve">
    <value>Activée?</value>
  </data>
  <data name="editserv_serv_instname" xml:space="preserve">
    <value>Sélectionnez le niveau de service ou d'instance</value>
  </data>
  <data name="editserv_restarter_detail" xml:space="preserve">
    <value>Détails du redémarrage</value>
  </data>
  <data name="editserv_depy_detail" xml:space="preserve">
    <value>Détails de la dépendance</value>
  </data>
  <data name="editserv_depy_name" xml:space="preserve">
    <value>Nom de la dépendance</value>
  </data>
  <data name="editserv_depy_type" xml:space="preserve">
    <value>Type de dépendance</value>
  </data>
  <data name="editserv_depy_grouping" xml:space="preserve">
    <value>Groupement de dépendances</value>
  </data>
  <data name="editserv_depy_restart_on" xml:space="preserve">
    <value>Valeur de redémarrage</value>
  </data>
  <data name="editserv_dept_detail" xml:space="preserve">
    <value>Détails dépendants</value>
  </data>
  <data name="editserv_dept_name" xml:space="preserve">
    <value>Nom dépendant</value>
  </data>
  <data name="editserv_dept_grouping" xml:space="preserve">
    <value>Groupement dépendant</value>
  </data>
  <data name="editserv_dept_restart_on" xml:space="preserve">
    <value>Valeur de redémarrage</value>
  </data>
  <data name="editserv_exec_detail" xml:space="preserve">
    <value>Détails de la méthode d'exécution</value>
  </data>
  <data name="editserv_exec_name" xml:space="preserve">
    <value>Exécuter le nom de la méthode</value>
  </data>
  <data name="editserv_exec_timeout_seconds" xml:space="preserve">
    <value>Délai d'expiration (secondes)</value>
  </data>
  <data name="editserv_exec_exec" xml:space="preserve">
    <value>Exécuter le chemin de la méthode</value>
  </data>
  <data name="editserv_exec_user" xml:space="preserve">
    <value>Informations d'identification de la méthode utilisateur</value>
  </data>
  <data name="editserv_exec_group" xml:space="preserve">
    <value>Informations d'identification de la méthode de groupe</value>
  </data>
  <data name="editserv_exec_privileges" xml:space="preserve">
    <value>Privilèges</value>
  </data>
  <data name="editserv_pgroup_detail" xml:space="preserve">
    <value>Détails du groupe de propriétés</value>
  </data>
  <data name="editserv_pgroup_name" xml:space="preserve">
    <value>Nom du groupe de propriétés</value>
  </data>
  <data name="editserv_pgroup_type" xml:space="preserve">
    <value>Type de groupe de propriétés</value>
  </data>
  <data name="editserv_sinst_pgroup_name" xml:space="preserve">
    <value>[Service/Instance]. [Property_Group]</value>
  </data>
  <data name="editserv_prop_detail" xml:space="preserve">
    <value>Détails de la propriété</value>
  </data>
  <data name="editserv_prop_name" xml:space="preserve">
    <value>Nom de la propriété</value>
  </data>
  <data name="editserv_prop_type" xml:space="preserve">
    <value>Type de propriété</value>
  </data>
  <data name="editserv_prop_value" xml:space="preserve">
    <value>Valeur de la propriété</value>
  </data>
  <data name="editserv_template_detail" xml:space="preserve">
    <value>Détails du modèle</value>
  </data>
  <data name="editserv_template_common_name" xml:space="preserve">
    <value>Nom commun</value>
  </data>
  <data name="editserv_template_description" xml:space="preserve">
    <value>La description</value>
  </data>
  <data name="editserv_man_detail" xml:space="preserve">
    <value>Détails de la page de manuel</value>
  </data>
  <data name="editserv_man_title" xml:space="preserve">
    <value>Titre</value>
  </data>
  <data name="editserv_man_section" xml:space="preserve">
    <value>Section</value>
  </data>
  <data name="editserv_man_manpath" xml:space="preserve">
    <value>Manpath</value>
  </data>
  <data name="editserv_update" xml:space="preserve">
    <value>Mise à jour</value>
  </data>
  <data name="editserv_new" xml:space="preserve">
    <value>Nouveau</value>
  </data>
  <data name="editserv_finish" xml:space="preserve">
    <value>terminer</value>
  </data>
  <data name="editserv_cancel" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="editserv_add" xml:space="preserve">
    <value>Ajouter</value>
  </data>
  <data name="editserv_addnew" xml:space="preserve">
    <value>Ajouter un nouveau</value>
  </data>
  <data name="editserv_createservice" xml:space="preserve">
    <value>Créer un service</value>
  </data>
  <data name="editserv_next" xml:space="preserve">
    <value>Prochain</value>
  </data>
  <data name="editserv_continue" xml:space="preserve">
    <value>Continuer</value>
  </data>
  <data name="editserv_skip" xml:space="preserve">
    <value>Sauter</value>
  </data>
  <data name="editserv_clear" xml:space="preserve">
    <value>Clair</value>
  </data>
  <data name="editserv_restarter_fmri" xml:space="preserve">
    <value>Redémarrage FMRI</value>
  </data>
  <data name="editserv_dependency" xml:space="preserve">
    <value>Dépendance</value>
  </data>
  <data name="editstate_detail" xml:space="preserve">
    <value>Modifier l'état du service</value>
  </data>
  <data name="editstate_stateinfo" xml:space="preserve">
    <value>Informations sur l'état de l'instance</value>
  </data>
  <data name="editstate_depy_detail" xml:space="preserve">
    <value>Informations sur la dépendance d'instance</value>
  </data>
  <data name="editstate_dept_detail" xml:space="preserve">
    <value>Informations dépendantes de l'instance</value>
  </data>
  <data name="editstate_enable" xml:space="preserve">
    <value>Activer</value>
  </data>
  <data name="editstate_disable" xml:space="preserve">
    <value>Désactiver</value>
  </data>
  <data name="editstate_refresh" xml:space="preserve">
    <value>Rafraîchir</value>
  </data>
  <data name="editstate_restart" xml:space="preserve">
    <value>Redémarrer</value>
  </data>
  <data name="editstate_clear" xml:space="preserve">
    <value>Clair</value>
  </data>
  <data name="editstate_maintenance" xml:space="preserve">
    <value>Entretien</value>
  </data>
  <data name="editstate_degraded" xml:space="preserve">
    <value>Dégradé</value>
  </data>
  <data name="whats_this_stateinfo" xml:space="preserve">
    <value>Les informations relatives à l'état de l'instance de service sont affichées, telles qu'elles sont obtenues à partir de la commande svcs. Voir: svcs (1). Voir: smf (5).</value>
  </data>
  <data name="whats_this_extraopts" xml:space="preserve">
    <value>Vérifiez ces options supplémentaires, puis cliquez sur Mettre à jour la vue si vous souhaitez les voir dans la liste des services ci-dessous. La signification des options se trouve dans la page de manuel svcs. Voir: svcs (1).</value>
  </data>
  <data name="whats_this_enabledonly" xml:space="preserve">
    <value>Indiquez si vous souhaitez que seuls les services activés soient affichés ou si vous souhaitez que tous les services (activés et désactivés) figurent dans la liste.</value>
  </data>
  <data name="whats_this_create_new_service" xml:space="preserve">
    <value>Cliquez ici si vous souhaitez ajouter un nouveau service.</value>
  </data>
  <data name="whats_this_serviceviewer" xml:space="preserve">
    <value>Le visualiseur de services fournit une vue catégorique des services disponibles/en cours d'exécution sur le système et de leurs états, sur la base de la liste fournie par la commande svcs. Cliquer sur un onglet particulier affiche les services spécifiques à cette catégorie, par ex. Le réseau contient tous les services de la forme svc:/network. Plusieurs opérations d'activation/désactivation/actualisation/redémarrage/maintenance/dégradées/effacement/suppression peuvent être effectuées en vérifiant les instances de service candidates et en cliquant sur le bouton d'application approprié. Les services/instances individuels peuvent être modifiés en cliquant respectivement sur l'IRM ou l'instance, et l'état d'une instance de service individuelle peut être examiné en cliquant sur l'état. Voir: svcs (1).</value>
  </data>
  <data name="whats_this_apply" xml:space="preserve">
    <value>Vous pouvez effectuer des opérations sur plusieurs éléments de la liste des services en cochant les services appropriés et en utilisant ces boutons. Voir: svcadm (1M).</value>
  </data>
  <data name="whats_this_FMRI" xml:space="preserve">
    <value>Le FMRI est un indicateur de ressource universel (URI) qui spécifie un service particulier. Dans la liste `` Tous '', l'IRMF complète est affichée, mais sous des catégories de services particulières, par ex. réseau, la catégorie de réseau n'est pas affichée. Cliquer sur un service particulier FMRI vous amènera à la visionneuse de service où vous pouvez modifier les propriétés de ce service avec effet immédiat (alors soyez prudent!). Voir: smf (5). Voir: svcs (1).</value>
  </data>
  <data name="whats_this_INST" xml:space="preserve">
    <value>L'instance est le nom d'instance associé au service FMRI adjacent. Un service donné peut avoir plusieurs instances. Cliquer sur l'instance vous amènera à la visionneuse de service, mais vous permettra uniquement de mettre à jour les propriétés de cette instance. Si vous souhaitez mettre à jour le niveau de service et d'autres propriétés d'instance, cliquez sur le service FMRI. Voir: smf (5). Voir: svcs (1).</value>
  </data>
  <data name="whats_this_STATE" xml:space="preserve">
    <value>L'état de l'instance particulière. La signification des différents états est décrite dans la page de manuel smf. Voir: smf (5). Voir: svcs (1).</value>
  </data>
  <data name="whats_this_DESC" xml:space="preserve">
    <value>Une description textuelle du service. Voir: smf (5). Voir: svcs (1).</value>
  </data>
  <data name="whats_this_NSTATE" xml:space="preserve">
    <value>État suivant du service, utile lorsque le service est en transition. Un «-» indique qu'il n'est pas en transition. Voir: svcs (1).</value>
  </data>
  <data name="whats_this_SCOPE" xml:space="preserve">
    <value>Nom de portée de l'instance de service. Voir: smf (5). Voir: svcs (1).</value>
  </data>
  <data name="whats_this_STIME" xml:space="preserve">
    <value>L'heure (si aujourd'hui) ou la date à laquelle le service est entré dans l'état actuel. Voir: smf (5). Voir: svcs (1).</value>
  </data>
  <data name="whats_this_Select" xml:space="preserve">
    <value>Consultez la liste des services que vous souhaitez activer/désactiver/actualiser, etc. ici.</value>
  </data>
  <data name="whats_this_service_detail" xml:space="preserve">
    <value>Spécifiez/modifiez les informations de service de niveau supérieur ici: nom du service, numéro de version, nom du bundle pour le manifeste et la stabilité. Voir: smf (5). Voir: svccfg (1M). Voir: service_bundle (4).</value>
  </data>
  <data name="whats_this_bundle_name" xml:space="preserve">
    <value>Nom du groupe de services dans le manifeste. Plusieurs services peuvent être regroupés dans le même manifeste, mais le nom ici n'est pas important. Pour les services déjà existants, il sera configuré pour exporter car c'est ce que fait svccfg lorsqu'il exporte un manifeste depuis le référentiel SMF. Voir: svccfg (1M). Voir: service_bundle (4).</value>
  </data>
  <data name="whats_this_service_name" xml:space="preserve">
    <value>Nom du service. La convention consiste à utiliser le format [general_service_category]/[nom]. Les catégories déjà fournies incluent les applications (applications de niveau supérieur), les jalons (collections d'autres services, tels que les services de noms), la plate-forme (services spécifiques à la plate-forme), le système (services système Solaris), le périphérique (services spécifiques aux périphériques), le réseau (réseau/services Internet) et le site (descriptions spécifiques au site). Vous pouvez également spécifier votre propre catégorie, bien sûr, mais la plupart des services doivent s'intégrer confortablement dans l'une des options ci-dessus. Voir: smf (5).</value>
  </data>
  <data name="whats_this_service_version" xml:space="preserve">
    <value>Spécifiez le numéro de version du service.</value>
  </data>
  <data name="whats_this_instance_detail" xml:space="preserve">
    <value>Spécifiez/modifiez les informations d'instance ici: nom de l'instance et si elle doit être activée par défaut ou non. Voir: smf (5).</value>
  </data>
  <data name="whats_this_instance_name" xml:space="preserve">
    <value>Spécifiez le nom de l'instance. Les services avec une seule instance utilisent généralement default comme nom d'instance (par exemple inetd). Les services qui autorisent plusieurs instances du même binaire s'exécutant avec différentes configurations nécessiteront plusieurs instances, par ex. le service chargen inetd, qui nécessite une version basée sur un flux et un datagramme s'exécutant sur différents ports. Voir: smf (5).</value>
  </data>
  <data name="whats_this_instance_enabled" xml:space="preserve">
    <value>Indiquez si vous souhaitez que cette instance de service soit activée par défaut ou non.</value>
  </data>
  <data name="whats_this_serv_instname" xml:space="preserve">
    <value>Indiquez si vous souhaitez mettre à jour les informations au niveau du service ou de l'instance. Si une propriété, une dépendance, etc. existe à la fois au niveau du service et de l'instance, la valeur au niveau de l'instance est utilisée pour cette instance spécifique, sinon elle hérite de la valeur au niveau du service. Cela permet aux instances d'hériter sélectivement des valeurs de la spécification de niveau de service, tout en étant en mesure de définir des valeurs dont elles peuvent avoir besoin uniquement.</value>
  </data>
  <data name="whats_this_stability" xml:space="preserve">
    <value>Spécifiez la valeur de stabilité, - signifie laisser non défini.</value>
  </data>
  <data name="whats_this_fmri" xml:space="preserve">
    <value>Spécifiez le service/l'instance FMRI approprié.</value>
  </data>
  <data name="whats_this_restarter_detail" xml:space="preserve">
    <value>Par défaut, les services utilisent le redémarrage principal (service système/redémarrage) pour contrôler leur comportement. Les redémarreurs délégués tels que inetd peuvent également être spécifiés. Comme son nom l'indique, cela implique de s'appuyer sur le redémarrage délégué pour gérer le démarrage/l'arrêt des services, et dans le cas de inetd, ces méthodes ont des noms différents pour se différencier des services basés sur le redémarrage principal. Voir: inetd (1M). Voir: svc.startd (1M). Voir: smf_restarter (5).</value>
  </data>
  <data name="whats_this_exec_detail" xml:space="preserve">
    <value>Les méthodes d'exécution sont au cœur d'un service smf, c'est là que vous spécifiez les programmes à exécuter lors du démarrage/arrêt du service. Les services qui utilisent un redémarrage délégué (comme inetd) ont leurs propres méthodes de démarrage/arrêt (par exemple inetd_start, inetd_stop), mais les services utilisant le redémarrage maître spécifieront généralement une méthode de démarrage et d'arrêt au minimum. Voir: svc.startd (1M). Voir: smf_method (5). Voir: inetd (1M).</value>
  </data>
  <data name="whats_this_exec_name" xml:space="preserve">
    <value>Indiquez ici un nom unique pour cette méthode d'exécution. Pour les services utilisant le redémarrage maître, les méthodes de démarrage et d'arrêt sont obligatoires et s'exécutent respectivement lorsque le service est activé et les dépendances respectées; lorsqu'une dépendance se déconnecte, le service échoue, l'administrateur désactive le service, etc. Voir: smf_method (5). Voir: inetd (1M).</value>
  </data>
  <data name="whats_this_exec_timeout_seconds" xml:space="preserve">
    <value>Les méthodes qui dépassent leurs délais d'expiration seront supprimées. Pour les méthodes illimitées, définissez le délai d'expiration sur 0.</value>
  </data>
  <data name="whats_this_exec_exec" xml:space="preserve">
    <value>Fournissez le chemin pour exécuter la méthode plus les arguments. Mots clés: kill et: true sont fournis et peuvent être utilisés comme méthodes d'exécution. Le premier tue tous les processus lancés par le service, le second renvoie simplement le succès au redémarreur. Les jetons de méthode peuvent également être utilisés pour transmettre des informations liées à smf à la méthode. Voir: smf_method (5).</value>
  </data>
  <data name="whats_this_exec_user" xml:space="preserve">
    <value>Spécifiez un remplacement de la valeur d'environnement de méthode par défaut pour l'utilisateur (l'environnement de méthode par défaut est hérité d'init).</value>
  </data>
  <data name="whats_this_exec_group" xml:space="preserve">
    <value>Spécifiez un remplacement de la valeur par défaut de l'environnement de méthode pour le groupe (l'environnement de méthode par défaut est hérité d'init).</value>
  </data>
  <data name="whats_this_exec_privileges" xml:space="preserve">
    <value>Spécifiez un remplacement des privilèges d'environnement de méthode par défaut.</value>
  </data>
  <data name="whats_this_depy_detail" xml:space="preserve">
    <value>Les dépendances permettent de spécifier les services dont votre service a besoin pour être (parfois pas) en cours d'exécution avant de s'exécuter. L'appel des dépendances est l'un des principaux avantages de SMF, car il impose une structure déterministe à ce qui était un Web très enchevêtré de scripts d'init, etc. Les dépendances offrent beaucoup de flexibilité dans la mesure où vous pouvez spécifier que votre service attendra une dépendance particulière pour entrer en ligne, attendre un membre d'un groupe (par exemple, quel que soit le service de noms configuré), ou même ne s'exécuter que si aucun autre service n'est en cours d'exécution. Voir: smf (5).</value>
  </data>
  <data name="whats_this_depy_name" xml:space="preserve">
    <value>Indiquez ici un nom unique pour cette dépendance.</value>
  </data>
  <data name="whats_this_depy_type" xml:space="preserve">
    <value>Sélectionnez le type de dépendance (chemin ou service). Les dépendances de chemin nécessitent que le fichier nommé soit en place (?). Un exemple de fmri valide pour une dépendance de chemin serait file :: // localhost/path2file. Les dépendances de service ne sont que des identifiants identifiant le service dont il dépend.</value>
  </data>
  <data name="whats_this_depy_grouping" xml:space="preserve">
    <value>Sélectionnez une valeur de regroupement pour votre dépendance. Les valeurs de regroupement déterminent la nature de la relation de dépendance. Par exemple, pour require_all, toutes les dépendances du groupe doivent être en ligne/dégradées avant le démarrage du service, tandis que pour require_any, tout groupe doit être en ligne/dégradé. Pour optional_all, tous les services activés et pouvant être exécutés doivent être en ligne, tandis que pour exclude_all, si la dépendance est en ligne/dégradée, le service ne doit pas être exécuté.</value>
  </data>
  <data name="whats_this_depy_restart_on" xml:space="preserve">
    <value>Spécifiez ici le modèle de propagation des défauts, c'est-à-dire comment mon service doit-il réagir aux défauts de la dépendance? Les valeurs sont aucune (nous ne nous soucions pas de la dépendance après le démarrage), faute (redémarrer si la dépendance a un défaut), redémarrer (redémarrer si la dépendance est redémarrée) et actualiser (redémarrer si la dépendance est actualisée).</value>
  </data>
  <data name="whats_this_dept_detail" xml:space="preserve">
    <value>Les personnes à charge peuvent sembler un peu déroutantes - pourquoi avoir un mécanisme pour spécifier quels services dépendent de mon service, ne puis-je pas simplement ajouter une dépendance au candidat à charge? Les personnes à charge traitent la situation dans laquelle vous ne possédez pas le manifeste dépendant et vous ne pouvez pas le faire. En conséquence, les dépendants ressemblent beaucoup à des dépendances, mais plutôt que de spécifier que le service actuel dépend de cette dépendance, nous disons que le service actuel est une dépendance pour ce service enfant/dépendant. Voir: smf (5).</value>
  </data>
  <data name="whats_this_dept_name" xml:space="preserve">
    <value>Indiquez ici un nom unique pour cette personne à charge.</value>
  </data>
  <data name="whats_this_dept_grouping" xml:space="preserve">
    <value>Sélectionnez une valeur de regroupement à laquelle ce service adhérera pour sa personne à charge. Les valeurs de regroupement déterminent la nature de la relation de dépendance. Par exemple, pour require_all, tous les services du groupe qui spécifient la dépendance doivent être en ligne/dégradés avant le démarrage de la dépendance, tandis que pour require_any, tous les groupes doivent être en ligne/dégradés. Pour optional_all, tous les services activés et pouvant être exécutés doivent être en ligne, tandis que pour exclude_all, si le service est en ligne/dégradé, le service dépendant ne doit pas être exécuté.</value>
  </data>
  <data name="whats_this_dept_restart_on" xml:space="preserve">
    <value>Spécifiez ici le modèle de propagation des fautes, c'est-à-dire comment ce service devrait-il propager les fautes à sa personne à charge? Les valeurs sont aucune (la personne à charge ne se soucie pas du service après le démarrage), l'erreur (à redémarrer en fonction si le service est en panne), le redémarrage (à redémarrer en fonction si le service est redémarré) et l'actualisation (en fonction du redémarrage si le service est actualisé).</value>
  </data>
  <data name="whats_this_pgroup_detail" xml:space="preserve">
    <value>Dans smf, toutes les informations de service, les dépendances, les méthodes d'exécution, etc. sont stockées en tant que propriétés dans les groupes de propriétés. En outre, les services peuvent avoir besoin de spécifier d'autres propriétés, par exemple Les services inetd doivent spécifier les propriétés que le redémarreur délégué inetd comprend et dont il a besoin. Les services peuvent également stocker leurs propres données d'application dans des propriétés. Voir: smf (5).</value>
  </data>
  <data name="whats_this_pgroup_name" xml:space="preserve">
    <value>Spécifiez le nom du groupe de propriétés. Voir: smf (5).</value>
  </data>
  <data name="whats_this_pgroup_type" xml:space="preserve">
    <value>Spécifiez le type de groupe de propriétés. Voir: smf (5).</value>
  </data>
  <data name="whats_this_sinst_pgroup_name" xml:space="preserve">
    <value>Sélectionnez le groupe de propriétés au niveau de service/instance approprié. Cela permet la création/mise à jour de propriétés à la fois spécifiques à l'instance et au niveau du service.</value>
  </data>
  <data name="whats_this_prop_detail" xml:space="preserve">
    <value>Les propriétés sont associées à des groupes de propriétés et utilisées pour stocker des informations pertinentes pour le service. Voir: smf (5).</value>
  </data>
  <data name="whats_this_prop_name" xml:space="preserve">
    <value>Spécifiez le nom de la propriété. Voir: smf (5).</value>
  </data>
  <data name="whats_this_prop_type" xml:space="preserve">
    <value>Spécifiez le type de propriété. Les types valides sont count, integer, opaque, host, hostname, net_address_v4, net_address_v6, time, astring, ustring, boolean, fmri, uri. Voir: smf (5).</value>
  </data>
  <data name="whats_this_prop_value" xml:space="preserve">
    <value>Spécifiez la valeur de la propriété. Voir: smf (5).</value>
  </data>
  <data name="whats_this_man_detail" xml:space="preserve">
    <value>Fournissez des informations concernant la documentation de la page de manuel pour le service. Voir: homme (1).</value>
  </data>
  <data name="whats_this_man_title" xml:space="preserve">
    <value>Spécifiez le titre de la page de manuel. Voir: homme (1).</value>
  </data>
  <data name="whats_this_man_section" xml:space="preserve">
    <value>Spécifiez la section de la page de manuel. Voir: homme (1).</value>
  </data>
  <data name="whats_this_man_manpath" xml:space="preserve">
    <value>Spécifiez manpath. Voir: homme (1).</value>
  </data>
  <data name="whats_this_template_detail" xml:space="preserve">
    <value>Fournissez les détails du service, son nom couramment utilisé et une description de ce que fait le service.</value>
  </data>
  <data name="whats_this_template_common_name" xml:space="preserve">
    <value>Spécifiez le nom commun du service.</value>
  </data>
  <data name="whats_this_template_description" xml:space="preserve">
    <value>Décrivez le service.</value>
  </data>
  <data name="wizard_back" xml:space="preserve">
    <value>Retour</value>
  </data>
  <data name="wizard_next" xml:space="preserve">
    <value>Prochain</value>
  </data>
  <data name="wizard_add" xml:space="preserve">
    <value>Ajouter</value>
  </data>
  <data name="wizard_update" xml:space="preserve">
    <value>Mise à jour</value>
  </data>
  <data name="wizard_new" xml:space="preserve">
    <value>Nouveau</value>
  </data>
  <data name="wizard_remove" xml:space="preserve">
    <value>Retirer</value>
  </data>
  <data name="wizard_finish" xml:space="preserve">
    <value>terminer</value>
  </data>
  <data name="smfwizard_title" xml:space="preserve">
    <value>Créer un service SMF</value>
  </data>
  <data name="smfwizard_service_heading" xml:space="preserve">
    <value>Entrez les informations de service</value>
  </data>
  <data name="smfwizard_service_description" xml:space="preserve">
    <value>Spécifiez/modifiez les informations de service de niveau supérieur ici. Pour le nom du service, la convention consiste à utiliser le format [general_service_category]/[nom]. Les catégories déjà fournies incluent l'application (applications de niveau supérieur), le jalon (collections d'autres services, tels que les services de noms), la plate-forme (services spécifiques à la plate-forme), le système (services système Solaris), le périphérique (services spécifiques au périphérique), le réseau (réseau/services Internet) et le site (descriptions spécifiques au site). Vous pouvez également spécifier votre propre catégorie, bien sûr, mais la plupart des services doivent s'intégrer confortablement dans l'une des options ci-dessus. Spécifiez également un numéro de version entier. Voir: smf (5). Voir: svccfg (1M). Voir: service_bundle (4).</value>
  </data>
  <data name="smfwizard_service_name" xml:space="preserve">
    <value>Entrez le nom du service</value>
  </data>
  <data name="smfwizard_service_name_error" xml:space="preserve">
    <value>* Le nom doit être non nul! *</value>
  </data>
  <data name="smfwizard_service_version" xml:space="preserve">
    <value>Entrez la version du service</value>
  </data>
  <data name="smfwizard_service_version_error" xml:space="preserve">
    <value>* La version doit être un nombre positif! *</value>
  </data>
  <data name="smfwizard_instance_heading" xml:space="preserve">
    <value>Entrez les informations sur l'instance</value>
  </data>
  <data name="smfwizard_instance_description" xml:space="preserve">
    <value>Spécifiez le nom de l'instance. Les services avec une seule instance utilisent généralement default comme nom d'instance (par exemple inetd). Les services qui autorisent plusieurs instances du même binaire s'exécutant avec différentes configurations nécessiteront plusieurs instances, par ex. le service chargen inetd, qui nécessite à la fois un flux et une version basée sur un datagramme fonctionnant sur le même port. Voir: smf (5).</value>
  </data>
  <data name="smfwizard_instance_name" xml:space="preserve">
    <value>Spécifiez le nom de l'instance</value>
  </data>
  <data name="smfwizard_instance_name_error" xml:space="preserve">
    <value>* Le nom doit être non nul! *</value>
  </data>
  <data name="smfwizard_instance_enabled" xml:space="preserve">
    <value>Indiquez si vous souhaitez que cette instance de service soit activée par défaut ou non.</value>
  </data>
  <data name="smfwizard_instance_enabled_error" xml:space="preserve">
    <value>* Activé doit être vrai/faux *</value>
  </data>
  <data name="smfwizard_sinst_name" xml:space="preserve">
    <value>Sélectionnez Service/Instance spécifique à laquelle les propriétés s'appliquent</value>
  </data>
  <data name="smfwizard_sinst_error" xml:space="preserve">
    <value>* Le service ou l'instance doit être sélectionné! *</value>
  </data>
  <data name="smfwizard_restarter_heading" xml:space="preserve">
    <value>Entrez les informations de redémarrage</value>
  </data>
  <data name="smfwizard_restarter_description" xml:space="preserve">
    <value>Par défaut, les services utilisent le redémarrage principal (service système/redémarrage) pour contrôler leur comportement. Les redémarreurs délégués tels que inetd peuvent également être spécifiés. Comme son nom l'indique, cela implique de s'appuyer sur le redémarrage délégué pour gérer le démarrage/l'arrêt des services, et dans le cas de inetd, ces méthodes ont des noms différents pour se différencier des services basés sur le redémarrage principal. Voir: inetd (1M). Voir: svc.startd (1M). Voir: smf_restarter (5).</value>
  </data>
  <data name="smfwizard_restarter_fmri" xml:space="preserve">
    <value>Entrez le redémarrage d'identification de l'IRMF</value>
  </data>
  <data name="smfwizard_restarter_fmri_error" xml:space="preserve">
    <value>* Pas une FMRI valide! *</value>
  </data>
  <data name="smfwizard_dependency_heading" xml:space="preserve">
    <value>Entrez les informations de dépendance</value>
  </data>
  <data name="smfwizard_dependency_description" xml:space="preserve">
    <value>Les dépendances permettent de spécifier les services dont votre service a besoin pour être (parfois pas) en cours d'exécution avant de s'exécuter. L'appel des dépendances est l'un des principaux avantages de SMF, car il impose une structure déterministe à ce qui était un Web très enchevêtré de scripts d'initialisation, etc. les dépendances doivent être mises en ligne (require_all), attendre tout membre d'un groupe (require_any), attendre tous les membres activés (optional_all) ou même ne s'exécuter que si le groupe n'est pas activé (exclude_all). Spécifiez également le modèle de propagation des défauts ici, c'est-à-dire comment mon service doit-il réagir aux défauts de la dépendance? Les valeurs sont aucune (nous ne nous soucions pas de la dépendance après le démarrage), faute (redémarrer si la dépendance a un défaut), redémarrer (redémarrer si la dépendance est redémarrée) et actualiser (redémarrer si la dépendance est actualisée). Enfin, spécifiez le fmri identifiant la dépendance et la stabilité (facultatif). Voir: smf (5).</value>
  </data>
  <data name="smfwizard_dependency_name" xml:space="preserve">
    <value>Entrez le nom de la dépendance</value>
  </data>
  <data name="smfwizard_dependency_name_error" xml:space="preserve">
    <value>* Le nom doit être non nul! *</value>
  </data>
  <data name="smfwizard_dependency_type" xml:space="preserve">
    <value>Entrez le type de dépendance</value>
  </data>
  <data name="smfwizard_dependency_type_error" xml:space="preserve">
    <value>* Le type doit être non nul! *</value>
  </data>
  <data name="smfwizard_dependency_grouping" xml:space="preserve">
    <value>Sélectionner un groupe de dépendances</value>
  </data>
  <data name="smfwizard_dependency_grouping_error" xml:space="preserve">
    <value>* Le regroupement doit être non nul! *</value>
  </data>
  <data name="smfwizard_dependency_restart_on" xml:space="preserve">
    <value>Sélectionnez la valeur de redémarrage</value>
  </data>
  <data name="smfwizard_dependency_restart_on_error" xml:space="preserve">
    <value>* La valeur de redémarrage doit être non nulle! *</value>
  </data>
  <data name="smfwizard_dependency_fmri" xml:space="preserve">
    <value>Entrez FMRI identifiant la dépendance</value>
  </data>
  <data name="smfwizard_dependency_fmri_error" xml:space="preserve">
    <value>* Pas une FMRI valide! *</value>
  </data>
  <data name="smfwizard_dependency_stability" xml:space="preserve">
    <value>Sélectionnez la valeur de stabilité de la dépendance</value>
  </data>
  <data name="smfwizard_dependency_stability_error" xml:space="preserve">
    <value>* La stabilité doit être non nulle! *</value>
  </data>
  <data name="smfwizard_dependent_heading" xml:space="preserve">
    <value>Entrez les informations dépendantes</value>
  </data>
  <data name="smfwizard_dependent_description" xml:space="preserve">
    <value>Les personnes à charge peuvent sembler un peu déroutantes - pourquoi avoir un mécanisme pour spécifier quels services dépendent de mon service, ne puis-je pas simplement ajouter une dépendance au candidat à charge? Les personnes à charge traitent la situation dans laquelle vous ne possédez pas le manifeste dépendant et vous ne pouvez pas le faire. En conséquence, les dépendants ressemblent beaucoup à des dépendances, mais plutôt que de spécifier que le service actuel dépend de cette dépendance, nous disons que le service actuel est une dépendance pour ce service enfant/dépendant. Comme les dépendances, nous pouvons spécifier des regroupements, des valeurs restart_on. Pour les personnes à charge, la FMRI se réfère bien sûr au service (enfant) à charge. Voir: smf (5).</value>
  </data>
  <data name="smfwizard_dependent_name" xml:space="preserve">
    <value>Entrez un nom dépendant</value>
  </data>
  <data name="smfwizard_dependent_name_error" xml:space="preserve">
    <value>* Le nom doit être non nul! *</value>
  </data>
  <data name="smfwizard_dependent_type" xml:space="preserve">
    <value>Entrez le type dépendant</value>
  </data>
  <data name="smfwizard_dependent_type_error" xml:space="preserve">
    <value>* Le type doit être non nul! *</value>
  </data>
  <data name="smfwizard_dependent_grouping" xml:space="preserve">
    <value>Sélectionnez un groupe dépendant</value>
  </data>
  <data name="smfwizard_dependent_grouping_error" xml:space="preserve">
    <value>* Le regroupement doit être non nul! *</value>
  </data>
  <data name="smfwizard_dependent_restart_on" xml:space="preserve">
    <value>Sélectionnez la valeur de redémarrage</value>
  </data>
  <data name="smfwizard_dependent_restart_on_error" xml:space="preserve">
    <value>* La valeur de redémarrage doit être non nulle! *</value>
  </data>
  <data name="smfwizard_dependent_fmri" xml:space="preserve">
    <value>Entrez FMRI identifiant la personne à charge</value>
  </data>
  <data name="smfwizard_dependent_fmri_error" xml:space="preserve">
    <value>* Pas une FMRI valide! *</value>
  </data>
  <data name="smfwizard_dependent_stability" xml:space="preserve">
    <value>Sélectionnez la valeur de stabilité dépendante</value>
  </data>
  <data name="smfwizard_dependent_stability_error" xml:space="preserve">
    <value>* La stabilité doit être non nulle! *</value>
  </data>
  <data name="smfwizard_exec_heading" xml:space="preserve">
    <value>Entrez les informations sur la méthode d'exécution</value>
  </data>
  <data name="smfwizard_exec_description" xml:space="preserve">
    <value>Les méthodes d'exécution sont au cœur d'un service smf, c'est là que vous spécifiez les programmes à exécuter lors du démarrage/arrêt du service. Les services qui utilisent un redémarrage délégué (comme inetd) ont leurs propres noms pour les méthodes de démarrage/arrêt (inetd_start, inetd_stop), mais les services utilisant le redémarrage maître spécifieront généralement au moins exec_methods nommé méthode de démarrage et d'arrêt. Les méthodes qui dépassent le délai d'expiration (spécifié en secondes) seront supprimées. Pour les méthodes illimitées, définissez le délai d'expiration sur 0. Pour la méthode exec elle-même, vous devez fournir un chemin d'accès à la méthode plus des arguments. Mots clés: kill et: true sont fournis et peuvent être utilisés comme méthodes d'exécution. Le premier tue tous les processus lancés par le service, le second renvoie simplement le succès au redémarreur. Les jetons de méthode peuvent également être utilisés pour transmettre des informations liées à smf à la méthode. Les remplacements des utilisateurs/groupes/privilèges peuvent être spécifiés pour l'environnement de méthode par défaut (hérité d'init). Voir: smf_method (5). Voir: svc.startd (1M). Voir: inetd (1M).</value>
  </data>
  <data name="smfwizard_exec_name" xml:space="preserve">
    <value>Entrez le nom de la méthode d'exécution</value>
  </data>
  <data name="smfwizard_exec_name_error" xml:space="preserve">
    <value>* Le nom doit être non nul! *</value>
  </data>
  <data name="smfwizard_exec_timeout" xml:space="preserve">
    <value>Entrez le délai d'expiration (secondes) après lequel la méthode d'exécution est supprimée</value>
  </data>
  <data name="smfwizard_exec_timeout_error" xml:space="preserve">
    <value>* Le délai d'attente doit être un entier! *</value>
  </data>
  <data name="smfwizard_exec_exec" xml:space="preserve">
    <value>Entrez le chemin pour exécuter la méthode plus les arguments</value>
  </data>
  <data name="smfwizard_exec_exec_error" xml:space="preserve">
    <value>* La méthode d'exécution doit être non nulle! *</value>
  </data>
  <data name="smfwizard_exec_user" xml:space="preserve">
    <value>Spécifiez un remplacement par l'utilisateur de l'environnement de méthode par défaut</value>
  </data>
  <data name="smfwizard_exec_user_error" xml:space="preserve">
    <value>*Utilisateur invalide!*</value>
  </data>
  <data name="smfwizard_exec_group" xml:space="preserve">
    <value>Spécifiez une substitution au groupe d'environnement de méthode par défaut</value>
  </data>
  <data name="smfwizard_exec_group_error" xml:space="preserve">
    <value>* Groupe invalide! *</value>
  </data>
  <data name="smfwizard_exec_privileges" xml:space="preserve">
    <value>Spécifiez un remplacement des privilèges d'environnement de méthode par défaut</value>
  </data>
  <data name="smfwizard_exec_privileges_error" xml:space="preserve">
    <value>* Privilèges non valides! *</value>
  </data>
  <data name="smfwizard_property_group_heading" xml:space="preserve">
    <value>Entrez les détails du groupe de propriétés</value>
  </data>
  <data name="smfwizard_property_group_description" xml:space="preserve">
    <value>Dans smf, toutes les informations de service, les dépendances, les méthodes d'exécution, etc. sont stockées en tant que propriétés dans les groupes de propriétés. En outre, les services peuvent avoir besoin de spécifier d'autres propriétés, par exemple Les services inetd doivent spécifier les propriétés que le redémarreur délégué inetd comprend et dont il a besoin. Les services peuvent également stocker leurs propres données d'application dans des propriétés. Voir: smf (5).</value>
  </data>
  <data name="smfwizard_property_group_name" xml:space="preserve">
    <value>Spécifiez le nom du groupe de propriétés</value>
  </data>
  <data name="smfwizard_property_group_name_error" xml:space="preserve">
    <value>* Le nom doit être non nul! *</value>
  </data>
  <data name="smfwizard_property_group_type" xml:space="preserve">
    <value>Spécifiez le type de groupe de propriétés</value>
  </data>
  <data name="smfwizard_property_group_type_error" xml:space="preserve">
    <value>* Le type doit être non nul! *</value>
  </data>
  <data name="smfwizard_property_group_stability" xml:space="preserve">
    <value>Sélectionnez la valeur de stabilité de property_group</value>
  </data>
  <data name="smfwizard_property_group_stability_error" xml:space="preserve">
    <value>* La stabilité doit être non nulle! *</value>
  </data>
  <data name="smfwizard_property_heading" xml:space="preserve">
    <value>Entrez les détails de la propriété</value>
  </data>
  <data name="smfwizard_property_description" xml:space="preserve">
    <value>Les propriétés sont associées à des groupes de propriétés et utilisées pour stocker des informations pertinentes pour le service ou l'instance. Voir: smf (5).</value>
  </data>
  <data name="smfwizard_pgroup_name" xml:space="preserve">
    <value>Sélectionner un groupe de propriétés</value>
  </data>
  <data name="mfwizard_pgroup_name_error" xml:space="preserve">
    <value>* Le groupe de propriétés doit être non nul! *</value>
  </data>
  <data name="smfwizard_property_name" xml:space="preserve">
    <value>Entrez le nom de la propriété</value>
  </data>
  <data name="smfwizard_property_name_error" xml:space="preserve">
    <value>* Le nom doit être non nul! *</value>
  </data>
  <data name="smfwizard_property_type" xml:space="preserve">
    <value>Sélectionnez le type de propriété</value>
  </data>
  <data name="smfwizard_property_type_error" xml:space="preserve">
    <value>* Le type doit être non nul! *</value>
  </data>
  <data name="smfwizard_property_value" xml:space="preserve">
    <value>Entrez la valeur de la propriété</value>
  </data>
  <data name="smfwizard_property_value_error" xml:space="preserve">
    <value>*Valeur invalide!*</value>
  </data>
  <data name="smfwizard_template_heading" xml:space="preserve">
    <value>Entrez les détails du modèle</value>
  </data>
  <data name="smfwizard_template_description" xml:space="preserve">
    <value>Fournissez les détails du service, son nom couramment utilisé et une description de ce que fait le service.</value>
  </data>
  <data name="smfwizard_template_common_name" xml:space="preserve">
    <value>Spécifiez le nom commun du service</value>
  </data>
  <data name="smfwizard_template_common_name_error" xml:space="preserve">
    <value>* Le nom commun doit être non nul! *</value>
  </data>
  <data name="smfwizard_template_svc_description" xml:space="preserve">
    <value>Décrivez le service</value>
  </data>
  <data name="smfwizard_template_svc_description_error" xml:space="preserve">
    <value>* La description doit être non nulle! *</value>
  </data>
  <data name="smfwizard_manpage_heading" xml:space="preserve">
    <value>Entrez les détails de ManPage</value>
  </data>
  <data name="smfwizard_manpage_description" xml:space="preserve">
    <value>Fournissez des informations concernant la documentation de la page de manuel pour le service. Voir: homme (1).</value>
  </data>
  <data name="smfwizard_manpage_title" xml:space="preserve">
    <value>Spécifiez le titre de la page de manuel</value>
  </data>
  <data name="smfwizard_manpage_title_error" xml:space="preserve">
    <value>* Le titre doit être non nul! *</value>
  </data>
  <data name="smfwizard_manpage_section" xml:space="preserve">
    <value>Spécifiez la section de la page de manuel</value>
  </data>
  <data name="smfwizard_manpage_section_error" xml:space="preserve">
    <value>* La section doit être non nulle! *</value>
  </data>
  <data name="smfwizard_manpage_manpath" xml:space="preserve">
    <value>Spécifiez le chemin d'accès</value>
  </data>
  <data name="smfwizard_manpage_manpath_error" xml:space="preserve">
    <value>* Manpath doit être non nul! *</value>
  </data>
</root>