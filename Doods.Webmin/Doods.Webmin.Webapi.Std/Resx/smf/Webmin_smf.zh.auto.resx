<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cmds_run" xml:space="preserve">
    <value>在生成此页面时运行的命令</value>
  </data>
  <data name="whats_this_title" xml:space="preserve">
    <value>这是什么？</value>
  </data>
  <data name="state_enable" xml:space="preserve">
    <value>启用</value>
  </data>
  <data name="state_disable" xml:space="preserve">
    <value>禁用</value>
  </data>
  <data name="state_refresh" xml:space="preserve">
    <value>刷新</value>
  </data>
  <data name="state_restart" xml:space="preserve">
    <value>重新开始</value>
  </data>
  <data name="state_maintenance" xml:space="preserve">
    <value>保养</value>
  </data>
  <data name="state_degraded" xml:space="preserve">
    <value>降级</value>
  </data>
  <data name="state_clear" xml:space="preserve">
    <value>明确</value>
  </data>
  <data name="index_title" xml:space="preserve">
    <value>服务管理设施</value>
  </data>
  <data name="index_detail" xml:space="preserve">
    <value>SMF服务清单</value>
  </data>
  <data name="index_svc_type" xml:space="preserve">
    <value>选择服务类型</value>
  </data>
  <data name="index_extraopts" xml:space="preserve">
    <value>添加其他选项以查看</value>
  </data>
  <data name="index_include_disabled" xml:space="preserve">
    <value>包括残疾人服务？</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>适用于检查项目</value>
  </data>
  <data name="index_sort_by" xml:space="preserve">
    <value>排序方式</value>
  </data>
  <data name="index_create_new_service" xml:space="preserve">
    <value>创建新服务</value>
  </data>
  <data name="index_search_instance" xml:space="preserve">
    <value>搜索服务</value>
  </data>
  <data name="index_select" xml:space="preserve">
    <value>选择</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="index_Select" xml:space="preserve">
    <value>选择</value>
  </data>
  <data name="index_FMRI" xml:space="preserve">
    <value>功能磁共振成像</value>
  </data>
  <data name="index_INST" xml:space="preserve">
    <value>研究所</value>
  </data>
  <data name="index_STATE" xml:space="preserve">
    <value>州</value>
  </data>
  <data name="index_DESC" xml:space="preserve">
    <value>数据中心</value>
  </data>
  <data name="index_NSTATE" xml:space="preserve">
    <value>国家</value>
  </data>
  <data name="index_SCOPE" xml:space="preserve">
    <value>范围</value>
  </data>
  <data name="index_STIME" xml:space="preserve">
    <value>时光</value>
  </data>
  <data name="index_deleteconfirm" xml:space="preserve">
    <value>您确定要永久删除所选服务吗？</value>
  </data>
  <data name="search_instance_title" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="search_instance_detail" xml:space="preserve">
    <value>搜索/浏览服务实例</value>
  </data>
  <data name="search_instance_go" xml:space="preserve">
    <value>走！</value>
  </data>
  <data name="search_instance_browse" xml:space="preserve">
    <value>浏览服务</value>
  </data>
  <data name="search_instance_noresults" xml:space="preserve">
    <value>这个搜寻没有结果！</value>
  </data>
  <data name="instance_viewer_title" xml:space="preserve">
    <value>实例信息</value>
  </data>
  <data name="instance_viewer_detail" xml:space="preserve">
    <value>实例详细信息</value>
  </data>
  <data name="instance_viewer_goto_pgroup_editor" xml:space="preserve">
    <value>查看/编辑属性组/属性</value>
  </data>
  <data name="instance_viewer_goto_dep_viewer" xml:space="preserve">
    <value>查看依赖关系/从属树</value>
  </data>
  <data name="dep_viewer_title" xml:space="preserve">
    <value>家属/家属</value>
  </data>
  <data name="dep_viewer_detail" xml:space="preserve">
    <value>实例的依赖关系/从属树</value>
  </data>
  <data name="dep_viewer_apply" xml:space="preserve">
    <value>适用于检查项目</value>
  </data>
  <data name="dep_viewer_depy_info" xml:space="preserve">
    <value>依赖树</value>
  </data>
  <data name="dep_viewer_dept_info" xml:space="preserve">
    <value>依赖树</value>
  </data>
  <data name="dep_viewer_back" xml:space="preserve">
    <value>实例查看器</value>
  </data>
  <data name="state_editor_title" xml:space="preserve">
    <value>服务状态信息</value>
  </data>
  <data name="state_editor_detail" xml:space="preserve">
    <value>实例状态详细信息</value>
  </data>
  <data name="state_editor_stateinfo" xml:space="preserve">
    <value>实例状态信息</value>
  </data>
  <data name="state_editor_apply" xml:space="preserve">
    <value>适用于检查项目</value>
  </data>
  <data name="state_editor_depy_info" xml:space="preserve">
    <value>依赖信息</value>
  </data>
  <data name="state_editor_dept_info" xml:space="preserve">
    <value>相关资料</value>
  </data>
  <data name="log_viewer_title" xml:space="preserve">
    <value>日志文件查看器</value>
  </data>
  <data name="log_viewer_detail" xml:space="preserve">
    <value>查看（结束）日志文件</value>
  </data>
  <data name="log_viewer_show_last" xml:space="preserve">
    <value>显示最后</value>
  </data>
  <data name="log_viewer_num_lines" xml:space="preserve">
    <value>行中</value>
  </data>
  <data name="log_viewer_submit" xml:space="preserve">
    <value>更新视图</value>
  </data>
  <data name="property_group_editor_title" xml:space="preserve">
    <value>物业组信息</value>
  </data>
  <data name="property_group_editor_detail" xml:space="preserve">
    <value>服务物业集团</value>
  </data>
  <data name="property_group_editor_addsinst" xml:space="preserve">
    <value>选择服务/实例</value>
  </data>
  <data name="property_group_editor_addname" xml:space="preserve">
    <value>新物业组名称</value>
  </data>
  <data name="property_group_editor_addtype" xml:space="preserve">
    <value>新物业组类型</value>
  </data>
  <data name="property_group_editor_addpg" xml:space="preserve">
    <value>添加新的物业组</value>
  </data>
  <data name="property_group_editor_add" xml:space="preserve">
    <value>加</value>
  </data>
  <data name="property_group_editor_apply" xml:space="preserve">
    <value>适用于检查项目</value>
  </data>
  <data name="property_group_editor_deleteconfirm" xml:space="preserve">
    <value>您确定要永久删除所选的属性组吗？</value>
  </data>
  <data name="property_group_editor_delete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="property_group_editor_select" xml:space="preserve">
    <value>选择</value>
  </data>
  <data name="property_group_editor_sinst" xml:space="preserve">
    <value>服务/实例</value>
  </data>
  <data name="property_group_editor_pgroup_name" xml:space="preserve">
    <value>物业组名称</value>
  </data>
  <data name="property_group_editor_pgroup_type" xml:space="preserve">
    <value>物业组类型</value>
  </data>
  <data name="property_group_editor_back" xml:space="preserve">
    <value>实例查看器</value>
  </data>
  <data name="property_editor_title" xml:space="preserve">
    <value>物业资料</value>
  </data>
  <data name="property_editor_detail" xml:space="preserve">
    <value>服务/属性组的属性</value>
  </data>
  <data name="property_editor_addprop" xml:space="preserve">
    <value>添加新属性</value>
  </data>
  <data name="property_editor_addname" xml:space="preserve">
    <value>新物业名称</value>
  </data>
  <data name="property_editor_addtype" xml:space="preserve">
    <value>新物业类型</value>
  </data>
  <data name="property_editor_addvalue" xml:space="preserve">
    <value>新物业价值</value>
  </data>
  <data name="property_editor_add" xml:space="preserve">
    <value>加</value>
  </data>
  <data name="property_editor_apply" xml:space="preserve">
    <value>适用于检查项目</value>
  </data>
  <data name="property_editor_deleteconfirm" xml:space="preserve">
    <value>您确定要永久删除所选的一个或多个属性吗？</value>
  </data>
  <data name="property_editor_delete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="property_editor_select" xml:space="preserve">
    <value>选择</value>
  </data>
  <data name="property_editor_prop_name" xml:space="preserve">
    <value>物业名称</value>
  </data>
  <data name="property_editor_prop_type" xml:space="preserve">
    <value>财产种类</value>
  </data>
  <data name="property_editor_prop_value" xml:space="preserve">
    <value>适当的价值</value>
  </data>
  <data name="property_editor_update" xml:space="preserve">
    <value>更新资料</value>
  </data>
  <data name="property_editor_back" xml:space="preserve">
    <value>物业集团</value>
  </data>
  <data name="whats_this" xml:space="preserve">
    <value>（这是什么？）</value>
  </data>
  <data name="close_window" xml:space="preserve">
    <value>关闭窗口</value>
  </data>
  <data name="svc_chooser_titlesvc" xml:space="preserve">
    <value>选择服务FMRI</value>
  </data>
  <data name="svc_chooser_titleinst" xml:space="preserve">
    <value>选择服务实例FMRI</value>
  </data>
  <data name="svc_chooser_titleboth" xml:space="preserve">
    <value>选择服务/实例FMRI</value>
  </data>
  <data name="svc_chooser_ok" xml:space="preserve">
    <value>好</value>
  </data>
  <data name="svc_chooser_cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="svc_chooser_fmri" xml:space="preserve">
    <value>服务FMRI树位置 $1</value>
  </data>
  <data name="path_chooser_title" xml:space="preserve">
    <value>选择路径FMRI</value>
  </data>
  <data name="path_chooser_ok" xml:space="preserve">
    <value>好</value>
  </data>
  <data name="path_chooser_cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="path_chooser_path" xml:space="preserve">
    <value>路径FMRI树位置 $1</value>
  </data>
  <data name="editserv_title" xml:space="preserve">
    <value>编辑SMF服务</value>
  </data>
  <data name="editserv_newtitle" xml:space="preserve">
    <value>创建新的SMF服务</value>
  </data>
  <data name="editserv_propviewer" xml:space="preserve">
    <value>创建/查看/修改服务</value>
  </data>
  <data name="editserv_service_detail" xml:space="preserve">
    <value>服务详情</value>
  </data>
  <data name="editserv_bundle_name" xml:space="preserve">
    <value>服务包名称</value>
  </data>
  <data name="editserv_service_name" xml:space="preserve">
    <value>服务名称</value>
  </data>
  <data name="editserv_service_type" xml:space="preserve">
    <value>类型</value>
  </data>
  <data name="editserv_service_version" xml:space="preserve">
    <value>版</value>
  </data>
  <data name="editserv_stability" xml:space="preserve">
    <value>稳定性</value>
  </data>
  <data name="editserv_fmri" xml:space="preserve">
    <value>指定FMRI</value>
  </data>
  <data name="editserv_instance_detail" xml:space="preserve">
    <value>实例详细信息</value>
  </data>
  <data name="editserv_instance_name" xml:space="preserve">
    <value>实例名称</value>
  </data>
  <data name="editserv_instance_enabled" xml:space="preserve">
    <value>已启用？</value>
  </data>
  <data name="editserv_serv_instname" xml:space="preserve">
    <value>选择服务或实例级别</value>
  </data>
  <data name="editserv_restarter_detail" xml:space="preserve">
    <value>重启器详细信息</value>
  </data>
  <data name="editserv_depy_detail" xml:space="preserve">
    <value>依赖项详细信息</value>
  </data>
  <data name="editserv_depy_name" xml:space="preserve">
    <value>依赖名称</value>
  </data>
  <data name="editserv_depy_type" xml:space="preserve">
    <value>依赖类型</value>
  </data>
  <data name="editserv_depy_grouping" xml:space="preserve">
    <value>依赖分组</value>
  </data>
  <data name="editserv_depy_restart_on" xml:space="preserve">
    <value>重新启动价值</value>
  </data>
  <data name="editserv_dept_detail" xml:space="preserve">
    <value>相关细节</value>
  </data>
  <data name="editserv_dept_name" xml:space="preserve">
    <value>相关名称</value>
  </data>
  <data name="editserv_dept_grouping" xml:space="preserve">
    <value>依存分组</value>
  </data>
  <data name="editserv_dept_restart_on" xml:space="preserve">
    <value>重新启动价值</value>
  </data>
  <data name="editserv_exec_detail" xml:space="preserve">
    <value>执行方法详细信息</value>
  </data>
  <data name="editserv_exec_name" xml:space="preserve">
    <value>执行方法名称</value>
  </data>
  <data name="editserv_exec_timeout_seconds" xml:space="preserve">
    <value>超时（秒）</value>
  </data>
  <data name="editserv_exec_exec" xml:space="preserve">
    <value>执行方法路径</value>
  </data>
  <data name="editserv_exec_user" xml:space="preserve">
    <value>用户方法凭证</value>
  </data>
  <data name="editserv_exec_group" xml:space="preserve">
    <value>组方法凭证</value>
  </data>
  <data name="editserv_exec_privileges" xml:space="preserve">
    <value>礼遇</value>
  </data>
  <data name="editserv_pgroup_detail" xml:space="preserve">
    <value>物业组详细信息</value>
  </data>
  <data name="editserv_pgroup_name" xml:space="preserve">
    <value>物业组名称</value>
  </data>
  <data name="editserv_pgroup_type" xml:space="preserve">
    <value>物业组类型</value>
  </data>
  <data name="editserv_sinst_pgroup_name" xml:space="preserve">
    <value>[服务/实例]。[属性组]</value>
  </data>
  <data name="editserv_prop_detail" xml:space="preserve">
    <value>物业资料</value>
  </data>
  <data name="editserv_prop_name" xml:space="preserve">
    <value>物业名称</value>
  </data>
  <data name="editserv_prop_type" xml:space="preserve">
    <value>财产种类</value>
  </data>
  <data name="editserv_prop_value" xml:space="preserve">
    <value>适当的价值</value>
  </data>
  <data name="editserv_template_detail" xml:space="preserve">
    <value>模板详细信息</value>
  </data>
  <data name="editserv_template_common_name" xml:space="preserve">
    <value>通用名</value>
  </data>
  <data name="editserv_template_description" xml:space="preserve">
    <value>描述</value>
  </data>
  <data name="editserv_man_detail" xml:space="preserve">
    <value>联机帮助页详细信息</value>
  </data>
  <data name="editserv_man_title" xml:space="preserve">
    <value>标题</value>
  </data>
  <data name="editserv_man_section" xml:space="preserve">
    <value>部分</value>
  </data>
  <data name="editserv_man_manpath" xml:space="preserve">
    <value>人行道</value>
  </data>
  <data name="editserv_update" xml:space="preserve">
    <value>更新资料</value>
  </data>
  <data name="editserv_new" xml:space="preserve">
    <value>新</value>
  </data>
  <data name="editserv_finish" xml:space="preserve">
    <value>完</value>
  </data>
  <data name="editserv_cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="editserv_add" xml:space="preserve">
    <value>加</value>
  </data>
  <data name="editserv_addnew" xml:space="preserve">
    <value>添新</value>
  </data>
  <data name="editserv_createservice" xml:space="preserve">
    <value>创建服务</value>
  </data>
  <data name="editserv_next" xml:space="preserve">
    <value>下一个</value>
  </data>
  <data name="editserv_continue" xml:space="preserve">
    <value>继续</value>
  </data>
  <data name="editserv_skip" xml:space="preserve">
    <value>跳跃</value>
  </data>
  <data name="editserv_clear" xml:space="preserve">
    <value>明确</value>
  </data>
  <data name="editserv_restarter_fmri" xml:space="preserve">
    <value>重启功能磁共振成像</value>
  </data>
  <data name="editserv_dependency" xml:space="preserve">
    <value>相依性</value>
  </data>
  <data name="editstate_detail" xml:space="preserve">
    <value>编辑服务状态</value>
  </data>
  <data name="editstate_stateinfo" xml:space="preserve">
    <value>实例状态信息</value>
  </data>
  <data name="editstate_depy_detail" xml:space="preserve">
    <value>实例相关性信息</value>
  </data>
  <data name="editstate_dept_detail" xml:space="preserve">
    <value>实例相关信息</value>
  </data>
  <data name="editstate_enable" xml:space="preserve">
    <value>启用</value>
  </data>
  <data name="editstate_disable" xml:space="preserve">
    <value>禁用</value>
  </data>
  <data name="editstate_refresh" xml:space="preserve">
    <value>刷新</value>
  </data>
  <data name="editstate_restart" xml:space="preserve">
    <value>重新开始</value>
  </data>
  <data name="editstate_clear" xml:space="preserve">
    <value>明确</value>
  </data>
  <data name="editstate_maintenance" xml:space="preserve">
    <value>保养</value>
  </data>
  <data name="editstate_degraded" xml:space="preserve">
    <value>降级</value>
  </data>
  <data name="whats_this_stateinfo" xml:space="preserve">
    <value>显示的是与服务实例状态有关的信息，如从svcs命令获得的信息。请参阅：svcs（1）。请参阅：smf（5）。</value>
  </data>
  <data name="whats_this_extraopts" xml:space="preserve">
    <value>检查这些其他选项，如果您想在下面的服务列表中查看它们，请单击“更新视图”。选项的含义可以在svcs手册页中找到。请参阅：svcs（1）。</value>
  </data>
  <data name="whats_this_enabledonly" xml:space="preserve">
    <value>选择是只显示启用的服务，还是希望列表中的所有服务（启用和禁用）。</value>
  </data>
  <data name="whats_this_create_new_service" xml:space="preserve">
    <value>如果要添加新服务，请单击此处。</value>
  </data>
  <data name="whats_this_serviceviewer" xml:space="preserve">
    <value>服务查看器根据svcs命令提供的清单，提供在系统上可用/正在运行的服务及其状态的分类视图。点击特定标签会显示特定于该类别的服务，例如网络持有svc：/ network形式的所有服务。通过检查候选服务实例并单击相关的应用按钮，可以执行多个启用/禁用/刷新/重启/维护/降级/清除/删除操作。可以分别通过单击fmri或实例来编辑单个服务/实例，并且可以通过单击状态来检查单个服务实例的状态。请参阅：svcs（1）。</value>
  </data>
  <data name="whats_this_apply" xml:space="preserve">
    <value>您可以通过检查适当的服务并使用这些按钮来对服务列表中的多个项目进行操作。请参阅：svcadm（1M）。</value>
  </data>
  <data name="whats_this_FMRI" xml:space="preserve">
    <value>FMRI是指定特定服务的通用资源指示符（URI）。在“所有”列表下，显示完整的FMRI，但在特定的服务类别下，例如网络，则不显示网络类别。单击特定的服务FMRI将带您进入服务查看器，您可以在其中立即编辑该服务的属性（请当心！）。请参阅：smf（5）。请参阅：svcs（1）。</value>
  </data>
  <data name="whats_this_INST" xml:space="preserve">
    <value>该实例是与相邻服务FMRI关联的实例名称。给定的服务可能具有多个实例。单击该实例将带您进入服务查看器，但仅允许您更新该实例的属性。如果要更新服务级别和其他实例属性，请单击服务FMRI。请参阅：smf（5）。请参阅：svcs（1）。</value>
  </data>
  <data name="whats_this_STATE" xml:space="preserve">
    <value>特定实例的状态。 smf联机帮助页中描述了各种状态的含义。请参阅：smf（5）。请参阅：svcs（1）。</value>
  </data>
  <data name="whats_this_DESC" xml:space="preserve">
    <value>服务的文字说明。请参阅：smf（5）。请参阅：svcs（1）。</value>
  </data>
  <data name="whats_this_NSTATE" xml:space="preserve">
    <value>服务的下一个状态，在服务转换时有用。 “-”表示它没有转换。请参阅：svcs（1）。</value>
  </data>
  <data name="whats_this_SCOPE" xml:space="preserve">
    <value>服务实例的作用域名称。请参阅：smf（5）。请参阅：svcs（1）。</value>
  </data>
  <data name="whats_this_STIME" xml:space="preserve">
    <value>服务进入当前状态的时间（如果是今天）或日期。请参阅：smf（5）。请参阅：svcs（1）。</value>
  </data>
  <data name="whats_this_Select" xml:space="preserve">
    <value>在此处检查要启用/禁用/刷新等服务的列表。</value>
  </data>
  <data name="whats_this_service_detail" xml:space="preserve">
    <value>在此处指定/编辑顶级服务信息：服务名称，版本号，用于清单和稳定性的捆绑包名称。请参阅：smf（5）。请参阅：svccfg（1M）。请参阅：service_bundle（4）。</value>
  </data>
  <data name="whats_this_bundle_name" xml:space="preserve">
    <value>清单中的服务捆绑包名称。多个服务可以捆绑在一个清单中，但是这里的名称并不重要。对于已经存在的服务，它将设置为导出，因为这是svccfg从SMF存储库导出清单时所做的。请参阅：svccfg（1M）。请参阅：service_bundle（4）。</value>
  </data>
  <data name="whats_this_service_name" xml:space="preserve">
    <value>服务名称。惯例是使用[general_service_category]/[name]格式。已经提供的类别包括应用程序（高级应用程序），里程碑（其他服务的集合，例如名称服务），平台（特定于平台的服务），系统（Solaris系统服务），设备（特定于设备的服务），网络（网络/互联网服务）和站点（站点特定的描述）。当然，您也可以指定自己的类别，但是大多数服务应该可以满足上述条件之一。请参阅：smf（5）。</value>
  </data>
  <data name="whats_this_service_version" xml:space="preserve">
    <value>指定服务的版本号。</value>
  </data>
  <data name="whats_this_instance_detail" xml:space="preserve">
    <value>在此处指定/编辑实例信息：实例名称以及默认情况下是否启用它。请参阅：smf（5）。</value>
  </data>
  <data name="whats_this_instance_name" xml:space="preserve">
    <value>指定实例名称。只有一个实例的服务通常使用default作为实例名称（例如inetd）。允许使用不同配置运行同一二进制文件的多个实例的服务将需要多个实例，例如Chargen inetd服务，它需要在不同端口上运行的基于流和数据报的版本。请参阅：smf（5）。</value>
  </data>
  <data name="whats_this_instance_enabled" xml:space="preserve">
    <value>指定是否要默认启用此服务实例。</value>
  </data>
  <data name="whats_this_serv_instname" xml:space="preserve">
    <value>指定是要在服务级别还是在实例级别更新信息。如果在服务级别和实例级别都存在属性，依赖项等，则将实例级别的值用于该特定实例，否则它将继承服务级别的值。这允许实例从服务级别规范中选择性地继承值，同时能够设置它们可能唯一需要的值。</value>
  </data>
  <data name="whats_this_stability" xml:space="preserve">
    <value>指定稳定性值，-表示不设置。</value>
  </data>
  <data name="whats_this_fmri" xml:space="preserve">
    <value>指定相关的服务/实例FMRI。</value>
  </data>
  <data name="whats_this_restarter_detail" xml:space="preserve">
    <value>默认情况下，服务使用主重新启动器（系统/重新启动器服务）来控制其行为。也可以指定委托的重新启动程序，如inetd。顾名思义，这涉及依赖委托的重新启动器来处理服务的启动/停止，并且在inetd的情况下，这些方法具有不同的名称以区别于基于主重新启动器的服务。请参阅：inetd（1M）。请参阅：svc.startd（1M）。请参阅：smf_restarter（5）。</value>
  </data>
  <data name="whats_this_exec_detail" xml:space="preserve">
    <value>Execute方法是smf服务的核心，您可以在其中指定在启动/停止服务时要运行的程序。使用委托的重新启动器（如inetd）的服务具有自己的启动/停止方法（例如inetd_start，inetd_stop），但使用主重新启动器的服务通常至少指定启动和停止方法。请参阅：svc.startd（1M）。请参阅：smf_method（5）。请参阅：inetd（1M）。</value>
  </data>
  <data name="whats_this_exec_name" xml:space="preserve">
    <value>在此处为此执行方法提供唯一的名称。对于使用主重启器的服务，启动和停止方法是强制性的，并且在启用该服务并满足依赖关系时分别运行；当依赖项脱机时，服务失败，管理员将禁用该服务等。请参阅：smf_method（5）。请参阅：inetd（1M）。</value>
  </data>
  <data name="whats_this_exec_timeout_seconds" xml:space="preserve">
    <value>超过其超时时间的方法将被杀死。对于无界方法，请将超时设置为0。</value>
  </data>
  <data name="whats_this_exec_exec" xml:space="preserve">
    <value>提供执行方法和参数的路径。提供了关键字：kill和：true，可以用作exec方法。前者杀死由服务启动的所有进程，后者简单地将成功返回给重启程序。方法令牌也可以用于将与smf相关的信息传递给该方法。请参阅：smf_method（5）。</value>
  </data>
  <data name="whats_this_exec_user" xml:space="preserve">
    <value>为用户指定默认方法环境值的替代（默认方法环境是从init继承的）。</value>
  </data>
  <data name="whats_this_exec_group" xml:space="preserve">
    <value>为组的默认方法环境值指定替代（默认方法环境是从init继承的）。</value>
  </data>
  <data name="whats_this_exec_privileges" xml:space="preserve">
    <value>指定默认方法环境权限的替代。</value>
  </data>
  <data name="whats_this_depy_detail" xml:space="preserve">
    <value>依赖关系提供了一种方法来指定您的服务在运行之前需要运行（有时不运行）的服务。调用依赖项是SMF的主要优点之一，因为它在非常复杂的初始化脚本等网络上强加了确定性结构。依赖项提供了很多灵活性，因为您可以指定服务将等待特定的依赖项要联机，请等待组中的一个成员（例如，配置了任何名称服务），或者甚至仅在另一个服务未运行时才运行。请参阅：smf（5）。</value>
  </data>
  <data name="whats_this_depy_name" xml:space="preserve">
    <value>在此为此依赖项提供唯一的名称。</value>
  </data>
  <data name="whats_this_depy_type" xml:space="preserve">
    <value>选择依赖项类型（路径或服务）。路径依赖性要求命名文件在位（？）。路径依赖项的有效fmri的示例为file :: // localhost/path2file。服务依赖关系只是识别服务依赖关系的特征。</value>
  </data>
  <data name="whats_this_depy_grouping" xml:space="preserve">
    <value>为您的依赖项选择一个分组值。分组值确定依赖关系的性质。例如，对于require_all，组中的所有依赖项都必须在服务启动之前联机/降级，而对于require_any，则需要组中的任何一个联机/降级。对于optional_all，所有已启用且能够运行的服务必须在线，而对于exclude_all，如果依赖项是在线/降级，则不应运行该服务。</value>
  </data>
  <data name="whats_this_depy_restart_on" xml:space="preserve">
    <value>在此处指定错误传播模型，即我的服务应如何应对依赖项中的错误？值是无（启动后我们不关心依赖项），错误（如果依赖项有故障，则重启），重启（如果依赖项已重启，则重启）和刷新（如果刷新了依赖项，则重启）。</value>
  </data>
  <data name="whats_this_dept_detail" xml:space="preserve">
    <value>依赖关系似乎有点混乱-为什么要有一种机制来指定哪些服务依赖于我的服务，我不能在候选依赖关系中添加依赖关系吗？依赖对象解决了您不拥有依赖清单且无法执行此操作的情况。结果，从属看起来非常像从属，但不是说当前服务依赖于此从属，而是说当前服务是此子服务/从属的从属。请参阅：smf（5）。</value>
  </data>
  <data name="whats_this_dept_name" xml:space="preserve">
    <value>在此为此依赖项提供唯一的名称。</value>
  </data>
  <data name="whats_this_dept_grouping" xml:space="preserve">
    <value>选择一个分组值，该服务将依赖于该分组值。分组值确定依赖关系的性质。例如，对于require_all，指定依赖项的组中的所有服务都需要在依赖项启动之前联机/降级，而对于require_any，则要求该组中的任何服务都必须联机/降级。对于optional_all，所有已启用且能够运行的服务必须在线，而对于exclude_all，如果该服务在线/降级，则从属服务不应运行。</value>
  </data>
  <data name="whats_this_dept_restart_on" xml:space="preserve">
    <value>在此处指定故障传播模型，即该服务应如何将故障传播给其依赖项？值包括：none（依赖于启动后不关心该服务），fault（依赖（如果服务出现故障则依赖于重启）），restart（依赖于服务重启（取决于服务重启））和refresh（依赖于重新启动的服务（取决于服务重启））。</value>
  </data>
  <data name="whats_this_pgroup_detail" xml:space="preserve">
    <value>在smf中，所有服务信息，依赖项，exec方法等都作为属性存储在属性组中。另外，服务可能需要指定其他属性，例如inetd服务需要指定inetd委托重新启动器理解和需要的属性。服务还可以在属性中存储自己的应用程序数据。请参阅：smf（5）。</value>
  </data>
  <data name="whats_this_pgroup_name" xml:space="preserve">
    <value>指定属性组名称。请参阅：smf（5）。</value>
  </data>
  <data name="whats_this_pgroup_type" xml:space="preserve">
    <value>指定属性组类型。请参阅：smf（5）。</value>
  </data>
  <data name="whats_this_sinst_pgroup_name" xml:space="preserve">
    <value>选择适当的服务/实例级别的属性组。这允许在特定于实例的级别和服务级别上创建/更新属性。</value>
  </data>
  <data name="whats_this_prop_detail" xml:space="preserve">
    <value>属性与属性组相关联，并用于存储与服务相关的信息。请参阅：smf（5）。</value>
  </data>
  <data name="whats_this_prop_name" xml:space="preserve">
    <value>指定属性名称。请参阅：smf（5）。</value>
  </data>
  <data name="whats_this_prop_type" xml:space="preserve">
    <value>指定属性类型。有效类型为count，integer，opaque，host，hostname，net_address_v4，net_address_v6，time，astring，ustring，boolean，fmri，uri。请参阅：smf（5）。</value>
  </data>
  <data name="whats_this_prop_value" xml:space="preserve">
    <value>指定属性值。请参阅：smf（5）。</value>
  </data>
  <data name="whats_this_man_detail" xml:space="preserve">
    <value>提供有关手册页服务的信息。请参阅：man（1）。</value>
  </data>
  <data name="whats_this_man_title" xml:space="preserve">
    <value>指定手册页标题。请参阅：man（1）。</value>
  </data>
  <data name="whats_this_man_section" xml:space="preserve">
    <value>指定手册页部分。请参阅：man（1）。</value>
  </data>
  <data name="whats_this_man_manpath" xml:space="preserve">
    <value>指定manpath。请参阅：man（1）。</value>
  </data>
  <data name="whats_this_template_detail" xml:space="preserve">
    <value>提供服务的详细信息，其常用名称以及服务功能的描述。</value>
  </data>
  <data name="whats_this_template_common_name" xml:space="preserve">
    <value>指定服务的通用名称。</value>
  </data>
  <data name="whats_this_template_description" xml:space="preserve">
    <value>描述服务。</value>
  </data>
  <data name="wizard_back" xml:space="preserve">
    <value>背部</value>
  </data>
  <data name="wizard_next" xml:space="preserve">
    <value>下一个</value>
  </data>
  <data name="wizard_add" xml:space="preserve">
    <value>加</value>
  </data>
  <data name="wizard_update" xml:space="preserve">
    <value>更新资料</value>
  </data>
  <data name="wizard_new" xml:space="preserve">
    <value>新</value>
  </data>
  <data name="wizard_remove" xml:space="preserve">
    <value>去掉</value>
  </data>
  <data name="wizard_finish" xml:space="preserve">
    <value>完</value>
  </data>
  <data name="smfwizard_title" xml:space="preserve">
    <value>创建SMF服务</value>
  </data>
  <data name="smfwizard_service_heading" xml:space="preserve">
    <value>输入服务信息</value>
  </data>
  <data name="smfwizard_service_description" xml:space="preserve">
    <value>在此处指定/编辑顶级服务信息。对于服务名称，约定使用格式[general_service_category]/[name]。已经提供的类别包括应用程序（高级应用程序），里程碑（其他服务的集合，例如nameservices），平台（特定于平台的服务），系统（Solaris系统服务），设备（特定于设备的服务），网络（网络）/internet服务）和站点（站点特定说明）。当然，您也可以指定自己的类别，但是大多数服务应该可以满足上述条件之一。还要指定一个整数版本号。请参阅：smf（5）。请参阅：svccfg（1M）。请参阅：service_bundle（4）。</value>
  </data>
  <data name="smfwizard_service_name" xml:space="preserve">
    <value>输入服务名称</value>
  </data>
  <data name="smfwizard_service_name_error" xml:space="preserve">
    <value>*名称不能为空！*</value>
  </data>
  <data name="smfwizard_service_version" xml:space="preserve">
    <value>输入服务版本</value>
  </data>
  <data name="smfwizard_service_version_error" xml:space="preserve">
    <value>*版本必须为正数！*</value>
  </data>
  <data name="smfwizard_instance_heading" xml:space="preserve">
    <value>输入实例信息</value>
  </data>
  <data name="smfwizard_instance_description" xml:space="preserve">
    <value>指定实例名称。只有一个实例的服务通常使用default作为实例名称（例如inetd）。允许使用不同配置运行同一二进制文件的多个实例的服务将需要多个实例，例如Chargen inetd服务，它需要在同一端口上运行的基于流和基于数据报的版本。请参阅：smf（5）。</value>
  </data>
  <data name="smfwizard_instance_name" xml:space="preserve">
    <value>指定实例名称</value>
  </data>
  <data name="smfwizard_instance_name_error" xml:space="preserve">
    <value>*名称不能为空！*</value>
  </data>
  <data name="smfwizard_instance_enabled" xml:space="preserve">
    <value>指定是否要默认启用此服务实例。</value>
  </data>
  <data name="smfwizard_instance_enabled_error" xml:space="preserve">
    <value>*已启用必须为true/false *</value>
  </data>
  <data name="smfwizard_sinst_name" xml:space="preserve">
    <value>选择属性应用于的服务/特定实例</value>
  </data>
  <data name="smfwizard_sinst_error" xml:space="preserve">
    <value>*必须选择服务或实例！*</value>
  </data>
  <data name="smfwizard_restarter_heading" xml:space="preserve">
    <value>输入重启信息</value>
  </data>
  <data name="smfwizard_restarter_description" xml:space="preserve">
    <value>默认情况下，服务使用主重新启动器（系统/重新启动器服务）来控制其行为。也可以指定委托的重新启动程序，如inetd。顾名思义，这涉及依赖委托的重新启动器来处理服务的启动/停止，并且在inetd的情况下，这些方法具有不同的名称以区别于基于主重新启动器的服务。请参阅：inetd（1M）。请参阅：svc.startd（1M）。请参阅：smf_restarter（5）。</value>
  </data>
  <data name="smfwizard_restarter_fmri" xml:space="preserve">
    <value>输入FMRI标识重新启动器</value>
  </data>
  <data name="smfwizard_restarter_fmri_error" xml:space="preserve">
    <value>*不是有效的FMRI！*</value>
  </data>
  <data name="smfwizard_dependency_heading" xml:space="preserve">
    <value>输入依赖性信息</value>
  </data>
  <data name="smfwizard_dependency_description" xml:space="preserve">
    <value>依赖关系提供了一种方法来指定您的服务在运行之前需要运行（有时不运行）的服务。调用依赖项是SMF的主要优势之一，因为它在非常复杂的init脚本等网络上强加了确定性结构。依赖项提供了很多灵活性，因为您可以指定表示服务将等待所有服务的分组依赖项联机（require_all），等待组中的任何成员（require_any），等待所有已启用的成员（optional_all），甚至仅在未启用组的情况下才运行（exclude_all）。还要在此处指定故障传播模型，即我的服务应如何应对依赖关系中的故障？值是无（启动后我们不关心依赖项），错误（如果依赖项有故障，则重启），重启（如果依赖项已重启，则重启）和刷新（如果刷新了依赖项，则重启）。最后，指定用于标识依赖性和稳定性的fmri（可选）。请参阅：smf（5）。</value>
  </data>
  <data name="smfwizard_dependency_name" xml:space="preserve">
    <value>输入依赖项名称</value>
  </data>
  <data name="smfwizard_dependency_name_error" xml:space="preserve">
    <value>*名称不能为空！*</value>
  </data>
  <data name="smfwizard_dependency_type" xml:space="preserve">
    <value>输入依赖性类型</value>
  </data>
  <data name="smfwizard_dependency_type_error" xml:space="preserve">
    <value>*类型必须为非空！*</value>
  </data>
  <data name="smfwizard_dependency_grouping" xml:space="preserve">
    <value>选择依赖项分组</value>
  </data>
  <data name="smfwizard_dependency_grouping_error" xml:space="preserve">
    <value>*分组不得为空！*</value>
  </data>
  <data name="smfwizard_dependency_restart_on" xml:space="preserve">
    <value>选择重启值</value>
  </data>
  <data name="smfwizard_dependency_restart_on_error" xml:space="preserve">
    <value>*重启值不能为空！*</value>
  </data>
  <data name="smfwizard_dependency_fmri" xml:space="preserve">
    <value>输入FMRI识别依赖性</value>
  </data>
  <data name="smfwizard_dependency_fmri_error" xml:space="preserve">
    <value>*不是有效的FMRI！*</value>
  </data>
  <data name="smfwizard_dependency_stability" xml:space="preserve">
    <value>选择依赖项稳定性值</value>
  </data>
  <data name="smfwizard_dependency_stability_error" xml:space="preserve">
    <value>*稳定性不能为空！*</value>
  </data>
  <data name="smfwizard_dependent_heading" xml:space="preserve">
    <value>输入相关信息</value>
  </data>
  <data name="smfwizard_dependent_description" xml:space="preserve">
    <value>依赖关系似乎有点混乱-为什么要有一种机制来指定哪些服务依赖于我的服务，我不能在候选依赖关系中添加依赖关系吗？依赖对象解决了您不拥有依赖清单且无法执行此操作的情况。结果，从属看起来非常像从属，但不是说当前服务依赖于此从属，而是说当前服务是此子服务/从属的从属。像依赖关系一样，我们可以指定分组，restart_on值。对于家属，FMRI当然是指家属（儿童）服务。请参阅：smf（5）。</value>
  </data>
  <data name="smfwizard_dependent_name" xml:space="preserve">
    <value>输入从属名称</value>
  </data>
  <data name="smfwizard_dependent_name_error" xml:space="preserve">
    <value>*名称不能为空！*</value>
  </data>
  <data name="smfwizard_dependent_type" xml:space="preserve">
    <value>输入从属类型</value>
  </data>
  <data name="smfwizard_dependent_type_error" xml:space="preserve">
    <value>*类型必须为非空！*</value>
  </data>
  <data name="smfwizard_dependent_grouping" xml:space="preserve">
    <value>选择相关分组</value>
  </data>
  <data name="smfwizard_dependent_grouping_error" xml:space="preserve">
    <value>*分组不得为空！*</value>
  </data>
  <data name="smfwizard_dependent_restart_on" xml:space="preserve">
    <value>选择重启值</value>
  </data>
  <data name="smfwizard_dependent_restart_on_error" xml:space="preserve">
    <value>*重启值不能为空！*</value>
  </data>
  <data name="smfwizard_dependent_fmri" xml:space="preserve">
    <value>输入FMRI识别依赖</value>
  </data>
  <data name="smfwizard_dependent_fmri_error" xml:space="preserve">
    <value>*不是有效的FMRI！*</value>
  </data>
  <data name="smfwizard_dependent_stability" xml:space="preserve">
    <value>选择相关的稳定性值</value>
  </data>
  <data name="smfwizard_dependent_stability_error" xml:space="preserve">
    <value>*稳定性不能为空！*</value>
  </data>
  <data name="smfwizard_exec_heading" xml:space="preserve">
    <value>输入执行方法信息</value>
  </data>
  <data name="smfwizard_exec_description" xml:space="preserve">
    <value>Execute方法是smf服务的核心，您可以在其中指定在启动/停止服务时要运行的程序。使用委托的重新启动器（如inetd）的服务具有自己的启动/停止方法（inetd_start，inetd_stop）名称，但是使用主重新启动器的服务通常至少指定名为start和stop方法的exec_methods。超过超时值（以秒为单位）的方法将被杀死。对于无界方法，请将超时设置为0。对于exec方法本身，必须提供方法的路径以及参数。提供了关键字：kill和：true，可以用作exec方法。前者杀死由服务启动的所有进程，后者简单地将成功返回给重启程序。方法令牌也可以用于将与smf相关的信息传递给该方法。可以将用户/组/特权的替代指定为默认方法环境（从init继承）。请参阅：smf_method（5）。请参阅：svc.startd（1M）。请参阅：inetd（1M）。</value>
  </data>
  <data name="smfwizard_exec_name" xml:space="preserve">
    <value>输入执行方法名称</value>
  </data>
  <data name="smfwizard_exec_name_error" xml:space="preserve">
    <value>*名称不能为空！*</value>
  </data>
  <data name="smfwizard_exec_timeout" xml:space="preserve">
    <value>输入超时（秒），之后执行方法将被终止</value>
  </data>
  <data name="smfwizard_exec_timeout_error" xml:space="preserve">
    <value>*超时必须是整数！*</value>
  </data>
  <data name="smfwizard_exec_exec" xml:space="preserve">
    <value>输入执行方法和参数的路径</value>
  </data>
  <data name="smfwizard_exec_exec_error" xml:space="preserve">
    <value>*执行方法必须为非null！*</value>
  </data>
  <data name="smfwizard_exec_user" xml:space="preserve">
    <value>指定默认方法环境用户的替代</value>
  </data>
  <data name="smfwizard_exec_user_error" xml:space="preserve">
    <value>*无效的用户！*</value>
  </data>
  <data name="smfwizard_exec_group" xml:space="preserve">
    <value>指定默认方法环境组的替代</value>
  </data>
  <data name="smfwizard_exec_group_error" xml:space="preserve">
    <value>*组无效！*</value>
  </data>
  <data name="smfwizard_exec_privileges" xml:space="preserve">
    <value>指定默认方法环境特权的替代</value>
  </data>
  <data name="smfwizard_exec_privileges_error" xml:space="preserve">
    <value>*无效的权限！*</value>
  </data>
  <data name="smfwizard_property_group_heading" xml:space="preserve">
    <value>输入属性组详细信息</value>
  </data>
  <data name="smfwizard_property_group_description" xml:space="preserve">
    <value>在smf中，所有服务信息，依赖项，exec方法等都作为属性存储在属性组中。另外，服务可能需要指定其他属性，例如inetd服务需要指定inetd委托重新启动器理解和需要的属性。服务还可以在属性中存储自己的应用程序数据。请参阅：smf（5）。</value>
  </data>
  <data name="smfwizard_property_group_name" xml:space="preserve">
    <value>指定属性组名称</value>
  </data>
  <data name="smfwizard_property_group_name_error" xml:space="preserve">
    <value>*名称不能为空！*</value>
  </data>
  <data name="smfwizard_property_group_type" xml:space="preserve">
    <value>指定属性组类型</value>
  </data>
  <data name="smfwizard_property_group_type_error" xml:space="preserve">
    <value>*类型必须为非空！*</value>
  </data>
  <data name="smfwizard_property_group_stability" xml:space="preserve">
    <value>选择property_group稳定性值</value>
  </data>
  <data name="smfwizard_property_group_stability_error" xml:space="preserve">
    <value>*稳定性不能为空！*</value>
  </data>
  <data name="smfwizard_property_heading" xml:space="preserve">
    <value>输入属性详细信息</value>
  </data>
  <data name="smfwizard_property_description" xml:space="preserve">
    <value>属性与属性组关联，用于存储与服务或实例相关的信息。请参阅：smf（5）。</value>
  </data>
  <data name="smfwizard_pgroup_name" xml:space="preserve">
    <value>选择物业组</value>
  </data>
  <data name="mfwizard_pgroup_name_error" xml:space="preserve">
    <value>*属性组不能为空！*</value>
  </data>
  <data name="smfwizard_property_name" xml:space="preserve">
    <value>输入属性名称</value>
  </data>
  <data name="smfwizard_property_name_error" xml:space="preserve">
    <value>*名称不能为空！*</value>
  </data>
  <data name="smfwizard_property_type" xml:space="preserve">
    <value>选择物业类型</value>
  </data>
  <data name="smfwizard_property_type_error" xml:space="preserve">
    <value>*类型必须为非空！*</value>
  </data>
  <data name="smfwizard_property_value" xml:space="preserve">
    <value>输入属性值</value>
  </data>
  <data name="smfwizard_property_value_error" xml:space="preserve">
    <value>*无效值！*</value>
  </data>
  <data name="smfwizard_template_heading" xml:space="preserve">
    <value>输入模板详细信息</value>
  </data>
  <data name="smfwizard_template_description" xml:space="preserve">
    <value>提供服务的详细信息，其常用名称以及服务功能的描述。</value>
  </data>
  <data name="smfwizard_template_common_name" xml:space="preserve">
    <value>指定服务的通用名称</value>
  </data>
  <data name="smfwizard_template_common_name_error" xml:space="preserve">
    <value>*通用名称不能为空！*</value>
  </data>
  <data name="smfwizard_template_svc_description" xml:space="preserve">
    <value>描述服务</value>
  </data>
  <data name="smfwizard_template_svc_description_error" xml:space="preserve">
    <value>*说明不能为空！*</value>
  </data>
  <data name="smfwizard_manpage_heading" xml:space="preserve">
    <value>输入手册页详细信息</value>
  </data>
  <data name="smfwizard_manpage_description" xml:space="preserve">
    <value>提供有关手册页服务的信息。请参阅：man（1）。</value>
  </data>
  <data name="smfwizard_manpage_title" xml:space="preserve">
    <value>指定手册页标题</value>
  </data>
  <data name="smfwizard_manpage_title_error" xml:space="preserve">
    <value>*标题不能为空！*</value>
  </data>
  <data name="smfwizard_manpage_section" xml:space="preserve">
    <value>指定手册页部分</value>
  </data>
  <data name="smfwizard_manpage_section_error" xml:space="preserve">
    <value>*部分不得为空！*</value>
  </data>
  <data name="smfwizard_manpage_manpath" xml:space="preserve">
    <value>指定人路径</value>
  </data>
  <data name="smfwizard_manpage_manpath_error" xml:space="preserve">
    <value>* Manpath必须为非null！*</value>
  </data>
</root>