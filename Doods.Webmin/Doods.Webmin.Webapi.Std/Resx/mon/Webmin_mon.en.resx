<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>MON Service Monitor</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>MON index</value>
  </data>
  <data name="mon_global_title" xml:space="preserve">
    <value>Global Varibles Configuration</value>
  </data>
  <data name="mon_conf_title" xml:space="preserve">
    <value>Basic Configuration</value>
  </data>
  <data name="mon_status_title" xml:space="preserve">
    <value>Operational Status</value>
  </data>
  <data name="hostgroups_title" xml:space="preserve">
    <value>MON Configuration-Hostgroups</value>
  </data>
  <data name="services_title" xml:space="preserve">
    <value>Watchgroups-Service Definitions</value>
  </data>
  <data name="head_hostgroups" xml:space="preserve">
    <value>Hostgroups and Services</value>
  </data>
  <data name="head_groups" xml:space="preserve">
    <value>Hostgroup Name</value>
  </data>
  <data name="head_members" xml:space="preserve">
    <value>Hostgroup Members</value>
  </data>
  <data name="head_services" xml:space="preserve">
    <value>Hostgroup Services to Watch</value>
  </data>
  <data name="head_service" xml:space="preserve">
    <value>Service to watch</value>
  </data>
  <data name="head_param" xml:space="preserve">
    <value>Service Parameters</value>
  </data>
  <data name="head_watch" xml:space="preserve">
    <value>Watch the Group?</value>
  </data>
  <data name="head_monauth" xml:space="preserve">
    <value>Provide Authentication for MONCMD</value>
  </data>
  <data name="head_usr" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="head_pass" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="head_mand" xml:space="preserve">
    <value>( Parameters in "RED COLOR"are Mandatory )</value>
  </data>
  <data name="err_nomon" xml:space="preserve">
    <value>package 'mon' is not installed on the system</value>
  </data>
  <data name="err_nowatch" xml:space="preserve">
    <value>No Watchgroups selected. Select at least one Watchgroup to proceed.</value>
  </data>
  <data name="err_noserv" xml:space="preserve">
    <value>No Services selected for the watchgroup</value>
  </data>
  <data name="err_nomemb" xml:space="preserve">
    <value>No Hosts/Members selected for the watchgroup</value>
  </data>
  <data name="err_monrun" xml:space="preserve">
    <value>MON is not running on the hostmachine. Please start MON.</value>
  </data>
  <data name="stop_err" xml:space="preserve">
    <value>Failed to stop MON</value>
  </data>
  <data name="stop_epid" xml:space="preserve">
    <value>No longer running</value>
  </data>
  <data name="start_err" xml:space="preserve">
    <value>Failed to start MON</value>
  </data>
  <data name="restart_err" xml:space="preserve">
    <value>Failed to restart MON</value>
  </data>
  <data name="restart_epid" xml:space="preserve">
    <value>Failed to get PID</value>
  </data>
  <data name="other" xml:space="preserve">
    <value>Other(space seperated)</value>
  </data>
  <data name="next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="mon_stat" xml:space="preserve">
    <value>MON Status</value>
  </data>
  <data name="mon_off" xml:space="preserve">
    <value>MON Services not Started</value>
  </data>
  <data name="mon_start" xml:space="preserve">
    <value>Start MON Services</value>
  </data>
  <data name="mon_stop" xml:space="preserve">
    <value>Stop MON Services</value>
  </data>
  <data name="mon_restart" xml:space="preserve">
    <value>Restart MON Services</value>
  </data>
  <data name="mon_startdesc" xml:space="preserve">
    <value>Click this button to start the MON server. Until it is started, no configured monitoring will be done.</value>
  </data>
  <data name="mon_stopdesc" xml:space="preserve">
    <value>Click this button to stop the MON server. When stopping, configured monitoring will cease.</value>
  </data>
  <data name="mon_restartdesc" xml:space="preserve">
    <value>Click this button to apply the current MON configuration by restarting the server process.</value>
  </data>
  <data name="line" xml:space="preserve">
    <value>(one on each line)</value>
  </data>
  <data name="save_apply" xml:space="preserve">
    <value>Save and Apply</value>
  </data>
  <data name="watch" xml:space="preserve">
    <value>Watchgroup</value>
  </data>
  <data name="members" xml:space="preserve">
    <value>Members</value>
  </data>
  <data name="def_perargs" xml:space="preserve">
    <value>wd {Sat-Sun}</value>
  </data>
  <data name="def_desc" xml:space="preserve">
    <value>description</value>
  </data>
  <data name="def_inter" xml:space="preserve">
    <value>interval</value>
  </data>
  <data name="def_mon" xml:space="preserve">
    <value>monitor</value>
  </data>
  <data name="def_dep" xml:space="preserve">
    <value>dpend</value>
  </data>
  <data name="def_per" xml:space="preserve">
    <value>period</value>
  </data>
  <data name="def_alert" xml:space="preserve">
    <value>alert</value>
  </data>
  <data name="def_alertevr" xml:space="preserve">
    <value>alertevery</value>
  </data>
  <data name="def_alertaft" xml:space="preserve">
    <value>alertafter</value>
  </data>
  <data name="def_alertstr" xml:space="preserve">
    <value>startupalert</value>
  </data>
  <data name="def_allow" xml:space="preserve">
    <value>allow_empty_group</value>
  </data>
  <data name="def_traptime" xml:space="preserve">
    <value>traptimeout</value>
  </data>
  <data name="def_trapdur" xml:space="preserve">
    <value>trapduration</value>
  </data>
  <data name="def_rand" xml:space="preserve">
    <value>randskew</value>
  </data>
  <data name="def_exclhost" xml:space="preserve">
    <value>exclude_hosts</value>
  </data>
  <data name="def_exclper" xml:space="preserve">
    <value>exclude_period</value>
  </data>
  <data name="groups_title" xml:space="preserve">
    <value>Host Groups</value>
  </data>
  <data name="groups_group" xml:space="preserve">
    <value>Group name</value>
  </data>
  <data name="groups_members" xml:space="preserve">
    <value>Member hosts</value>
  </data>
  <data name="watches_title" xml:space="preserve">
    <value>Watch Lists</value>
  </data>
  <data name="watches_group" xml:space="preserve">
    <value>Watching group</value>
  </data>
  <data name="watches_services" xml:space="preserve">
    <value>Services being watched</value>
  </data>
  <data name="watches_sadd" xml:space="preserve">
    <value>Add service..</value>
  </data>
  <data name="watches_add" xml:space="preserve">
    <value>Add watch list for group :</value>
  </data>
  <data name="watches_return" xml:space="preserve">
    <value>watch lists</value>
  </data>
  <data name="watches_none" xml:space="preserve">
    <value>No watch lists have been defined yet.</value>
  </data>
  <data name="global_title" xml:space="preserve">
    <value>Global Options</value>
  </data>
  <data name="global_header" xml:space="preserve">
    <value>Global MON configuration options</value>
  </data>
  <data name="global_maxprocs" xml:space="preserve">
    <value>Maximum MON processes</value>
  </data>
  <data name="global_histlength" xml:space="preserve">
    <value>Event history length</value>
  </data>
  <data name="global_alertdir" xml:space="preserve">
    <value>Alert programs directory</value>
  </data>
  <data name="global_mondir" xml:space="preserve">
    <value>Monitor programs directory</value>
  </data>
  <data name="global_authtype" xml:space="preserve">
    <value>Authentication type</value>
  </data>
  <data name="global_authtype_" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="global_authtype_getpwnam" xml:space="preserve">
    <value>System calls</value>
  </data>
  <data name="global_authtype_userfile" xml:space="preserve">
    <value>MON users file</value>
  </data>
  <data name="global_authtype_shadow" xml:space="preserve">
    <value>Shadow file</value>
  </data>
  <data name="global_userfile" xml:space="preserve">
    <value>MON user's file</value>
  </data>
  <data name="global_emaxprocs" xml:space="preserve">
    <value>Missing or invalid number of MON processes</value>
  </data>
  <data name="global_ehistlength" xml:space="preserve">
    <value>Missing or invalid event history length</value>
  </data>
  <data name="global_ealertdir" xml:space="preserve">
    <value>Missing or invalid alert programs directory</value>
  </data>
  <data name="global_emondir" xml:space="preserve">
    <value>Missing or invalid monitor programs directory</value>
  </data>
  <data name="global_euserfile" xml:space="preserve">
    <value>Missing MON users file</value>
  </data>
  <data name="watch_title" xml:space="preserve">
    <value>Edit Watch List</value>
  </data>
  <data name="watch_header" xml:space="preserve">
    <value>Host group watch details</value>
  </data>
  <data name="watch_group" xml:space="preserve">
    <value>Host group to watch</value>
  </data>
  <data name="watch_services" xml:space="preserve">
    <value>Services being watched</value>
  </data>
  <data name="watch_service" xml:space="preserve">
    <value>Service name</value>
  </data>
  <data name="watch_monitor" xml:space="preserve">
    <value>Monitor to use</value>
  </data>
  <data name="watch_interval" xml:space="preserve">
    <value>Check every</value>
  </data>
  <data name="watch_periods" xml:space="preserve">
    <value>Monitoring periods</value>
  </data>
  <data name="service_title" xml:space="preserve">
    <value>Add Service</value>
  </data>
  <data name="service_title2" xml:space="preserve">
    <value>Edit Service</value>
  </data>
  <data name="service_header" xml:space="preserve">
    <value>Watched service details</value>
  </data>
  <data name="service_name" xml:space="preserve">
    <value>Name of service</value>
  </data>
  <data name="service_interval" xml:space="preserve">
    <value>Check every</value>
  </data>
  <data name="service_desc" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="service_units_s" xml:space="preserve">
    <value>seconds</value>
  </data>
  <data name="service_units_m" xml:space="preserve">
    <value>minutes</value>
  </data>
  <data name="service_units_h" xml:space="preserve">
    <value>hours</value>
  </data>
  <data name="service_units_d" xml:space="preserve">
    <value>days</value>
  </data>
  <data name="service_units_w" xml:space="preserve">
    <value>weeks</value>
  </data>
  <data name="service_monitor" xml:space="preserve">
    <value>Using monitor</value>
  </data>
  <data name="service_mon1" xml:space="preserve">
    <value>Standard monitor</value>
  </data>
  <data name="service_mon0" xml:space="preserve">
    <value>Other monitor ..</value>
  </data>
  <data name="service_args" xml:space="preserve">
    <value>Monitor parameters</value>
  </data>
  <data name="service_period" xml:space="preserve">
    <value>Monitoring period $1</value>
  </data>
  <data name="service_days" xml:space="preserve">
    <value>Days to check</value>
  </data>
  <data name="service_hours" xml:space="preserve">
    <value>Hours to check</value>
  </data>
  <data name="service_all" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="service_pstr" xml:space="preserve">
    <value>Period specification</value>
  </data>
  <data name="service_new" xml:space="preserve">
    <value>New monitoring period</value>
  </data>
  <data name="service_alerts" xml:space="preserve">
    <value>Alerts for period</value>
  </data>
  <data name="service_alert" xml:space="preserve">
    <value>Alert</value>
  </data>
  <data name="service_atype" xml:space="preserve">
    <value>Run when</value>
  </data>
  <data name="service_atype_alert" xml:space="preserve">
    <value>Service goes down</value>
  </data>
  <data name="service_atype_upalert" xml:space="preserve">
    <value>Services comes up</value>
  </data>
  <data name="service_atype_startupalert" xml:space="preserve">
    <value>MON starts up</value>
  </data>
  <data name="service_aargs" xml:space="preserve">
    <value>Additional parameters</value>
  </data>
  <data name="service_every" xml:space="preserve">
    <value>Send alert</value>
  </data>
  <data name="service_every_def" xml:space="preserve">
    <value>Every time monitor is run</value>
  </data>
  <data name="service_every_time" xml:space="preserve">
    <value>Every</value>
  </data>
  <data name="service_num" xml:space="preserve">
    <value>Maximum alerts to send</value>
  </data>
  <data name="service_unlimited" xml:space="preserve">
    <value>Unlimited</value>
  </data>
  <data name="service_after" xml:space="preserve">
    <value>Failures before alert</value>
  </data>
  <data name="service_immediate" xml:space="preserve">
    <value>Immediately</value>
  </data>
  <data name="service_after_num" xml:space="preserve">
    <value>After $1 failures</value>
  </data>
  <data name="service_aftertime" xml:space="preserve">
    <value>Within time interval</value>
  </data>
  <data name="service_newperiod" xml:space="preserve">
    <value>Add a new period</value>
  </data>
  <data name="service_delperiod" xml:space="preserve">
    <value>Delete this period</value>
  </data>
  <data name="service_err" xml:space="preserve">
    <value>Failed to save service</value>
  </data>
  <data name="service_ename" xml:space="preserve">
    <value>Missing or invalid service name</value>
  </data>
  <data name="service_einterval" xml:space="preserve">
    <value>Missing or invalid check interval</value>
  </data>
  <data name="service_eother" xml:space="preserve">
    <value>Missing or invalid monitor</value>
  </data>
  <data name="service_ehour" xml:space="preserve">
    <value>Missing or invalid hour for period $1 (must be like 9am or 5pm)</value>
  </data>
  <data name="service_eperiod" xml:space="preserve">
    <value>No days or hours specified for period $1</value>
  </data>
  <data name="service_eevery" xml:space="preserve">
    <value>Missing or invalid service alert interval</value>
  </data>
  <data name="service_eafter" xml:space="preserve">
    <value>Missing or invalid number of failures before alert</value>
  </data>
  <data name="service_enum" xml:space="preserve">
    <value>Missing or invalid maximum alerts to sent</value>
  </data>
  <data name="service_epstr" xml:space="preserve">
    <value>Missing period specification</value>
  </data>
  <data name="service_known0" xml:space="preserve">
    <value>&lt;tt&gt;Time::Period&lt;/tt&gt; string</value>
  </data>
  <data name="service_known1" xml:space="preserve">
    <value>Specified days and hours</value>
  </data>
  <data name="service_known2" xml:space="preserve">
    <value>Defined period</value>
  </data>
  <data name="status_title" xml:space="preserve">
    <value>MON Status</value>
  </data>
  <data name="users_title" xml:space="preserve">
    <value>MON Users</value>
  </data>
  <data name="users_header" xml:space="preserve">
    <value>Allowed MON users in $1</value>
  </data>
  <data name="users_nousers" xml:space="preserve">
    <value>No MON users have been defined in $1.</value>
  </data>
  <data name="users_add" xml:space="preserve">
    <value>Create a new user.</value>
  </data>
  <data name="users_return" xml:space="preserve">
    <value>MON users list</value>
  </data>
  <data name="user_create" xml:space="preserve">
    <value>Create MON User</value>
  </data>
  <data name="user_edit" xml:space="preserve">
    <value>Edit MON User</value>
  </data>
  <data name="user_header" xml:space="preserve">
    <value>MON user details</value>
  </data>
  <data name="user_user" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="user_pass" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="user_leave" xml:space="preserve">
    <value>Leave unchanged</value>
  </data>
  <data name="user_err" xml:space="preserve">
    <value>Failed to save user</value>
  </data>
  <data name="user_euser" xml:space="preserve">
    <value>Missing or invalid username</value>
  </data>
  <data name="user_esame" xml:space="preserve">
    <value>A user with the same name already exists</value>
  </data>
  <data name="auth_title" xml:space="preserve">
    <value>Client Commands</value>
  </data>
  <data name="auth_desc" xml:space="preserve">
    <value>This page allows you to control which MON commands can be run by which users when using the client programs.</value>
  </data>
  <data name="auth_cmd" xml:space="preserve">
    <value>MON command</value>
  </data>
  <data name="auth_users" xml:space="preserve">
    <value>Allowed users</value>
  </data>
  <data name="auth_none" xml:space="preserve">
    <value>Nobody</value>
  </data>
  <data name="auth_all" xml:space="preserve">
    <value>Everybody</value>
  </data>
  <data name="auth_sel" xml:space="preserve">
    <value>Only users</value>
  </data>
  <data name="auth_err" xml:space="preserve">
    <value>Failed to save client commands</value>
  </data>
  <data name="auth_eusers" xml:space="preserve">
    <value>No users enter for command $1</value>
  </data>
  <data name="periods_title" xml:space="preserve">
    <value>Defined Periods</value>
  </data>
  <data name="periods_period" xml:space="preserve">
    <value>Period name</value>
  </data>
  <data name="periods_times" xml:space="preserve">
    <value>Days and times</value>
  </data>
  <data name="periods_alldays" xml:space="preserve">
    <value>All days</value>
  </data>
  <data name="periods_allhours" xml:space="preserve">
    <value>All hours</value>
  </data>
  <data name="periods_err" xml:space="preserve">
    <value>Failed to save defined periods</value>
  </data>
  <data name="periods_ename" xml:space="preserve">
    <value>'$1' is not a valid period name</value>
  </data>
  <data name="periods_ehour" xml:space="preserve">
    <value>Missing or invalid hour for period $1 (must be like 9am or 5pm)</value>
  </data>
  <data name="show_title" xml:space="preserve">
    <value>Operational Status</value>
  </data>
  <data name="__norefs" xml:space="preserve">
    <value>1</value>
  </data>
</root>