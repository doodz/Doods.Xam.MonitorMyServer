<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>CVS Server</value>
  </data>
  <data name="index_eversion" xml:space="preserve">
    <value>Failed to get the version from CVS command $1. Output was $2.</value>
  </data>
  <data name="index_initdesc" xml:space="preserve">
    <value>Alternately, you can create a new CVS repository under $1 by clicking the button below.</value>
  </data>
  <data name="index_init" xml:space="preserve">
    <value>Initialize Repository</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>CVS version $1</value>
  </data>
  <data name="index_setup" xml:space="preserve">
    <value>Setup CVS Server</value>
  </data>
  <data name="index_setupdesc" xml:space="preserve">
    <value>The CVS server does not appear to be currently setup on your system. Click this button to have it run from $1 so that remote users can access your CVS repository.</value>
  </data>
  <data name="index_act" xml:space="preserve">
    <value>Activate CVS Server</value>
  </data>
  <data name="index_actdesc" xml:space="preserve">
    <value>The CVS server is setup to run from $1 on your system, but not currently active. Click this button if you want to activate it and allow remote users to access your CVS repository.</value>
  </data>
  <data name="index_actdesc2" xml:space="preserve">
    <value>The CVS server is setup to run from $1 on your system for the CVS root $2, but not currently active. Click this button if you want to activate it and allow remote users to access your CVS repository.</value>
  </data>
  <data name="index_deact" xml:space="preserve">
    <value>Deactivate CVS Server</value>
  </data>
  <data name="index_deactdesc" xml:space="preserve">
    <value>The CVS server is setup to run from $1 on your system, and is active. Click this button if you want to deactivate it and prevent remote users from accessing your CVS repository.</value>
  </data>
  <data name="index_deactdesc2" xml:space="preserve">
    <value>The CVS server is setup to run from $1 on your system for the CVS root $2, and is active. Click this button if you want to deactivate it and prevent remote users from accessing your CVS repository.</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>module index</value>
  </data>
  <data name="index_asuser" xml:space="preserve">
    <value>Run as user:</value>
  </data>
  <data name="index_einetroot" xml:space="preserve">
    <value>Warning! The CVS root set in the module configuration does not match the root for the CVS server. This can be fixed by deactivating and reactivating the CVS server.</value>
  </data>
  <data name="setup_einet" xml:space="preserve">
    <value>Neither &lt;tt&gt;inetd&lt;/tt&gt; or &lt;tt&gt;xinetd&lt;/tt&gt; appear to be installed on your system.</value>
  </data>
  <data name="setup_ecannot" xml:space="preserve">
    <value>You are not allowed to setup the CVS server</value>
  </data>
  <data name="passwd_title" xml:space="preserve">
    <value>CVS Users</value>
  </data>
  <data name="passwd_header" xml:space="preserve">
    <value>CVS server users</value>
  </data>
  <data name="passwd_desc" xml:space="preserve">
    <value>The CVS server will allow the users listed below to login and access the repository. If an unlisted user tries to login, the server may attempt to verify the user's password against the system password file instead, depending on the server configuration.</value>
  </data>
  <data name="passwd_add" xml:space="preserve">
    <value>Add a new CVS user.</value>
  </data>
  <data name="passwd_none" xml:space="preserve">
    <value>No CVS server users have been defined yet.</value>
  </data>
  <data name="passwd_sync" xml:space="preserve">
    <value>The options below configure synchronization between Unix users created through Webmin and CVS users.</value>
  </data>
  <data name="passwd_sync_create" xml:space="preserve">
    <value>Add a new CVS user when a Unix user is added.</value>
  </data>
  <data name="passwd_sync_modify" xml:space="preserve">
    <value>Update a CVS user when the matching Unix user is modified.</value>
  </data>
  <data name="passwd_sync_delete" xml:space="preserve">
    <value>Delete a CVS user when the matching Unix user is deleted.</value>
  </data>
  <data name="passwd_return" xml:space="preserve">
    <value>user list</value>
  </data>
  <data name="passwd_ecannot" xml:space="preserve">
    <value>You are not allowed to manage CVS users</value>
  </data>
  <data name="edit_title1" xml:space="preserve">
    <value>Create CVS User</value>
  </data>
  <data name="edit_title2" xml:space="preserve">
    <value>Edit CVS User</value>
  </data>
  <data name="edit_header" xml:space="preserve">
    <value>CVS user details</value>
  </data>
  <data name="edit_user" xml:space="preserve">
    <value>Login username</value>
  </data>
  <data name="edit_pass" xml:space="preserve">
    <value>Login password</value>
  </data>
  <data name="edit_pass3" xml:space="preserve">
    <value>Copy from unix</value>
  </data>
  <data name="edit_pass2" xml:space="preserve">
    <value>None required</value>
  </data>
  <data name="edit_pass1" xml:space="preserve">
    <value>Leave unchanged</value>
  </data>
  <data name="edit_pass0" xml:space="preserve">
    <value>Set to..</value>
  </data>
  <data name="edit_unix" xml:space="preserve">
    <value>Access files as unix user</value>
  </data>
  <data name="edit_unixdef" xml:space="preserve">
    <value>Same as username</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>Failed to save CVS user</value>
  </data>
  <data name="save_euser" xml:space="preserve">
    <value>Missing or invalid username</value>
  </data>
  <data name="save_eunix" xml:space="preserve">
    <value>Missing or invalid unix user</value>
  </data>
  <data name="save_ecopy" xml:space="preserve">
    <value>Unix user to copy password from does not exist</value>
  </data>
  <data name="save_emd5" xml:space="preserve">
    <value>Unix password to copy is in MD5 format</value>
  </data>
  <data name="access_title" xml:space="preserve">
    <value>User Access Control</value>
  </data>
  <data name="access_header" xml:space="preserve">
    <value>Read-only CVS users</value>
  </data>
  <data name="access_readers1" xml:space="preserve">
    <value>No read-only users</value>
  </data>
  <data name="access_readers0" xml:space="preserve">
    <value>Listed users are read-only ..</value>
  </data>
  <data name="access_writers1" xml:space="preserve">
    <value>All users can write</value>
  </data>
  <data name="access_writers0" xml:space="preserve">
    <value>Only listed users can write ..</value>
  </data>
  <data name="access_desc" xml:space="preserve">
    <value>If a user is in both the readers and writers lists, he will be given read-only access.</value>
  </data>
  <data name="access_err" xml:space="preserve">
    <value>Failed to save user access control</value>
  </data>
  <data name="access_euser" xml:space="preserve">
    <value>User '$1' does not exist</value>
  </data>
  <data name="access_ecannot" xml:space="preserve">
    <value>You are not allowed to edit user access control</value>
  </data>
  <data name="cvsweb_title" xml:space="preserve">
    <value>Browse Repository</value>
  </data>
  <data name="cvsweb_ecmd" xml:space="preserve">
    <value>The CVS command $1 was not found on your system. This command is needed for viewing the CVS repository.</value>
  </data>
  <data name="cvsweb_ecannot" xml:space="preserve">
    <value>You are not allowed to view the CVS repository</value>
  </data>
  <data name="config_title" xml:space="preserve">
    <value>Server Configuration</value>
  </data>
  <data name="config_header" xml:space="preserve">
    <value>Server configuration options</value>
  </data>
  <data name="config_auth" xml:space="preserve">
    <value>Check users against system password file?</value>
  </data>
  <data name="config_top" xml:space="preserve">
    <value>Create top-level CVS directories?</value>
  </data>
  <data name="config_hist" xml:space="preserve">
    <value>Event types to log in history</value>
  </data>
  <data name="config_hist_all" xml:space="preserve">
    <value>All types</value>
  </data>
  <data name="config_hist_sel" xml:space="preserve">
    <value>Selected types ..</value>
  </data>
  <data name="config_hist_F" xml:space="preserve">
    <value>Release</value>
  </data>
  <data name="config_hist_O" xml:space="preserve">
    <value>Checkout</value>
  </data>
  <data name="config_hist_E" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="config_hist_T" xml:space="preserve">
    <value>RTag</value>
  </data>
  <data name="config_hist_C" xml:space="preserve">
    <value>Merge with collisions</value>
  </data>
  <data name="config_hist_G" xml:space="preserve">
    <value>Successful merge</value>
  </data>
  <data name="config_hist_U" xml:space="preserve">
    <value>Working file copied</value>
  </data>
  <data name="config_hist_W" xml:space="preserve">
    <value>Working file deleted</value>
  </data>
  <data name="config_hist_A" xml:space="preserve">
    <value>File added</value>
  </data>
  <data name="config_hist_M" xml:space="preserve">
    <value>File modified</value>
  </data>
  <data name="config_hist_R" xml:space="preserve">
    <value>File removed</value>
  </data>
  <data name="config_lock" xml:space="preserve">
    <value>Lock files directory</value>
  </data>
  <data name="config_err" xml:space="preserve">
    <value>Failed to save server configuration</value>
  </data>
  <data name="config_elock" xml:space="preserve">
    <value>Missing or invalid lock files directory</value>
  </data>
  <data name="config_ecannot" xml:space="preserve">
    <value>You are not allowed to edit the server configuration</value>
  </data>
  <data name="log_setup" xml:space="preserve">
    <value>Setup CVS server</value>
  </data>
  <data name="log_activate" xml:space="preserve">
    <value>Activated CVS server</value>
  </data>
  <data name="log_deactivate" xml:space="preserve">
    <value>Deactivated CVS server</value>
  </data>
  <data name="log_create_user" xml:space="preserve">
    <value>Created user $1</value>
  </data>
  <data name="log_delete_user" xml:space="preserve">
    <value>Deleted user $1</value>
  </data>
  <data name="log_modify_user" xml:space="preserve">
    <value>Modified user $1</value>
  </data>
  <data name="log_access" xml:space="preserve">
    <value>Changed user access control</value>
  </data>
  <data name="log_config" xml:space="preserve">
    <value>Changed server configuration</value>
  </data>
  <data name="acl_passwd" xml:space="preserve">
    <value>Can manage CVS users?</value>
  </data>
  <data name="acl_access" xml:space="preserve">
    <value>Can edit user access control?</value>
  </data>
  <data name="acl_config" xml:space="preserve">
    <value>Can edit server configuration?</value>
  </data>
  <data name="acl_cvsweb" xml:space="preserve">
    <value>Can view CVS repository?</value>
  </data>
  <data name="acl_setup" xml:space="preserve">
    <value>Can setup inetd or xinetd to run CVS server?</value>
  </data>
  <data name="acl_init" xml:space="preserve">
    <value>Can initialized repository?</value>
  </data>
  <data name="init_err" xml:space="preserve">
    <value>Failed to initialize repository</value>
  </data>
  <data name="init_ecannot" xml:space="preserve">
    <value>You are not allowed to initialize a repository</value>
  </data>
  <data name="__norefs" xml:space="preserve">
    <value>1</value>
  </data>
</root>