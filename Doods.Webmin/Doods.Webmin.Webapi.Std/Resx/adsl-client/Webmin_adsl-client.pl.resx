<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Klient ADSL</value>
  </data>
  <data name="index_stop" xml:space="preserve">
    <value>Wyłącz ADSL</value>
  </data>
  <data name="index_stopdesc" xml:space="preserve">
    <value>Twoje połączenie ADSL jest aktywne i posiada adres IP $1. Kliknij ten przycisk, aby jest wyłączyć za pomocą komendy $2.</value>
  </data>
  <data name="index_start" xml:space="preserve">
    <value>Uruchom ADSL</value>
  </data>
  <data name="index_startdesc" xml:space="preserve">
    <value>Twoje połączenie ADSL jest nieaktywne. Kliknij ten przycisk, aby go uruchomić za pomocą komendy $1.</value>
  </data>
  <data name="index_boot" xml:space="preserve">
    <value>Uruchom podczas uruchamiania systemu</value>
  </data>
  <data name="index_bootdesc" xml:space="preserve">
    <value>Opcja ta pozwala zadecydować czy połączenie ADSL powinno być uruchamiane lub nie uruchamiane podczas uruchamiania systemu.</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>indeks modułu</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>RP-PPPoE wersja $1</value>
  </data>
  <data name="index_esetup" xml:space="preserve">
    <value>Plik konfiguracji ADSL Redhat $1 nie istnieje. Jednakże, ten moduł może stworzyć go z prostymi ustawieniami domyślnymi. Wystarczy kliknąć poniższy przycisk.</value>
  </data>
  <data name="index_setup" xml:space="preserve">
    <value>Ustawianie pliku konfiguracyjnego</value>
  </data>
  <data name="index_cancel" xml:space="preserve">
    <value>Anuluj połączenie</value>
  </data>
  <data name="index_canceldesc" xml:space="preserve">
    <value>Klient ADSL próbuje nawiązać połączenie. Kliknij ten przycisk, aby anulować próbę za pomocą komendy $1.</value>
  </data>
  <data name="index_cdemand" xml:space="preserve">
    <value>Anuluj Na-żądanie</value>
  </data>
  <data name="index_cdemanddesc" xml:space="preserve">
    <value>Klient ADSL oczekuje na żądania połączeń. Kliknij ten przycisk aby zatrzymać go za pomocą komendy $1.</value>
  </data>
  <data name="index_header" xml:space="preserve">
    <value>Opcje konfiguracji klienta ADSL</value>
  </data>
  <data name="index_desc" xml:space="preserve">
    <value>Poniższe ustawienia dotyczą nowego połączenia ADSL uruchamianego przez system. Jeśli dokonasz zmian i chcesz aby przyniosły efekt, musisz wyłączyć i zrestartować połączenie.</value>
  </data>
  <data name="index_eth" xml:space="preserve">
    <value>Interface Ethernet</value>
  </data>
  <data name="index_other" xml:space="preserve">
    <value>Inne...</value>
  </data>
  <data name="index_demand" xml:space="preserve">
    <value>Połączyć na żądanie?</value>
  </data>
  <data name="index_timeout" xml:space="preserve">
    <value>Tak, z czasem oczekiwania</value>
  </data>
  <data name="index_secs" xml:space="preserve">
    <value>sekund</value>
  </data>
  <data name="index_user" xml:space="preserve">
    <value>Zaloguj jako użytkownik</value>
  </data>
  <data name="index_sec" xml:space="preserve">
    <value>Logowanie z hasłem</value>
  </data>
  <data name="index_dns" xml:space="preserve">
    <value>Pobrać konfigurację DNS od ISP?</value>
  </data>
  <data name="index_save" xml:space="preserve">
    <value>Zapisz konfigurację</value>
  </data>
  <data name="index_mss" xml:space="preserve">
    <value>Ograniczyć rozmiar pakietu?</value>
  </data>
  <data name="index_psize" xml:space="preserve">
    <value>Tak, do</value>
  </data>
  <data name="index_bytes" xml:space="preserve">
    <value>bajtów</value>
  </data>
  <data name="index_fw" xml:space="preserve">
    <value>Firewall do uruchomienia na połączeniu</value>
  </data>
  <data name="index_fw_none" xml:space="preserve">
    <value>Brak</value>
  </data>
  <data name="index_fw_standalone" xml:space="preserve">
    <value>Dla pojedynczego hosta</value>
  </data>
  <data name="index_fw_masquerade" xml:space="preserve">
    <value>Dla bramki NAT</value>
  </data>
  <data name="index_connect" xml:space="preserve">
    <value>Czas potrzebny na próbę połączenia dla</value>
  </data>
  <data name="index_forever" xml:space="preserve">
    <value>Na zawsze</value>
  </data>
  <data name="start_err" xml:space="preserve">
    <value>Błąd uruchamiania połączenia ADSL</value>
  </data>
  <data name="start_title" xml:space="preserve">
    <value>Uruchom ADSL</value>
  </data>
  <data name="start_ip" xml:space="preserve">
    <value>Połączenie ADSL zostało uruchomione z adresem IP $1.</value>
  </data>
  <data name="start_demand" xml:space="preserve">
    <value>Ponieważ tryb połączenia na żądanie jest aktyny, połączenie ADSL będzie uruchamiane tylko wtedy, gdy będzie potrzebne.</value>
  </data>
  <data name="start_bg" xml:space="preserve">
    <value>Połączenie ADSL nie zostało uruchomione w ciągu 20 sekund. Klient ADSL będzie kontynuować próby połączenie w tle.</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>Błąd zapisywania konfiguracji ADSL</value>
  </data>
  <data name="save_eeth" xml:space="preserve">
    <value>Brakujący lub nieprawidłowy interfejs ethernetowy</value>
  </data>
  <data name="save_etimeout" xml:space="preserve">
    <value>Brakujący lub nieprawidłowy czas oczekiwania na połączenie na żądanie</value>
  </data>
  <data name="save_euser" xml:space="preserve">
    <value>Brakująca lub nieprawidłowa nazwa użytkownika</value>
  </data>
  <data name="save_econnect" xml:space="preserve">
    <value>Brakujący lub nieprawidłowy czas oczekiwania na połączenie</value>
  </data>
  <data name="save_emss" xml:space="preserve">
    <value>Brakujący lub nieprawidłowy maksymalny rozmiar pakietu</value>
  </data>
  <data name="save_title" xml:space="preserve">
    <value>Zapisz konfigurację</value>
  </data>
  <data name="save_desc" xml:space="preserve">
    <value>Konfiguracja twojego klienta ADSL została prawidłowo zapisana, ale nie będzie aktywna dopóki ponownie nie uruchomisz połączenia.</value>
  </data>
  <data name="stop_err" xml:space="preserve">
    <value>Błąd zamykania połączenia ADSL</value>
  </data>
  <data name="stop_title" xml:space="preserve">
    <value>Zamknij ADSL</value>
  </data>
  <data name="stop_ok" xml:space="preserve">
    <value>Połączenie ADSL zostało poprawnie zamknięte.</value>
  </data>
  <data name="stop_failed" xml:space="preserve">
    <value>Połączenie ADSL jest wciąż aktywne!</value>
  </data>
  <data name="log_save" xml:space="preserve">
    <value>Zapisano konfigurację klienta</value>
  </data>
  <data name="log_stop" xml:space="preserve">
    <value>Wyłączono ADSL</value>
  </data>
  <data name="log_start" xml:space="preserve">
    <value>Uruchomiono ADSL</value>
  </data>
  <data name="log_bootup" xml:space="preserve">
    <value>Włączony ADSL przy starcie systemu</value>
  </data>
  <data name="log_bootdown" xml:space="preserve">
    <value>Wyłączony ADSL przy starcie systemu</value>
  </data>
  <data name="log_setup" xml:space="preserve">
    <value>Ustaw domyślną konfigurację</value>
  </data>
</root>