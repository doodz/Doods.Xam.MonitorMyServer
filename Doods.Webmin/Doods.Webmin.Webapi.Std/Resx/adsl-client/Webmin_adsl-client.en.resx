<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>ADSL Client</value>
  </data>
  <data name="index_stop" xml:space="preserve">
    <value>Shut down ADSL</value>
  </data>
  <data name="index_stopdesc" xml:space="preserve">
    <value>Your ADSL connection is currently active with IP address $1. Click this button to shut it down with the command $2.</value>
  </data>
  <data name="index_start" xml:space="preserve">
    <value>Start up ADSL</value>
  </data>
  <data name="index_startdesc" xml:space="preserve">
    <value>Your ADSL connection is currently inactive. Click this button to start it up with the command $1.</value>
  </data>
  <data name="index_boot" xml:space="preserve">
    <value>Start at boot time</value>
  </data>
  <data name="index_bootdesc" xml:space="preserve">
    <value>Change this option to control whether your ADSL connection is brought up at boot time or not.</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>module index</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>RP-PPPoE version $1</value>
  </data>
  <data name="index_esetup" xml:space="preserve">
    <value>The Redhat ADSL configuration file $1 does not exist on your system. However, this module can set it up for you with basic defaults by clicking the button below.</value>
  </data>
  <data name="index_setup" xml:space="preserve">
    <value>Setup configuration file</value>
  </data>
  <data name="index_cancel" xml:space="preserve">
    <value>Cancel Connection</value>
  </data>
  <data name="index_canceldesc" xml:space="preserve">
    <value>The ADSL client is currently trying to establish a connection. Click this button to cancel the attempt with the command $1.</value>
  </data>
  <data name="index_cdemand" xml:space="preserve">
    <value>Cancel On-Demand</value>
  </data>
  <data name="index_cdemanddesc" xml:space="preserve">
    <value>The ADSL client is currently waiting for an on-demand connection request. Click this button to stop it with the comnmand $1.</value>
  </data>
  <data name="index_header" xml:space="preserve">
    <value>ADSL client configuration options</value>
  </data>
  <data name="index_desc" xml:space="preserve">
    <value>The settings below apply to any new ADSL connection started by your system. If you change them, the connection must be shut down and re-started for the modifications to take effect.</value>
  </data>
  <data name="index_eth" xml:space="preserve">
    <value>Ethernet interface</value>
  </data>
  <data name="index_other" xml:space="preserve">
    <value>Other..</value>
  </data>
  <data name="index_demand" xml:space="preserve">
    <value>Connect on demand?</value>
  </data>
  <data name="index_timeout" xml:space="preserve">
    <value>Yes, with timeout</value>
  </data>
  <data name="index_secs" xml:space="preserve">
    <value>seconds</value>
  </data>
  <data name="index_user" xml:space="preserve">
    <value>Login as user</value>
  </data>
  <data name="index_sec" xml:space="preserve">
    <value>Login with password</value>
  </data>
  <data name="index_dns" xml:space="preserve">
    <value>Get DNS configuration from ISP?</value>
  </data>
  <data name="index_save" xml:space="preserve">
    <value>Save configuration</value>
  </data>
  <data name="index_mss" xml:space="preserve">
    <value>Limit packet size?</value>
  </data>
  <data name="index_psize" xml:space="preserve">
    <value>Yes, to</value>
  </data>
  <data name="index_bytes" xml:space="preserve">
    <value>bytes</value>
  </data>
  <data name="index_fw" xml:space="preserve">
    <value>Firewall to activate on connection</value>
  </data>
  <data name="index_fw_none" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="index_fw_standalone" xml:space="preserve">
    <value>For single host</value>
  </data>
  <data name="index_fw_masquerade" xml:space="preserve">
    <value>For NAT gateway</value>
  </data>
  <data name="index_connect" xml:space="preserve">
    <value>Time to attempt connection for</value>
  </data>
  <data name="index_forever" xml:space="preserve">
    <value>Forever</value>
  </data>
  <data name="start_err" xml:space="preserve">
    <value>Failed to start ADSL connection</value>
  </data>
  <data name="start_title" xml:space="preserve">
    <value>Start up ADSL</value>
  </data>
  <data name="start_ip" xml:space="preserve">
    <value>An ADSL connection has been established with IP address $1.</value>
  </data>
  <data name="start_demand" xml:space="preserve">
    <value>Because connect on demand mode is enabled, your ADSL connection will only be started when needed.</value>
  </data>
  <data name="start_bg" xml:space="preserve">
    <value>The ADSL connection was not started within 20 seconds. The ADSL client will continue trying to connect in the background until successful.</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>Failed to save ADSL configuration</value>
  </data>
  <data name="save_eeth" xml:space="preserve">
    <value>Missing or invalid-looking ethernet interface</value>
  </data>
  <data name="save_etimeout" xml:space="preserve">
    <value>Missing or invalid on-demand timeout</value>
  </data>
  <data name="save_euser" xml:space="preserve">
    <value>Missing or invalid username</value>
  </data>
  <data name="save_econnect" xml:space="preserve">
    <value>Missing or invalid connection timeout</value>
  </data>
  <data name="save_emss" xml:space="preserve">
    <value>Missing or invalid maximum packet size</value>
  </data>
  <data name="save_title" xml:space="preserve">
    <value>Save Configuration</value>
  </data>
  <data name="save_desc" xml:space="preserve">
    <value>Your ADSL client configuration has been successfully saved, but will not be used until you re-connect.</value>
  </data>
  <data name="stop_err" xml:space="preserve">
    <value>Failed to shut down ADSL connection</value>
  </data>
  <data name="stop_title" xml:space="preserve">
    <value>Shut Down ADSL</value>
  </data>
  <data name="stop_ok" xml:space="preserve">
    <value>Your ADSL connection was successfully shut down.</value>
  </data>
  <data name="stop_failed" xml:space="preserve">
    <value>Your ADSL connection is still active for some reason!</value>
  </data>
  <data name="log_save" xml:space="preserve">
    <value>Saved client configuration</value>
  </data>
  <data name="log_stop" xml:space="preserve">
    <value>Shut down ADSL</value>
  </data>
  <data name="log_start" xml:space="preserve">
    <value>Started up ADSL</value>
  </data>
  <data name="log_bootup" xml:space="preserve">
    <value>Enabled ADSL at boot time</value>
  </data>
  <data name="log_bootdown" xml:space="preserve">
    <value>Disabled ADSL at boot time</value>
  </data>
  <data name="log_setup" xml:space="preserve">
    <value>Set up default configuration</value>
  </data>
  <data name="__norefs" xml:space="preserve">
    <value>1</value>
  </data>
</root>