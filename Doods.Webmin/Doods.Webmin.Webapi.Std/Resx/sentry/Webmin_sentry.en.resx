<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Security Sentries</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>module menu</value>
  </data>
  <data name="portsentry_title" xml:space="preserve">
    <value>Portsentry Configuration</value>
  </data>
  <data name="portsentry_below" xml:space="preserve">
    <value>(Port scan detection)</value>
  </data>
  <data name="portsentry_eversion2" xml:space="preserve">
    <value>The version of Portsentry installed on your system is $2, but Webmin only supports version 1 in this release.</value>
  </data>
  <data name="portsentry_version" xml:space="preserve">
    <value>Portsentry version $1</value>
  </data>
  <data name="portsentry_header" xml:space="preserve">
    <value>Port scan detection options</value>
  </data>
  <data name="portsentry_tmode" xml:space="preserve">
    <value>TCP ports to monitor</value>
  </data>
  <data name="portsentry_mode0" xml:space="preserve">
    <value>For basic mode, listed ports</value>
  </data>
  <data name="portsentry_mode1" xml:space="preserve">
    <value>For advanced mode, all ports below $1 except $2</value>
  </data>
  <data name="portsentry_umode" xml:space="preserve">
    <value>UDP ports to monitor</value>
  </data>
  <data name="portsentry_ignore" xml:space="preserve">
    <value>Hosts to ignore traffic from</value>
  </data>
  <data name="portsentry_tblock" xml:space="preserve">
    <value>Block TCP probes</value>
  </data>
  <data name="portsentry_ublock" xml:space="preserve">
    <value>Block UDP probes</value>
  </data>
  <data name="portsentry_trigger" xml:space="preserve">
    <value>Number of connections before triggering blocking</value>
  </data>
  <data name="portsentry_banner" xml:space="preserve">
    <value>Message for blocked connections</value>
  </data>
  <data name="portsentry_kill" xml:space="preserve">
    <value>Run kill command</value>
  </data>
  <data name="portsentry_err" xml:space="preserve">
    <value>Failed to save portsentry options</value>
  </data>
  <data name="portsentry_etports" xml:space="preserve">
    <value>'$1' is not a valid basic mode TCP port</value>
  </data>
  <data name="portsentry_etadv" xml:space="preserve">
    <value>Missing or invalid maximum TCP port for advanced mode</value>
  </data>
  <data name="portsentry_etexc" xml:space="preserve">
    <value>'$1' is not a valid excluded TCP port</value>
  </data>
  <data name="portsentry_euports" xml:space="preserve">
    <value>'$1' is not a valid basic mode UDP port</value>
  </data>
  <data name="portsentry_euadv" xml:space="preserve">
    <value>Missing or invalid maximum UDP port for advanced mode</value>
  </data>
  <data name="portsentry_euexc" xml:space="preserve">
    <value>'$1' is not a valid excluded UDP port</value>
  </data>
  <data name="portsentry_etrigger" xml:space="preserve">
    <value>Missing or invalid number of connections before triggering</value>
  </data>
  <data name="portsentry_eignore" xml:space="preserve">
    <value>'$1' is not a valid hostname or IP addres to ignore</value>
  </data>
  <data name="portsentry_start" xml:space="preserve">
    <value>Start Portsentry Daemons</value>
  </data>
  <data name="portsentry_startdesc" xml:space="preserve">
    <value>Click this button to start the Portsentry daemons with the command $1, using the configuration options above.</value>
  </data>
  <data name="portsentry_stop" xml:space="preserve">
    <value>Stop Portsentry Daemons</value>
  </data>
  <data name="portsentry_stopdesc" xml:space="preserve">
    <value>Click this button to stop the running Portsentry daemons. This will immediately cease all port-scan detection.</value>
  </data>
  <data name="portsentry_apply" xml:space="preserve">
    <value>Apply Configuration</value>
  </data>
  <data name="portsentry_applydesc" xml:space="preserve">
    <value>Click this button to apply the current configuration by stopping the Portsentry daemons and re-starting them with the command $1.</value>
  </data>
  <data name="portsentry_applyerr" xml:space="preserve">
    <value>Failed to apply configuration</value>
  </data>
  <data name="portsentry_stoperr" xml:space="preserve">
    <value>Failed to stop portsentry</value>
  </data>
  <data name="portsentry_ekill" xml:space="preserve">
    <value>Failed to kill processes $1 : $2</value>
  </data>
  <data name="portsentry_estopped" xml:space="preserve">
    <value>No longer running</value>
  </data>
  <data name="portsentry_starterr" xml:space="preserve">
    <value>Failed to start portsentry</value>
  </data>
  <data name="portsentry_save" xml:space="preserve">
    <value>Save and Apply</value>
  </data>
  <data name="hostsentry_title" xml:space="preserve">
    <value>Hostsentry Configuration</value>
  </data>
  <data name="hostsentry_below" xml:space="preserve">
    <value>(Suspicious login detection)</value>
  </data>
  <data name="hostsentry_header" xml:space="preserve">
    <value>Suspicious login detection options</value>
  </data>
  <data name="hostsentry_wtmp" xml:space="preserve">
    <value>Logins record file</value>
  </data>
  <data name="hostsentry_ignore" xml:space="preserve">
    <value>Users to ignore logins by</value>
  </data>
  <data name="hostsentry_mods" xml:space="preserve">
    <value>Hostsentry modules&lt;br&gt;in processing order</value>
  </data>
  <data name="hostsentry_start" xml:space="preserve">
    <value>Start Hostsentry Daemon</value>
  </data>
  <data name="hostsentry_startdesc" xml:space="preserve">
    <value>Click this button to start the Hostsentry daemon with the command $1, using the configuration options above.</value>
  </data>
  <data name="hostsentry_stop" xml:space="preserve">
    <value>Stop Hostsentry Daemon</value>
  </data>
  <data name="hostsentry_stopdesc" xml:space="preserve">
    <value>Click this button to stop the running Hostsentry daemon. This will immediately cease all suspicious login detection.</value>
  </data>
  <data name="hostsentry_apply" xml:space="preserve">
    <value>Apply Configuration</value>
  </data>
  <data name="hostsentry_applydesc" xml:space="preserve">
    <value>Click this button to apply the current configuration by stopping the Hostsentry daemon and re-starting it with the command $1.</value>
  </data>
  <data name="hostsentry_foreign" xml:space="preserve">
    <value>Hosts not to consider foreign</value>
  </data>
  <data name="hostsentry_multiple" xml:space="preserve">
    <value>Hosts to trust multiple logins from</value>
  </data>
  <data name="hostsentry_applyerr" xml:space="preserve">
    <value>Failed to apply configuration</value>
  </data>
  <data name="hostsentry_stoperr" xml:space="preserve">
    <value>Failed to stop hostsentry</value>
  </data>
  <data name="hostsentry_ekill" xml:space="preserve">
    <value>Failed to kill process $1 : $2</value>
  </data>
  <data name="hostsentry_estopped" xml:space="preserve">
    <value>No longer running</value>
  </data>
  <data name="hostsentry_starterr" xml:space="preserve">
    <value>Failed to start hostsentry</value>
  </data>
  <data name="hostsentry_save" xml:space="preserve">
    <value>Save and Apply</value>
  </data>
  <data name="hostsentry_err" xml:space="preserve">
    <value>Failed to save hostsentry configuration</value>
  </data>
  <data name="hostsentry_eignore" xml:space="preserve">
    <value>'$1' is not a valid user to ignore logins by</value>
  </data>
  <data name="hostsentry_emultiple" xml:space="preserve">
    <value>'$1' is not a valid host to ignore multiple logins from</value>
  </data>
  <data name="logcheck_title" xml:space="preserve">
    <value>Logcheck Configuration</value>
  </data>
  <data name="logcheck_eversion" xml:space="preserve">
    <value>The logcheck command $1 is not the version expected by Webmin.</value>
  </data>
  <data name="logcheck_below" xml:space="preserve">
    <value>(Suspicious log analysis)</value>
  </data>
  <data name="logcheck_header" xml:space="preserve">
    <value>Logfile checking options</value>
  </data>
  <data name="logcheck_to" xml:space="preserve">
    <value>Email reports to</value>
  </data>
  <data name="logcheck_hacking" xml:space="preserve">
    <value>Hacking log messages</value>
  </data>
  <data name="logcheck_violations" xml:space="preserve">
    <value>Violation log messages</value>
  </data>
  <data name="logcheck_violations_ign" xml:space="preserve">
    <value>Except for</value>
  </data>
  <data name="logcheck_ignore" xml:space="preserve">
    <value>Ignored log messages</value>
  </data>
  <data name="logcheck_disabled" xml:space="preserve">
    <value>Scheduled log checking disabled</value>
  </data>
  <data name="logcheck_enabled" xml:space="preserve">
    <value>Check logs at selected times..</value>
  </data>
  <data name="logcheck_save" xml:space="preserve">
    <value>Save and Apply</value>
  </data>
  <data name="logcheck_eto" xml:space="preserve">
    <value>Missing or invalid email address</value>
  </data>
  <data name="logcheck_runparts" xml:space="preserve">
    <value>Log checking is run from cron by script $1</value>
  </data>
  <data name="logcheck_files" xml:space="preserve">
    <value>Log files being monitored</value>
  </data>
  <data name="mod_moduleLoginLogout" xml:space="preserve">
    <value>Record logins and logouts</value>
  </data>
  <data name="mod_moduleFirstLogin" xml:space="preserve">
    <value>Detect first login by user</value>
  </data>
  <data name="mod_moduleForeignDomain" xml:space="preserve">
    <value>Detect login from foreign domain</value>
  </data>
  <data name="mod_moduleRhostsCheck" xml:space="preserve">
    <value>Detect unsafe .rhosts file</value>
  </data>
  <data name="mod_moduleHistoryTruncated" xml:space="preserve">
    <value>Detect history file truncation</value>
  </data>
  <data name="mod_moduleOddDirnames" xml:space="preserve">
    <value>Detect odd home directory</value>
  </data>
  <data name="mod_moduleMultipleLogins" xml:space="preserve">
    <value>Detect multiple simultaneous logins</value>
  </data>
  <data name="mod_moduleOddLoginTime" xml:space="preserve">
    <value>Detect odd login time</value>
  </data>
  <data name="mod_moduleInvalidUtmp" xml:space="preserve">
    <value>Detect modified utmp entry</value>
  </data>
  <data name="mod_moduleHistorySuspicious" xml:space="preserve">
    <value>Detect suspicious commands in history</value>
  </data>
  <data name="mod_moduleNetworkDaemon" xml:space="preserve">
    <value>Detect daemon left running</value>
  </data>
  <data name="mod_moduleFileExists" xml:space="preserve">
    <value>Detect suspicious files in home directory</value>
  </data>
  <data name="log_hostsentry" xml:space="preserve">
    <value>Saved hostsentry configuration</value>
  </data>
  <data name="log_portsentry" xml:space="preserve">
    <value>Saved portsentry configuration</value>
  </data>
  <data name="log_logcheck" xml:space="preserve">
    <value>Saved logcheck configuration</value>
  </data>
  <data name="log_hostsentry_start" xml:space="preserve">
    <value>Started hostsentry daemon</value>
  </data>
  <data name="log_hostsentry_stop" xml:space="preserve">
    <value>Stopped hostsentry daemon</value>
  </data>
  <data name="log_portsentry_start" xml:space="preserve">
    <value>Started portsentry daemon</value>
  </data>
  <data name="log_portsentry_stop" xml:space="preserve">
    <value>Stopped portsentry daemon</value>
  </data>
  <data name="__norefs" xml:space="preserve">
    <value>1</value>
  </data>
</root>