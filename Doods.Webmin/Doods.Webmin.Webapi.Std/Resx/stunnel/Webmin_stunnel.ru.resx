<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>SSL-туннели</value>
  </data>
  <data name="index_name" xml:space="preserve">
    <value>Название службы</value>
  </data>
  <data name="index_port" xml:space="preserve">
    <value>Порт TCP</value>
  </data>
  <data name="index_active" xml:space="preserve">
    <value>Включена?</value>
  </data>
  <data name="index_command" xml:space="preserve">
    <value>Команда STunnel</value>
  </data>
  <data name="index_add" xml:space="preserve">
    <value>Добавить новый SSL-туннель.</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>В данный момент ни одного SSL-туннеля не настроено для запуска через &lt;tt&gt;inetd&lt;/tt&gt; или &lt;tt&gt;xinetd&lt;/tt&gt;.</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>Применить изменения</value>
  </data>
  <data name="index_applymsg1" xml:space="preserve">
    <value>Нажатие на эту кнопку активирует текущую конфигурацию SSL-туннеля. Для этого текущим процессам &lt;tt&gt;inetd&lt;/tt&gt; и &lt;tt&gt;xinetd&lt;/tt&gt; будет послан сигнал HUP.</value>
  </data>
  <data name="index_applymsg2" xml:space="preserve">
    <value>Нажатие на эту кнопку активирует текущую конфигурацию SSL-туннеля. Для этого текущему процессу &lt;tt&gt;inetd&lt;/tt&gt; будет послан сигнал HUP.</value>
  </data>
  <data name="index_applymsg3" xml:space="preserve">
    <value>Нажатие на эту кнопку активирует текущую конфигурацию SSL-туннеля. Для этого текущему процессу &lt;tt&gt;xinetd&lt;/tt&gt; будет послан сигнал HUP.</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>списку SSL-туннелей</value>
  </data>
  <data name="index_action" xml:space="preserve">
    <value>Описание туннеля</value>
  </data>
  <data name="index_cmd" xml:space="preserve">
    <value>Выполнить команду $1</value>
  </data>
  <data name="index_remote" xml:space="preserve">
    <value>Соединиться с портом $1</value>
  </data>
  <data name="index_rport" xml:space="preserve">
    <value>Соединиться с портом $1</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>Версия STunnel $1</value>
  </data>
  <data name="edit_title" xml:space="preserve">
    <value>Изменение SSL-туннеля</value>
  </data>
  <data name="create_title" xml:space="preserve">
    <value>Создание SSL-туннеля</value>
  </data>
  <data name="edit_header1" xml:space="preserve">
    <value>Настройка источника туннеля</value>
  </data>
  <data name="edit_name" xml:space="preserve">
    <value>Название службы</value>
  </data>
  <data name="edit_port" xml:space="preserve">
    <value>Порт TCP</value>
  </data>
  <data name="edit_active" xml:space="preserve">
    <value>Включена?</value>
  </data>
  <data name="edit_header2" xml:space="preserve">
    <value>Настройка цели туннеля</value>
  </data>
  <data name="edit_mode0" xml:space="preserve">
    <value>Запустить программу в стиле &lt;tt&gt;inetd&lt;/tt&gt;</value>
  </data>
  <data name="edit_mode1" xml:space="preserve">
    <value>Запустить программу в PTY</value>
  </data>
  <data name="edit_mode2" xml:space="preserve">
    <value>Соединиться с удаленным узлом</value>
  </data>
  <data name="edit_cmd" xml:space="preserve">
    <value>Путь к программе</value>
  </data>
  <data name="edit_args" xml:space="preserve">
    <value>аргументы</value>
  </data>
  <data name="edit_rhost" xml:space="preserve">
    <value>Имя удаленного узла</value>
  </data>
  <data name="edit_rport" xml:space="preserve">
    <value>Удаленный порт</value>
  </data>
  <data name="edit_header3" xml:space="preserve">
    <value>Прочие настройки</value>
  </data>
  <data name="edit_pem" xml:space="preserve">
    <value>Сертификат и файл ключа SSL</value>
  </data>
  <data name="edit_pem0" xml:space="preserve">
    <value>Встроенный по умолчанию</value>
  </data>
  <data name="edit_pem1" xml:space="preserve">
    <value>Сертификат Webmin</value>
  </data>
  <data name="edit_pem2" xml:space="preserve">
    <value>Сертификат из файла</value>
  </data>
  <data name="edit_cmode" xml:space="preserve">
    <value>Режим туннеля</value>
  </data>
  <data name="edit_cmode0" xml:space="preserve">
    <value>Принимать SSL и соединяться обычным образом</value>
  </data>
  <data name="edit_cmode1" xml:space="preserve">
    <value>Принимать обычные и соединяться через SSL</value>
  </data>
  <data name="edit_tcpw" xml:space="preserve">
    <value>Название TCP-wrappers</value>
  </data>
  <data name="edit_auto" xml:space="preserve">
    <value>Автоматически</value>
  </data>
  <data name="edit_iface" xml:space="preserve">
    <value>Исходящий адрес источника</value>
  </data>
  <data name="edit_type" xml:space="preserve">
    <value>Запускать из</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>Не удалось сохранить SSL-туннель</value>
  </data>
  <data name="save_enclash" xml:space="preserve">
    <value>Служба с именем $2 уже используется на порте $1.</value>
  </data>
  <data name="save_einetd" xml:space="preserve">
    <value>Служба inetd с именем $1 уже существует.</value>
  </data>
  <data name="save_ename" xml:space="preserve">
    <value>Имя службы не указано или указано неверно</value>
  </data>
  <data name="save_eport" xml:space="preserve">
    <value>Номер порта не указан или указан неверно</value>
  </data>
  <data name="save_ecmd" xml:space="preserve">
    <value>Запускаемая программа не указана или указана неверно</value>
  </data>
  <data name="save_erhost" xml:space="preserve">
    <value>Неверный адрес удаленного узла</value>
  </data>
  <data name="save_erport" xml:space="preserve">
    <value>Неверный удаленный порт</value>
  </data>
  <data name="save_epclash" xml:space="preserve">
    <value>Порт $1 уже используется службой $2.</value>
  </data>
  <data name="save_epem" xml:space="preserve">
    <value>Файл сертификата SSL $1 не существует</value>
  </data>
  <data name="save_etcpw" xml:space="preserve">
    <value>Имя TCP-wrappers не указано или указано неверно</value>
  </data>
  <data name="save_eiface" xml:space="preserve">
    <value>Исходящий адрес источника не указан или указан неверно</value>
  </data>
  <data name="save_exinetd" xml:space="preserve">
    <value>Служба xinetd с именем $1 уже существует</value>
  </data>
  <data name="save_export" xml:space="preserve">
    <value>Порт $1 уже используется службой xinetd $2</value>
  </data>
  <data name="log_apply" xml:space="preserve">
    <value>Применены изменения</value>
  </data>
  <data name="log_create" xml:space="preserve">
    <value>Создан SSL-туннель $1</value>
  </data>
  <data name="log_delete" xml:space="preserve">
    <value>SSL-туннель $1 удален</value>
  </data>
  <data name="log_modify" xml:space="preserve">
    <value>SSL-туннель $1 изменен</value>
  </data>
</root>