<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>SSLトンネル</value>
  </data>
  <data name="index_name" xml:space="preserve">
    <value>サービス名</value>
  </data>
  <data name="index_port" xml:space="preserve">
    <value>TCPポート</value>
  </data>
  <data name="index_active" xml:space="preserve">
    <value>アクティブですか？</value>
  </data>
  <data name="index_command" xml:space="preserve">
    <value>STunnelコマンド</value>
  </data>
  <data name="index_add" xml:space="preserve">
    <value>新しいSSLトンネルを追加します。</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>現在、SSLトンネルは&lt;tt&gt;inetd&lt;/tt&gt;または&lt;tt&gt;xinetd&lt;/tt&gt;から実行するようにセットアップされていません。</value>
  </data>
  <data name="index_einetd" xml:space="preserve">
    <value>&lt;tt&gt;inetd&lt;/tt&gt;も&lt;tt&gt;xinetd&lt;/tt&gt;もシステムにインストールされていません。 1つは、&lt;tt&gt;stunnel&lt;/tt&gt;に渡すためのネットワーク接続の受け入れを待機するために必要です。</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>変更を適用</value>
  </data>
  <data name="index_applymsg1" xml:space="preserve">
    <value>このボタンをクリックして、実行中の&lt;tt&gt;inetd&lt;/tt&gt;および&lt;tt&gt;xinetd&lt;/tt&gt;プロセスにHUPシグナルを送信することにより、現在のSSLトンネル構成をアクティブにします。</value>
  </data>
  <data name="index_applymsg2" xml:space="preserve">
    <value>このボタンをクリックして、実行中の&lt;tt&gt;inetd&lt;/tt&gt;プロセスにHUPシグナルを送信することにより、現在のSSLトンネル構成をアクティブにします。</value>
  </data>
  <data name="index_applymsg3" xml:space="preserve">
    <value>このボタンをクリックして、実行中の&lt;tt&gt;xinetd&lt;/tt&gt;プロセスにHUPシグナルを送信することにより、現在のSSLトンネル構成をアクティブにします。</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>SSLトンネルのリスト</value>
  </data>
  <data name="index_action" xml:space="preserve">
    <value>トンネルの宛先</value>
  </data>
  <data name="index_cmd" xml:space="preserve">
    <value>コマンド $1を実行</value>
  </data>
  <data name="index_remote" xml:space="preserve">
    <value>ホスト $1に接続</value>
  </data>
  <data name="index_rport" xml:space="preserve">
    <value>ポート $1に接続します</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>STunnelバージョン $1</value>
  </data>
  <data name="index_eversion" xml:space="preserve">
    <value>システムにインストールされているSTunnelのバージョンは $1ですが、このモジュールはバージョン $2以降をサポートしていません。</value>
  </data>
  <data name="index_conf" xml:space="preserve">
    <value>構成ファイル $1から</value>
  </data>
  <data name="index_noconf" xml:space="preserve">
    <value>設定ファイルはありません！</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>選択したトンネルを削除</value>
  </data>
  <data name="edit_title" xml:space="preserve">
    <value>SSLトンネルを編集</value>
  </data>
  <data name="create_title" xml:space="preserve">
    <value>SSLトンネルを作成する</value>
  </data>
  <data name="edit_header1" xml:space="preserve">
    <value>トンネルソースオプション</value>
  </data>
  <data name="edit_name" xml:space="preserve">
    <value>サービス名</value>
  </data>
  <data name="edit_port" xml:space="preserve">
    <value>TCPポート</value>
  </data>
  <data name="edit_active" xml:space="preserve">
    <value>アクティブですか？</value>
  </data>
  <data name="edit_header2" xml:space="preserve">
    <value>トンネル宛先オプション</value>
  </data>
  <data name="edit_mode0" xml:space="preserve">
    <value>&lt;tt&gt;inetd&lt;/tt&gt;スタイルのプログラムを実行する</value>
  </data>
  <data name="edit_mode1" xml:space="preserve">
    <value>PTYでプログラムを実行する</value>
  </data>
  <data name="edit_mode2" xml:space="preserve">
    <value>リモートホストに接続する</value>
  </data>
  <data name="edit_cmd" xml:space="preserve">
    <value>プログラムへのパス</value>
  </data>
  <data name="edit_args" xml:space="preserve">
    <value>引数付き</value>
  </data>
  <data name="edit_rhost" xml:space="preserve">
    <value>リモートホスト名</value>
  </data>
  <data name="edit_rport" xml:space="preserve">
    <value>リモートポート</value>
  </data>
  <data name="edit_header3" xml:space="preserve">
    <value>他のオプション</value>
  </data>
  <data name="edit_pem" xml:space="preserve">
    <value>SSL証明書とキーファイル</value>
  </data>
  <data name="edit_pem0" xml:space="preserve">
    <value>コンパイル済みのデフォルト</value>
  </data>
  <data name="edit_pem1" xml:space="preserve">
    <value>Webminの証明書を使用する</value>
  </data>
  <data name="edit_pem2" xml:space="preserve">
    <value>ファイル内の証明書を使用</value>
  </data>
  <data name="edit_cmode" xml:space="preserve">
    <value>トンネルモード</value>
  </data>
  <data name="edit_cmode0" xml:space="preserve">
    <value>SSLを受け入れ、正常に接続します</value>
  </data>
  <data name="edit_cmode1" xml:space="preserve">
    <value>通常を受け入れ、SSLで接続します</value>
  </data>
  <data name="edit_tcpw" xml:space="preserve">
    <value>TCPラッパー名</value>
  </data>
  <data name="edit_auto" xml:space="preserve">
    <value>自動</value>
  </data>
  <data name="edit_iface" xml:space="preserve">
    <value>発信元アドレス</value>
  </data>
  <data name="edit_type" xml:space="preserve">
    <value>から実行</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>SSLトンネルを保存できませんでした</value>
  </data>
  <data name="save_enclash" xml:space="preserve">
    <value>サービス名 $2は既にポート $1で使用されています。</value>
  </data>
  <data name="save_einetd" xml:space="preserve">
    <value>$1というinetdサービスが既に存在します。</value>
  </data>
  <data name="save_ename" xml:space="preserve">
    <value>サービス名が欠落しているか無効です</value>
  </data>
  <data name="save_eport" xml:space="preserve">
    <value>ポート番号が欠落しているか無効です</value>
  </data>
  <data name="save_ecmd" xml:space="preserve">
    <value>実行するプログラムが欠落しているか無効です</value>
  </data>
  <data name="save_erhost" xml:space="preserve">
    <value>無効なリモートホスト名</value>
  </data>
  <data name="save_erport" xml:space="preserve">
    <value>無効なリモートポート</value>
  </data>
  <data name="save_epclash" xml:space="preserve">
    <value>ポート $1は、サービス $2によって既に使用されています。</value>
  </data>
  <data name="save_epem" xml:space="preserve">
    <value>SSL証明書ファイル $1は存在しません</value>
  </data>
  <data name="save_etcpw" xml:space="preserve">
    <value>TCPラッパー名が欠落しているか無効です</value>
  </data>
  <data name="save_eiface" xml:space="preserve">
    <value>発信元アドレスが欠落しているか無効です</value>
  </data>
  <data name="save_exinetd" xml:space="preserve">
    <value>$1というxinetdサービスが既にあります</value>
  </data>
  <data name="save_export" xml:space="preserve">
    <value>ポート $1はxinetdサービス $2によって既に使用されています</value>
  </data>
  <data name="log_apply" xml:space="preserve">
    <value>適用された変更</value>
  </data>
  <data name="log_create" xml:space="preserve">
    <value>SSLトンネル $1を作成しました</value>
  </data>
  <data name="log_delete" xml:space="preserve">
    <value>SSLトンネル $1を削除しました</value>
  </data>
  <data name="log_modify" xml:space="preserve">
    <value>変更されたSSLトンネル $1</value>
  </data>
  <data name="log_delete_stunnels" xml:space="preserve">
    <value>$1 SSLトンネルを削除しました</value>
  </data>
</root>