<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Túneis SSL</value>
  </data>
  <data name="index_name" xml:space="preserve">
    <value>Nome do Serviço</value>
  </data>
  <data name="index_port" xml:space="preserve">
    <value>Porta TCP</value>
  </data>
  <data name="index_active" xml:space="preserve">
    <value>Ativo?</value>
  </data>
  <data name="index_command" xml:space="preserve">
    <value>Comando STunnel</value>
  </data>
  <data name="index_add" xml:space="preserve">
    <value>Adicione novo túnel SSL.</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>No momento, nenhum túnel SSL está configurado para ser executado a partir de &lt;tt&gt;inetd&lt;/tt&gt; ou &lt;tt&gt;xinetd&lt;/tt&gt;.</value>
  </data>
  <data name="index_einetd" xml:space="preserve">
    <value>&lt;tt&gt;inetd&lt;/tt&gt; ou &lt;tt&gt;xinetd&lt;/tt&gt; estão instalados no seu sistema. É necessário ouvir aceitar conexões de rede para passar para &lt;tt&gt;stunnel&lt;/tt&gt;.</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>Aplicar mudanças</value>
  </data>
  <data name="index_applymsg1" xml:space="preserve">
    <value>Clique neste botão para ativar sua configuração atual do túnel SSL enviando sinais HUP para os processos &lt;tt&gt;inetd&lt;/tt&gt; e &lt;tt&gt;xinetd&lt;/tt&gt; em execução.</value>
  </data>
  <data name="index_applymsg2" xml:space="preserve">
    <value>Clique neste botão para ativar sua configuração atual do túnel SSL enviando sinais HUP para o processo &lt;tt&gt;inetd&lt;/tt&gt; em execução.</value>
  </data>
  <data name="index_applymsg3" xml:space="preserve">
    <value>Clique neste botão para ativar a configuração atual do túnel SSL enviando sinais HUP para o processo &lt;tt&gt;xinetd&lt;/tt&gt; em execução.</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>Listagem de túnel SSL</value>
  </data>
  <data name="index_action" xml:space="preserve">
    <value>Destino do túnel</value>
  </data>
  <data name="index_cmd" xml:space="preserve">
    <value>Executar comando $1 </value>
  </data>
  <data name="index_remote" xml:space="preserve">
    <value>Conecte-se ao host $1 </value>
  </data>
  <data name="index_rport" xml:space="preserve">
    <value>Conecte-se à porta $1 </value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>Versão do canal $1 </value>
  </data>
  <data name="index_eversion" xml:space="preserve">
    <value>A versão do STunnel instalada no seu sistema é $1, mas este módulo não suporta a versão $2 e superior.</value>
  </data>
  <data name="index_conf" xml:space="preserve">
    <value>Do arquivo de configuração $1 </value>
  </data>
  <data name="index_noconf" xml:space="preserve">
    <value>Nenhum arquivo de configuração!</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>Excluir túneis selecionados</value>
  </data>
  <data name="edit_title" xml:space="preserve">
    <value>Editar túnel SSL</value>
  </data>
  <data name="create_title" xml:space="preserve">
    <value>Criar túnel SSL</value>
  </data>
  <data name="edit_header1" xml:space="preserve">
    <value>Opções de fonte de túnel</value>
  </data>
  <data name="edit_name" xml:space="preserve">
    <value>Nome do Serviço</value>
  </data>
  <data name="edit_port" xml:space="preserve">
    <value>Porta TCP</value>
  </data>
  <data name="edit_active" xml:space="preserve">
    <value>Ativo?</value>
  </data>
  <data name="edit_header2" xml:space="preserve">
    <value>Opções de destino do túnel</value>
  </data>
  <data name="edit_mode0" xml:space="preserve">
    <value>Execute o programa de estilo &lt;tt&gt;inetd&lt;/tt&gt;</value>
  </data>
  <data name="edit_mode1" xml:space="preserve">
    <value>Executar programa em PTY</value>
  </data>
  <data name="edit_mode2" xml:space="preserve">
    <value>Conectar ao host remoto</value>
  </data>
  <data name="edit_cmd" xml:space="preserve">
    <value>Caminho para o programa</value>
  </data>
  <data name="edit_args" xml:space="preserve">
    <value>com argumentos</value>
  </data>
  <data name="edit_rhost" xml:space="preserve">
    <value>Nome do host remoto</value>
  </data>
  <data name="edit_rport" xml:space="preserve">
    <value>Porta remota</value>
  </data>
  <data name="edit_header3" xml:space="preserve">
    <value>Outras opções</value>
  </data>
  <data name="edit_pem" xml:space="preserve">
    <value>Certificado SSL e arquivo de chave</value>
  </data>
  <data name="edit_pem0" xml:space="preserve">
    <value>Padrão compilado</value>
  </data>
  <data name="edit_pem1" xml:space="preserve">
    <value>Use o certificado do Webmin</value>
  </data>
  <data name="edit_pem2" xml:space="preserve">
    <value>Usar cert no arquivo</value>
  </data>
  <data name="edit_cmode" xml:space="preserve">
    <value>Modo de túnel</value>
  </data>
  <data name="edit_cmode0" xml:space="preserve">
    <value>Aceite SSL e conecte-se normalmente</value>
  </data>
  <data name="edit_cmode1" xml:space="preserve">
    <value>Aceite o normal e conecte-se com SSL</value>
  </data>
  <data name="edit_tcpw" xml:space="preserve">
    <value>Nome dos invólucros TCP</value>
  </data>
  <data name="edit_auto" xml:space="preserve">
    <value>Automático</value>
  </data>
  <data name="edit_iface" xml:space="preserve">
    <value>Endereço de origem de saída</value>
  </data>
  <data name="edit_type" xml:space="preserve">
    <value>Correr de</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>Falha ao salvar o túnel SSL</value>
  </data>
  <data name="save_enclash" xml:space="preserve">
    <value>O nome do serviço $2 já está sendo usado na porta $1.</value>
  </data>
  <data name="save_einetd" xml:space="preserve">
    <value>Já existe um serviço inetd chamado $1.</value>
  </data>
  <data name="save_ename" xml:space="preserve">
    <value>Nome de serviço ausente ou inválido</value>
  </data>
  <data name="save_eport" xml:space="preserve">
    <value>Número de porta ausente ou inválido</value>
  </data>
  <data name="save_ecmd" xml:space="preserve">
    <value>Programa ausente ou inválido para execução</value>
  </data>
  <data name="save_erhost" xml:space="preserve">
    <value>Nome de host remoto inválido</value>
  </data>
  <data name="save_erport" xml:space="preserve">
    <value>Porta remota inválida</value>
  </data>
  <data name="save_epclash" xml:space="preserve">
    <value>A porta $1 já está sendo usada pelo serviço $2.</value>
  </data>
  <data name="save_epem" xml:space="preserve">
    <value>O arquivo de certificado SSL $1 não existe</value>
  </data>
  <data name="save_etcpw" xml:space="preserve">
    <value>Nome de invólucros TCP ausente ou inválido</value>
  </data>
  <data name="save_eiface" xml:space="preserve">
    <value>Endereço de origem de saída ausente ou inválido</value>
  </data>
  <data name="save_exinetd" xml:space="preserve">
    <value>Já existe um serviço xinetd chamado $1 </value>
  </data>
  <data name="save_export" xml:space="preserve">
    <value>A porta $1 já está sendo usada pelo serviço xinetd $2 </value>
  </data>
  <data name="log_apply" xml:space="preserve">
    <value>Alterações aplicadas</value>
  </data>
  <data name="log_create" xml:space="preserve">
    <value>Túnel SSL criado $1 </value>
  </data>
  <data name="log_delete" xml:space="preserve">
    <value>Túnel SSL excluído $1 </value>
  </data>
  <data name="log_modify" xml:space="preserve">
    <value>Túnel SSL modificado $1 </value>
  </data>
  <data name="log_delete_stunnels" xml:space="preserve">
    <value>$1 túneis SSL excluídos</value>
  </data>
</root>