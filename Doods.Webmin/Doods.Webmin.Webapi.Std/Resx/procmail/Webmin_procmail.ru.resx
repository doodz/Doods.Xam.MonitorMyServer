<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Почтовый фильтр Procmail</value>
  </data>
  <data name="index_action" xml:space="preserve">
    <value>Действия</value>
  </data>
  <data name="index_conds" xml:space="preserve">
    <value>Условия</value>
  </data>
  <data name="index_move" xml:space="preserve">
    <value>Перемещение</value>
  </data>
  <data name="index_act5" xml:space="preserve">
    <value>Исполнить блок условий</value>
  </data>
  <data name="index_act4" xml:space="preserve">
    <value>Передать программе $1</value>
  </data>
  <data name="index_act3" xml:space="preserve">
    <value>Переслать на $1</value>
  </data>
  <data name="index_act2" xml:space="preserve">
    <value>Записать в каталог почты maildir $1</value>
  </data>
  <data name="index_act1" xml:space="preserve">
    <value>Записать в каталог MH $1</value>
  </data>
  <data name="index_act0" xml:space="preserve">
    <value>Добавить к файлу $1</value>
  </data>
  <data name="index_noconds" xml:space="preserve">
    <value>Всегда исполнять действие</value>
  </data>
  <data name="index_re" xml:space="preserve">
    <value>Совпадение с регулярным выражением $1</value>
  </data>
  <data name="index_nre" xml:space="preserve">
    <value>Несовпадение с регулярным выражением $1</value>
  </data>
  <data name="index_shell" xml:space="preserve">
    <value>Вычислишь команду $1</value>
  </data>
  <data name="index_exit" xml:space="preserve">
    <value>Код завершения работы команды $1</value>
  </data>
  <data name="index_lt" xml:space="preserve">
    <value>Размер &lt; $1</value>
  </data>
  <data name="index_gt" xml:space="preserve">
    <value>Размер &gt; $1</value>
  </data>
  <data name="index_add" xml:space="preserve">
    <value>Добавить новое действие фильтра</value>
  </data>
  <data name="index_eadd" xml:space="preserve">
    <value>Добавить новые настройки переменной</value>
  </data>
  <data name="index_badd" xml:space="preserve">
    <value>Добавить новый блок условий</value>
  </data>
  <data name="index_iadd" xml:space="preserve">
    <value>Добавить новый подключаемый файл</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>Пока не было настроено никаких действий Procmail.</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>список действий</value>
  </data>
  <data name="index_env" xml:space="preserve">
    <value>Установить переменную $1 в $2</value>
  </data>
  <data name="index_include" xml:space="preserve">
    <value>Подключаемый файл процесса $1</value>
  </data>
  <data name="edit_title2" xml:space="preserve">
    <value>Редактирование действий</value>
  </data>
  <data name="edit_title1" xml:space="preserve">
    <value>Создание действий</value>
  </data>
  <data name="edit_header1" xml:space="preserve">
    <value>Подробности действия по доставке</value>
  </data>
  <data name="edit_header2" xml:space="preserve">
    <value>Условия действия</value>
  </data>
  <data name="edit_action" xml:space="preserve">
    <value>Режим доставки</value>
  </data>
  <data name="edit_block" xml:space="preserve">
    <value>Код Procmail для исполнения</value>
  </data>
  <data name="edit_amode_0" xml:space="preserve">
    <value>Добавить к файлу</value>
  </data>
  <data name="edit_amode_1" xml:space="preserve">
    <value>Запись в каталог MH</value>
  </data>
  <data name="edit_amode_2" xml:space="preserve">
    <value>Запись в каталог maildir</value>
  </data>
  <data name="edit_amode_3" xml:space="preserve">
    <value>Переслать на адрес</value>
  </data>
  <data name="edit_amode_4" xml:space="preserve">
    <value>Передать программе</value>
  </data>
  <data name="edit_flag_H" xml:space="preserve">
    <value>Применить условия к заголовкам</value>
  </data>
  <data name="edit_flag_B" xml:space="preserve">
    <value>Применить условия к телу</value>
  </data>
  <data name="edit_flag_D" xml:space="preserve">
    <value>Совпадение с учетом регистров</value>
  </data>
  <data name="edit_flag_h" xml:space="preserve">
    <value>Передать заголовки по назначению</value>
  </data>
  <data name="edit_flag_b" xml:space="preserve">
    <value>Передать тело по назначению</value>
  </data>
  <data name="edit_flag_c" xml:space="preserve">
    <value>Продолжить обработку даже при совпадении условий</value>
  </data>
  <data name="edit_flag_w" xml:space="preserve">
    <value>Ожидать окончания действия программы и проверить результат</value>
  </data>
  <data name="edit_flag_W" xml:space="preserve">
    <value>Ожидать окончания действия программы, но игнорировать результат</value>
  </data>
  <data name="edit_flag_i" xml:space="preserve">
    <value>Игнорировать ошибки записи при доставке</value>
  </data>
  <data name="edit_flag_r" xml:space="preserve">
    <value>Записывать исходящую почту в сыром режиме</value>
  </data>
  <data name="edit_lockfile" xml:space="preserve">
    <value>Файл блокировки доставки</value>
  </data>
  <data name="edit_cmode_re" xml:space="preserve">
    <value>Совпадает с регулярным выражением</value>
  </data>
  <data name="edit_cmode_nre" xml:space="preserve">
    <value>Не совпадает с регулярным выражением</value>
  </data>
  <data name="edit_cmode_shell" xml:space="preserve">
    <value>Вычислить вывод из команды</value>
  </data>
  <data name="edit_cmode_exit" xml:space="preserve">
    <value>Проверить код завершения работы команды</value>
  </data>
  <data name="edit_cmode_lt" xml:space="preserve">
    <value>Почты меньше, чем</value>
  </data>
  <data name="edit_cmode_gt" xml:space="preserve">
    <value>Почты больше, чем</value>
  </data>
  <data name="edit_conddesc" xml:space="preserve">
    <value>Чтобы выполнялись вышеуказанные действия, все условия ниже должны выполняться. Если условий нет, то действия всегда будут исполняться.</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>Ошибка при сохранении действия</value>
  </data>
  <data name="save_eaction_0" xml:space="preserve">
    <value>Не указан файл для добавления</value>
  </data>
  <data name="save_eaction_1" xml:space="preserve">
    <value>Не указан каталог MH для записи</value>
  </data>
  <data name="save_eaction_2" xml:space="preserve">
    <value>Не указан каталог maildir для записи</value>
  </data>
  <data name="save_eaction_3" xml:space="preserve">
    <value>Не указан адрес пересылки</value>
  </data>
  <data name="save_eaction_4" xml:space="preserve">
    <value>Не указана программа для передачи</value>
  </data>
  <data name="save_elockfile" xml:space="preserve">
    <value>Не указано имя файла блокировки</value>
  </data>
  <data name="save_esize" xml:space="preserve">
    <value>Не указан или некорректный размер почты для условия $1</value>
  </data>
  <data name="save_ere" xml:space="preserve">
    <value>Не указано регулярное выражение для условия $1</value>
  </data>
  <data name="save_eshell" xml:space="preserve">
    <value>Не указана команда для условия $1</value>
  </data>
  <data name="env_title1" xml:space="preserve">
    <value>Создание переменной</value>
  </data>
  <data name="env_title2" xml:space="preserve">
    <value>Редактировать переменную</value>
  </data>
  <data name="env_header" xml:space="preserve">
    <value>Переменная окружения Procmail</value>
  </data>
  <data name="env_name" xml:space="preserve">
    <value>Имя переменной</value>
  </data>
  <data name="env_value" xml:space="preserve">
    <value>Значение</value>
  </data>
  <data name="env_err" xml:space="preserve">
    <value>Ошибка при сохранении переменной</value>
  </data>
  <data name="env_ename" xml:space="preserve">
    <value>Не указано или некорректное имя переменной</value>
  </data>
  <data name="inc_title1" xml:space="preserve">
    <value>Добавить подключаемый файл</value>
  </data>
  <data name="inc_title2" xml:space="preserve">
    <value>Редактировать подключаемый файл</value>
  </data>
  <data name="inc_header" xml:space="preserve">
    <value>Подключенный файл правил procmail</value>
  </data>
  <data name="inc_inc" xml:space="preserve">
    <value>Подключенный файл</value>
  </data>
  <data name="inc_einc" xml:space="preserve">
    <value>Не введен подключенный файл</value>
  </data>
  <data name="config_eline" xml:space="preserve">
    <value>Неизвестная строка $1 в $2 : $3</value>
  </data>
</root>