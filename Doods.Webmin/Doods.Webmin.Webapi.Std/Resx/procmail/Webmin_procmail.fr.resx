<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Filtre de courrier Procmail</value>
  </data>
  <data name="index_action" xml:space="preserve">
    <value>Action à effectuer</value>
  </data>
  <data name="index_conds" xml:space="preserve">
    <value>Conditions</value>
  </data>
  <data name="index_move" xml:space="preserve">
    <value>Déplacer</value>
  </data>
  <data name="index_ba" xml:space="preserve">
    <value>Ajouter</value>
  </data>
  <data name="index_act5" xml:space="preserve">
    <value>Exécuter le bloc conditionnel</value>
  </data>
  <data name="index_act4" xml:space="preserve">
    <value>Fournir au programmme $1</value>
  </data>
  <data name="index_act3" xml:space="preserve">
    <value>Transférer vers $1</value>
  </data>
  <data name="index_act2" xml:space="preserve">
    <value>Écrire dans le répertoire maildir $1</value>
  </data>
  <data name="index_act1" xml:space="preserve">
    <value>Écrire dans le dosser MH $1</value>
  </data>
  <data name="index_act0" xml:space="preserve">
    <value>Ajouter à la fin du fichier $1</value>
  </data>
  <data name="index_noconds" xml:space="preserve">
    <value>Toujours exécuter une action</value>
  </data>
  <data name="index_re" xml:space="preserve">
    <value>Faire correspondre l'expression régulière $1</value>
  </data>
  <data name="index_nre" xml:space="preserve">
    <value>Ne pas faire correspondre l'expresssion régulière $1</value>
  </data>
  <data name="index_shell" xml:space="preserve">
    <value>Évaluer la commande $1</value>
  </data>
  <data name="index_exit" xml:space="preserve">
    <value>État de sortie de la commande $1</value>
  </data>
  <data name="index_lt" xml:space="preserve">
    <value>La taille est &lt; $1</value>
  </data>
  <data name="index_gt" xml:space="preserve">
    <value>La taille est &gt; $1</value>
  </data>
  <data name="index_add" xml:space="preserve">
    <value>Ajouter une nouvelle action de filtrage</value>
  </data>
  <data name="index_eadd" xml:space="preserve">
    <value>Ajouter un nouveau paramètre de variable</value>
  </data>
  <data name="index_badd" xml:space="preserve">
    <value>Ajouter un nouveau bloc conditionnel</value>
  </data>
  <data name="index_iadd" xml:space="preserve">
    <value>Ajouter un nouveau fichier d'inclusion</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>Aucune action Procmail n'a encore été configurée.</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>à la liste des actions</value>
  </data>
  <data name="index_env" xml:space="preserve">
    <value>Positionner la variable $1 à $2</value>
  </data>
  <data name="index_include" xml:space="preserve">
    <value>Traiter le fichier d'inclusion $1</value>
  </data>
  <data name="edit_title2" xml:space="preserve">
    <value>Édition d'une action</value>
  </data>
  <data name="edit_title1" xml:space="preserve">
    <value>Création d'une action</value>
  </data>
  <data name="edit_header1" xml:space="preserve">
    <value>Détails de l'action de remise</value>
  </data>
  <data name="edit_header2" xml:space="preserve">
    <value>Conditions de l'action</value>
  </data>
  <data name="edit_action" xml:space="preserve">
    <value>Mode de distribution</value>
  </data>
  <data name="edit_block" xml:space="preserve">
    <value>Code Procmail à exécuter</value>
  </data>
  <data name="edit_amode_0" xml:space="preserve">
    <value>Ajouter à la fin du fichier</value>
  </data>
  <data name="edit_amode_1" xml:space="preserve">
    <value>Écrire dans le dossier MH</value>
  </data>
  <data name="edit_amode_2" xml:space="preserve">
    <value>Écrire dans maildir</value>
  </data>
  <data name="edit_amode_3" xml:space="preserve">
    <value>Transférer vers l'adresse</value>
  </data>
  <data name="edit_amode_4" xml:space="preserve">
    <value>Fournir au programme</value>
  </data>
  <data name="edit_flag_H" xml:space="preserve">
    <value>Appliquer les conditions aux en-têtes</value>
  </data>
  <data name="edit_flag_B" xml:space="preserve">
    <value>Appliquer les conditions au corps</value>
  </data>
  <data name="edit_flag_D" xml:space="preserve">
    <value>Correspondance sensible à la casse</value>
  </data>
  <data name="edit_flag_h" xml:space="preserve">
    <value>Transmettre les en-têtes vers la destination</value>
  </data>
  <data name="edit_flag_b" xml:space="preserve">
    <value>Transmettre le corps vers la destination</value>
  </data>
  <data name="edit_flag_c" xml:space="preserve">
    <value>Continuer le traitement même si les conditions correspondent</value>
  </data>
  <data name="edit_flag_w" xml:space="preserve">
    <value>Attendre que le programme d'action se termine et vérifier le résultat</value>
  </data>
  <data name="edit_flag_W" xml:space="preserve">
    <value>Attendre que le programme d'action se termine, mais ignorer le résultat</value>
  </data>
  <data name="edit_flag_i" xml:space="preserve">
    <value>Ignorer les erreurs en écriture lors de la remise</value>
  </data>
  <data name="edit_flag_r" xml:space="preserve">
    <value>Transcrire le courrier en mode brut</value>
  </data>
  <data name="edit_flag_f" xml:space="preserve">
    <value>Le programme d'action est un filtre</value>
  </data>
  <data name="edit_lockfile" xml:space="preserve">
    <value>Fichier de verrou de distribution</value>
  </data>
  <data name="edit_cmode_re" xml:space="preserve">
    <value>Correspond à l'expression régulière</value>
  </data>
  <data name="edit_cmode_nre" xml:space="preserve">
    <value>Ne correspond pas à l'expression régulière</value>
  </data>
  <data name="edit_cmode_shell" xml:space="preserve">
    <value>Évaluer la sortie de la commande</value>
  </data>
  <data name="edit_cmode_exit" xml:space="preserve">
    <value>Vérifier l'état de sortie de la commande</value>
  </data>
  <data name="edit_cmode_lt" xml:space="preserve">
    <value>Le message est inférieur à</value>
  </data>
  <data name="edit_cmode_gt" xml:space="preserve">
    <value>Le message est supérieur à</value>
  </data>
  <data name="edit_conddesc" xml:space="preserve">
    <value>Pour que l'action ci-dessus puisse être réalisée, toutes les conditions ci-dessous doivent correspondre. S'il n'y a aucune condition, l'action sera toujours exécutée.</value>
  </data>
  <data name="edit_none" xml:space="preserve">
    <value>Aucun</value>
  </data>
  <data name="edit_lock" xml:space="preserve">
    <value>Fichier spécifique</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>Impossible d'enregistrer l'action</value>
  </data>
  <data name="save_eaction_0" xml:space="preserve">
    <value>Fichier à ajouter à la fin manquant</value>
  </data>
  <data name="save_eaction_1" xml:space="preserve">
    <value>Dossier MH dans lequel écrire manquant</value>
  </data>
  <data name="save_eaction_2" xml:space="preserve">
    <value>Répertoire maildir dans lequel écrire manquant</value>
  </data>
  <data name="save_eaction_3" xml:space="preserve">
    <value>Adresse vers laquelle transférer manquante</value>
  </data>
  <data name="save_eaction_4" xml:space="preserve">
    <value>Programme vers lequel transmettre manquant</value>
  </data>
  <data name="save_elockfile" xml:space="preserve">
    <value>Nom de fichier de verrou manquant</value>
  </data>
  <data name="save_esize" xml:space="preserve">
    <value>Taille du fichier pour la condition $1 manquante ou invalide</value>
  </data>
  <data name="save_ere" xml:space="preserve">
    <value>Expression régulière pour la condition $1 manquante ou invalide</value>
  </data>
  <data name="save_eshell" xml:space="preserve">
    <value>Commande pour la condition $1 manquante</value>
  </data>
  <data name="env_title1" xml:space="preserve">
    <value>Création d'une variable</value>
  </data>
  <data name="env_title2" xml:space="preserve">
    <value>Édition d'une variable</value>
  </data>
  <data name="env_header" xml:space="preserve">
    <value>Variable d'environnement Procmail</value>
  </data>
  <data name="env_name" xml:space="preserve">
    <value>Nom de la variable</value>
  </data>
  <data name="env_value" xml:space="preserve">
    <value>Valeur</value>
  </data>
  <data name="env_err" xml:space="preserve">
    <value>Impossible d'enregistrer la variable</value>
  </data>
  <data name="env_ename" xml:space="preserve">
    <value>Nom de variable manquant ou invalide</value>
  </data>
  <data name="inc_title1" xml:space="preserve">
    <value>Ajout d'un fichier d'inclusion</value>
  </data>
  <data name="inc_title2" xml:space="preserve">
    <value>Édition d'un fichier d'inclusion</value>
  </data>
  <data name="inc_header" xml:space="preserve">
    <value>Fichier des règles procmail incluses</value>
  </data>
  <data name="inc_inc" xml:space="preserve">
    <value>Fichier inclus</value>
  </data>
  <data name="inc_einc" xml:space="preserve">
    <value>Aucun fichier d'inclusion saisi</value>
  </data>
  <data name="config_eline" xml:space="preserve">
    <value>Ligne $1 inconnue dans $2 : $3</value>
  </data>
  <data name="manual_title" xml:space="preserve">
    <value>Édition de la configuration</value>
  </data>
  <data name="manual_desc" xml:space="preserve">
    <value>Cette page peut être utilisée pour modifier manuellement le fichier de configuration $1 de Procmail. Faites attention car aucune vérification de syntaxe ne sera effectuée.</value>
  </data>
  <data name="manual_edata" xml:space="preserve">
    <value>Aucune donnée n'a été fournie par votre navigateur !</value>
  </data>
  <data name="log_create_rec" xml:space="preserve">
    <value>Créé le destinataire dans $1</value>
  </data>
  <data name="log_delete_rec" xml:space="preserve">
    <value>Supprimé le destinataire dans $1</value>
  </data>
  <data name="log_modify_rec" xml:space="preserve">
    <value>Modifié le destinataire dans $1</value>
  </data>
  <data name="log_act5" xml:space="preserve">
    <value>exécuter le bloc conditionel</value>
  </data>
  <data name="log_act4" xml:space="preserve">
    <value>fournir au progamme $1</value>
  </data>
  <data name="log_act3" xml:space="preserve">
    <value>transférer vers $1</value>
  </data>
  <data name="log_act2" xml:space="preserve">
    <value>écrire dans le répertoire maildir $1</value>
  </data>
  <data name="log_act1" xml:space="preserve">
    <value>écrire dans le dossier MH $1</value>
  </data>
  <data name="log_act0" xml:space="preserve">
    <value>ajouter à la fin du fichier $1</value>
  </data>
  <data name="log_create_env" xml:space="preserve">
    <value>Créé la variable d'environnement $1</value>
  </data>
  <data name="log_modify_env" xml:space="preserve">
    <value>Modifié la variable d'environnement $1</value>
  </data>
  <data name="log_delete_env" xml:space="preserve">
    <value>Supprimé la variable d'environnement $1</value>
  </data>
  <data name="log_create_inc" xml:space="preserve">
    <value>Créé le fichier d'inclusion $1</value>
  </data>
  <data name="log_modify_inc" xml:space="preserve">
    <value>Modifié le fichier d'inclusion $1</value>
  </data>
  <data name="log_delete_inc" xml:space="preserve">
    <value>Supprimé le fichier d'inclusion $1</value>
  </data>
  <data name="log_manual" xml:space="preserve">
    <value>Modifié manuellement le fichier de configuration</value>
  </data>
  <data name="log_up" xml:space="preserve">
    <value>Fait remonter un élément</value>
  </data>
  <data name="log_down" xml:space="preserve">
    <value>Fait descendre un élément</value>
  </data>
</root>