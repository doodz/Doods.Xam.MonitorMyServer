<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Поштовий фільтр Procmail</value>
  </data>
  <data name="index_action" xml:space="preserve">
    <value>Дії</value>
  </data>
  <data name="index_conds" xml:space="preserve">
    <value>Умови</value>
  </data>
  <data name="index_move" xml:space="preserve">
    <value>Переміщення</value>
  </data>
  <data name="index_act5" xml:space="preserve">
    <value>Виконати блок умов</value>
  </data>
  <data name="index_act4" xml:space="preserve">
    <value>Передати програмі $1</value>
  </data>
  <data name="index_act3" xml:space="preserve">
    <value>Переслати на $1</value>
  </data>
  <data name="index_act2" xml:space="preserve">
    <value>Записати в каталог пошти maildir $1</value>
  </data>
  <data name="index_act1" xml:space="preserve">
    <value>Записати в каталог MH $1</value>
  </data>
  <data name="index_act0" xml:space="preserve">
    <value>Додати до файлу $1</value>
  </data>
  <data name="index_noconds" xml:space="preserve">
    <value>Завжди виконувати дія</value>
  </data>
  <data name="index_re" xml:space="preserve">
    <value>Збіг з регулярним вираженням $1</value>
  </data>
  <data name="index_nre" xml:space="preserve">
    <value>Розбіжність з регулярним вираженням $1</value>
  </data>
  <data name="index_shell" xml:space="preserve">
    <value>Обчислиш команду $1</value>
  </data>
  <data name="index_exit" xml:space="preserve">
    <value>Код завершення роботи команди $1</value>
  </data>
  <data name="index_lt" xml:space="preserve">
    <value>Розмір &lt; $1</value>
  </data>
  <data name="index_gt" xml:space="preserve">
    <value>Розмір &gt; $1</value>
  </data>
  <data name="index_add" xml:space="preserve">
    <value>Додати нова дія фільтра</value>
  </data>
  <data name="index_eadd" xml:space="preserve">
    <value>Додати нові настроювання перемінної</value>
  </data>
  <data name="index_badd" xml:space="preserve">
    <value>Додати новий блок умов</value>
  </data>
  <data name="index_iadd" xml:space="preserve">
    <value>Додати новий файл, що підключається</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>Поки не було набудовано ніяких дій Procmail.</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>список дій</value>
  </data>
  <data name="index_env" xml:space="preserve">
    <value>Установити перемінну $1 у $2</value>
  </data>
  <data name="index_include" xml:space="preserve">
    <value> файл процесу, ЩоПідключається, $1</value>
  </data>
  <data name="edit_title2" xml:space="preserve">
    <value>Редагування дій</value>
  </data>
  <data name="edit_title1" xml:space="preserve">
    <value>Створення дій</value>
  </data>
  <data name="edit_header1" xml:space="preserve">
    <value>Подробиці дії по доставці</value>
  </data>
  <data name="edit_header2" xml:space="preserve">
    <value>Умови дії</value>
  </data>
  <data name="edit_action" xml:space="preserve">
    <value>Режим доставки</value>
  </data>
  <data name="edit_block" xml:space="preserve">
    <value>Код Procmail для виконання</value>
  </data>
  <data name="edit_amode_0" xml:space="preserve">
    <value>Додати до файлу</value>
  </data>
  <data name="edit_amode_1" xml:space="preserve">
    <value>Запис у каталог MH</value>
  </data>
  <data name="edit_amode_2" xml:space="preserve">
    <value>Запис у каталог maildir</value>
  </data>
  <data name="edit_amode_3" xml:space="preserve">
    <value>Переслати на адресу</value>
  </data>
  <data name="edit_amode_4" xml:space="preserve">
    <value>Передати програмі</value>
  </data>
  <data name="edit_flag_H" xml:space="preserve">
    <value>Застосувати умови до заголовків</value>
  </data>
  <data name="edit_flag_B" xml:space="preserve">
    <value>Застосувати умови до тіла</value>
  </data>
  <data name="edit_flag_D" xml:space="preserve">
    <value>Збіг з урахуванням регістрів</value>
  </data>
  <data name="edit_flag_h" xml:space="preserve">
    <value>Передати заголовки по призначенню</value>
  </data>
  <data name="edit_flag_b" xml:space="preserve">
    <value>Передати тіло по призначенню</value>
  </data>
  <data name="edit_flag_c" xml:space="preserve">
    <value>Продовжити обробку навіть при збігу умов</value>
  </data>
  <data name="edit_flag_w" xml:space="preserve">
    <value>Очікувати закінчення дії програми і перевірити результат</value>
  </data>
  <data name="edit_flag_W" xml:space="preserve">
    <value>Очікувати закінчення дії програми, але ігнорувати результат</value>
  </data>
  <data name="edit_flag_r" xml:space="preserve">
    <value>Записувати вихідну пошту в сирому режимі</value>
  </data>
  <data name="edit_lockfile" xml:space="preserve">
    <value>Файл блокування доставки</value>
  </data>
  <data name="edit_cmode_re" xml:space="preserve">
    <value>Збігається з регулярним вираженням</value>
  </data>
  <data name="edit_cmode_nre" xml:space="preserve">
    <value>Не збігається з регулярним вираженням</value>
  </data>
  <data name="edit_cmode_shell" xml:space="preserve">
    <value>Обчислити висновок з команди</value>
  </data>
  <data name="edit_cmode_exit" xml:space="preserve">
    <value>Перевірити код завершення роботи команди</value>
  </data>
  <data name="edit_cmode_lt" xml:space="preserve">
    <value>Пошти менше, ніж</value>
  </data>
  <data name="edit_cmode_gt" xml:space="preserve">
    <value>Пошти більше, ніж</value>
  </data>
  <data name="edit_conddesc" xml:space="preserve">
    <value>Щоб виконувалися вищевказані дії, всі умови нижче повинні виконуватися. Якщо умов ні, то дії завжди будуть виповнюватися.</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>Помилка при збереженні дії</value>
  </data>
  <data name="save_eaction_0" xml:space="preserve">
    <value>Не зазначений файл для додавання</value>
  </data>
  <data name="save_eaction_1" xml:space="preserve">
    <value>Не зазначений каталог MH для запису</value>
  </data>
  <data name="save_eaction_2" xml:space="preserve">
    <value>Не зазначений каталог maildir для запису</value>
  </data>
  <data name="save_eaction_3" xml:space="preserve">
    <value>Не зазначена адреса пересилання</value>
  </data>
  <data name="save_eaction_4" xml:space="preserve">
    <value>Не зазначена програма для передачі</value>
  </data>
  <data name="save_elockfile" xml:space="preserve">
    <value>Не зазначене ім'я файлу блокування</value>
  </data>
  <data name="save_esize" xml:space="preserve">
    <value> чиНе зазначений некоректний розмір пошти для умови $1</value>
  </data>
  <data name="save_ere" xml:space="preserve">
    <value>Не зазначене регулярне вираження для умови $1</value>
  </data>
  <data name="save_eshell" xml:space="preserve">
    <value>Не зазначена команда для умови $1</value>
  </data>
  <data name="env_title1" xml:space="preserve">
    <value>Створення перемінної</value>
  </data>
  <data name="env_title2" xml:space="preserve">
    <value>Редагувати перемінну</value>
  </data>
  <data name="env_header" xml:space="preserve">
    <value>Перемінна оточення Procmail</value>
  </data>
  <data name="env_name" xml:space="preserve">
    <value>Ім'я перемінної</value>
  </data>
  <data name="env_value" xml:space="preserve">
    <value>Значення</value>
  </data>
  <data name="env_err" xml:space="preserve">
    <value>Помилка при збереженні перемінної</value>
  </data>
  <data name="env_ename" xml:space="preserve">
    <value> Не зазначене чи некоректне ім'я змінної</value>
  </data>
  <data name="inc_title1" xml:space="preserve">
    <value>Додати файл, що підключається</value>
  </data>
  <data name="inc_title2" xml:space="preserve">
    <value>Редагувати файл, що підключається</value>
  </data>
  <data name="inc_header" xml:space="preserve">
    <value>Підключений файл правил procmail</value>
  </data>
  <data name="inc_inc" xml:space="preserve">
    <value>Підключений файл</value>
  </data>
  <data name="inc_einc" xml:space="preserve">
    <value>Не введений підключений файл</value>
  </data>
  <data name="config_eline" xml:space="preserve">
    <value>Невідомий рядок $1 у $2 : $3</value>
  </data>
</root>