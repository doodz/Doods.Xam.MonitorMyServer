<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>修改语言和风格</value>
  </data>
  <data name="index_lang" xml:space="preserve">
    <value>Webmin UI 语言</value>
  </data>
  <data name="index_langset" xml:space="preserve">
    <value>个人的选择 ..</value>
  </data>
  <data name="index_theme" xml:space="preserve">
    <value>Webmin UI 风格</value>
  </data>
  <data name="index_themeglobal" xml:space="preserve">
    <value>全局风格($1)</value>
  </data>
  <data name="index_themeset" xml:space="preserve">
    <value>个人的选择 ..</value>
  </data>
  <data name="index_pass" xml:space="preserve">
    <value>Webmin 登陆密码</value>
  </data>
  <data name="index_passleave" xml:space="preserve">
    <value>不修改</value>
  </data>
  <data name="index_passset" xml:space="preserve">
    <value>设定到 ..</value>
  </data>
  <data name="index_ok" xml:space="preserve">
    <value>修改</value>
  </data>
  <data name="index_themedef" xml:space="preserve">
    <value>原始Webmin风格</value>
  </data>
  <data name="index_desc2" xml:space="preserve">
    <value>这个模块常常是用以 $1, 仅仅针对Webmin的账号。</value>
  </data>
  <data name="index_d3" xml:space="preserve">
    <value>$1, $2 和 $3</value>
  </data>
  <data name="index_d2" xml:space="preserve">
    <value>$1 和 $2</value>
  </data>
  <data name="index_d1" xml:space="preserve">
    <value>$1</value>
  </data>
  <data name="index_dlang" xml:space="preserve">
    <value>语言是模块中文字内容显示时使用的语言</value>
  </data>
  <data name="index_dtheme" xml:space="preserve">
    <value>风格用来控制Webmin的外观</value>
  </data>
  <data name="index_dpass" xml:space="preserve">
    <value>这个密码是在登陆时使用的</value>
  </data>
  <data name="change_title" xml:space="preserve">
    <value>正在修改设定</value>
  </data>
  <data name="change_user" xml:space="preserve">
    <value>正在修改 Webmin 登陆 ..</value>
  </data>
  <data name="change_done" xml:space="preserve">
    <value>.. 完成</value>
  </data>
  <data name="change_restart" xml:space="preserve">
    <value>正在重新启动Webmin ..</value>
  </data>
  <data name="change_redirect" xml:space="preserve">
    <value>正在重新转向到主菜单 ..</value>
  </data>
  <data name="change_ecolon" xml:space="preserve">
    <value>你的密码中不能包含":"字符</value>
  </data>
  <data name="acl_lang" xml:space="preserve">
    <value>可改变语言?</value>
  </data>
  <data name="acl_theme" xml:space="preserve">
    <value>可修改页面风格？</value>
  </data>
  <data name="acl_pass" xml:space="preserve">
    <value>可以修改密码(当设定webmin时)?</value>
  </data>
</root>