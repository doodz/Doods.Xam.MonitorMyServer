<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>系統紀錄</value>
  </data>
  <data name="index_m4msg" xml:space="preserve">
    <value>您的系統紀錄組態檔 $1 似乎包含了 &lt;tt&gt;m4&lt;/tt&gt; 命令. 在它可以被編輯前, Webmin 必須將這個檔案用 &lt;tt&gt;m4&lt;/tt&gt; 處理, 以安全的移除這些命令.</value>
  </data>
  <data name="index_m4" xml:space="preserve">
    <value>從組態檔中移除 m4 命令</value>
  </data>
  <data name="index_active" xml:space="preserve">
    <value>是否啟動?</value>
  </data>
  <data name="index_tag" xml:space="preserve">
    <value>程式</value>
  </data>
  <data name="index_to" xml:space="preserve">
    <value>紀錄目標</value>
  </data>
  <data name="index_rule" xml:space="preserve">
    <value>選擇的訊息</value>
  </data>
  <data name="index_file" xml:space="preserve">
    <value>檔案 $1</value>
  </data>
  <data name="index_pipe" xml:space="preserve">
    <value>命名的管線 $1</value>
  </data>
  <data name="index_pipe2" xml:space="preserve">
    <value>管線到指令 $1</value>
  </data>
  <data name="index_host" xml:space="preserve">
    <value>系統紀錄伺服器在 $1</value>
  </data>
  <data name="index_all" xml:space="preserve">
    <value>所有使用者</value>
  </data>
  <data name="index_users" xml:space="preserve">
    <value>使用者 $1</value>
  </data>
  <data name="index_add" xml:space="preserve">
    <value>增加一個新的系統紀錄</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>系統紀錄</value>
  </data>
  <data name="index_restart" xml:space="preserve">
    <value>套用變更</value>
  </data>
  <data name="index_restartmsg" xml:space="preserve">
    <value>按下這個按鈕以重新啟動 &lt;tt&gt;syslog&lt;/tt&gt; 程序, 並確定所有的變更能生效.</value>
  </data>
  <data name="index_start" xml:space="preserve">
    <value>啟動系統紀錄伺服器</value>
  </data>
  <data name="index_startmsg" xml:space="preserve">
    <value>按下這個按鈕以啟動系統紀錄伺服器 $1. 在它被啟動前, 不會記錄任何事件.</value>
  </data>
  <data name="all" xml:space="preserve">
    <value>全部</value>
  </data>
  <data name="restart_ekill" xml:space="preserve">
    <value>無法送出控制訊號給系統紀錄程序 $1: $2</value>
  </data>
  <data name="edit_title" xml:space="preserve">
    <value>編輯系統紀錄</value>
  </data>
  <data name="create_title" xml:space="preserve">
    <value>增加系統紀錄</value>
  </data>
  <data name="edit_header1" xml:space="preserve">
    <value>紀錄目標</value>
  </data>
  <data name="edit_logto" xml:space="preserve">
    <value>紀錄到</value>
  </data>
  <data name="edit_file" xml:space="preserve">
    <value>檔案</value>
  </data>
  <data name="edit_sync" xml:space="preserve">
    <value>紀錄訊息之後同步</value>
  </data>
  <data name="edit_pipe" xml:space="preserve">
    <value>命名的管線</value>
  </data>
  <data name="edit_pipe2" xml:space="preserve">
    <value>管線到指令</value>
  </data>
  <data name="edit_host" xml:space="preserve">
    <value>系統紀錄伺服器在</value>
  </data>
  <data name="edit_users" xml:space="preserve">
    <value>本地端使用者</value>
  </data>
  <data name="edit_allusers" xml:space="preserve">
    <value>所有登入的使用者</value>
  </data>
  <data name="edit_active" xml:space="preserve">
    <value>是否啟動紀錄?</value>
  </data>
  <data name="edit_header2" xml:space="preserve">
    <value>要紀錄的訊息類別</value>
  </data>
  <data name="edit_facil" xml:space="preserve">
    <value>設備</value>
  </data>
  <data name="edit_pri" xml:space="preserve">
    <value>優先值</value>
  </data>
  <data name="edit_all" xml:space="preserve">
    <value>全部</value>
  </data>
  <data name="edit_one" xml:space="preserve">
    <value>一個</value>
  </data>
  <data name="edit_many" xml:space="preserve">
    <value>多個</value>
  </data>
  <data name="edit_pdir0" xml:space="preserve">
    <value>在...或之上</value>
  </data>
  <data name="edit_pdir1" xml:space="preserve">
    <value>恰好是...</value>
  </data>
  <data name="edit_pdir2" xml:space="preserve">
    <value>低於...</value>
  </data>
  <data name="edit_pdir3" xml:space="preserve">
    <value>全部, 除了...</value>
  </data>
  <data name="edit_none" xml:space="preserve">
    <value>無</value>
  </data>
  <data name="edit_view" xml:space="preserve">
    <value>檢視紀錄檔</value>
  </data>
  <data name="edit_tag" xml:space="preserve">
    <value>只給程式</value>
  </data>
  <data name="view_title" xml:space="preserve">
    <value>檢視紀錄檔</value>
  </data>
  <data name="view_header" xml:space="preserve">
    <value>最後 $1 行, 在 $2</value>
  </data>
  <data name="view_empty" xml:space="preserve">
    <value>紀錄檔是空的</value>
  </data>
  <data name="view_refresh" xml:space="preserve">
    <value>重新讀取</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>無法儲存紀錄</value>
  </data>
  <data name="save_efile" xml:space="preserve">
    <value>'$1' 不是一個有效的檔名: $2</value>
  </data>
  <data name="save_epipe" xml:space="preserve">
    <value>'$1' 不是個有效的命名的管線</value>
  </data>
  <data name="save_epipe2" xml:space="preserve">
    <value>遺失管線到的指令</value>
  </data>
  <data name="save_ehost" xml:space="preserve">
    <value>系統紀錄主機 '$1' 不存在</value>
  </data>
  <data name="save_enousers" xml:space="preserve">
    <value>沒有輸入本地端的使用者</value>
  </data>
  <data name="save_euser" xml:space="preserve">
    <value>使用者 '$1' 不存在</value>
  </data>
  <data name="save_efacils" xml:space="preserve">
    <value>沒有輸入設備</value>
  </data>
  <data name="save_esel" xml:space="preserve">
    <value>沒有要紀錄的訊息類別</value>
  </data>
  <data name="save_epri" xml:space="preserve">
    <value>沒有選擇優先值</value>
  </data>
</root>