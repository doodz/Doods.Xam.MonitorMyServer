<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_socket" xml:space="preserve">
    <value>Unix套接字文件 $1</value>
  </data>
  <data name="index_cmd" xml:space="preserve">
    <value>$1的輸出</value>
  </data>
  <data name="index_view" xml:space="preserve">
    <value>視圖 ..</value>
  </data>
  <data name="index_viewfile" xml:space="preserve">
    <value>查看日誌文件：</value>
  </data>
  <data name="index_viewok" xml:space="preserve">
    <value>視圖</value>
  </data>
  <data name="restart_ecannot" xml:space="preserve">
    <value>您不允許重新啟動syslog</value>
  </data>
  <data name="start_ecannot" xml:space="preserve">
    <value>您無權啟動syslog</value>
  </data>
  <data name="edit_socket" xml:space="preserve">
    <value>Unix域套接字文件</value>
  </data>
  <data name="edit_return" xml:space="preserve">
    <value>日誌詳細信息</value>
  </data>
  <data name="edit_ecannot" xml:space="preserve">
    <value>您無權編輯日誌設置</value>
  </data>
  <data name="edit_ecannot2" xml:space="preserve">
    <value>您無權編輯此日誌</value>
  </data>
  <data name="view_filter" xml:space="preserve">
    <value>僅顯示文字為 $1的行</value>
  </data>
  <data name="save_esocket" xml:space="preserve">
    <value>Unix域套接字丟失或無效</value>
  </data>
  <data name="save_ecannot1" xml:space="preserve">
    <value>您無權刪除此日誌</value>
  </data>
  <data name="save_ecannot2" xml:space="preserve">
    <value>您無權查看此日誌</value>
  </data>
  <data name="save_ecannot3" xml:space="preserve">
    <value>不允許使用此目標創建日誌</value>
  </data>
  <data name="save_ecannot4" xml:space="preserve">
    <value>您無權使用此目標保存日誌</value>
  </data>
  <data name="save_ecannot5" xml:space="preserve">
    <value>您無權修改此日誌</value>
  </data>
  <data name="save_ecannot6" xml:space="preserve">
    <value>您無權查看任意日誌</value>
  </data>
  <data name="save_ecannot7" xml:space="preserve">
    <value>您無權查看此額外日誌</value>
  </data>
  <data name="save_emissing" xml:space="preserve">
    <value>缺少要查看的日誌文件</value>
  </data>
  <data name="log_modify" xml:space="preserve">
    <value>將日誌修改為 $1</value>
  </data>
  <data name="log_create" xml:space="preserve">
    <value>已將日誌添加到 $1</value>
  </data>
  <data name="log_delete" xml:space="preserve">
    <value>已刪除日誌到 $1</value>
  </data>
  <data name="log_apply" xml:space="preserve">
    <value>應用的變更</value>
  </data>
  <data name="log_start" xml:space="preserve">
    <value>啟動日誌服務器</value>
  </data>
  <data name="desc_sysmesg" xml:space="preserve">
    <value>系統訊息</value>
  </data>
  <data name="desc_mail" xml:space="preserve">
    <value>郵件記錄</value>
  </data>
  <data name="desc_auth" xml:space="preserve">
    <value>認證日誌</value>
  </data>
  <data name="desc_boot" xml:space="preserve">
    <value>開機訊息</value>
  </data>
  <data name="desc_news" xml:space="preserve">
    <value>NNTP新聞日誌</value>
  </data>
  <data name="desc_uucp" xml:space="preserve">
    <value>UUCP日誌</value>
  </data>
  <data name="desc_debug" xml:space="preserve">
    <value>調試消息</value>
  </data>
  <data name="desc_cron" xml:space="preserve">
    <value>Cron作業日誌</value>
  </data>
  <data name="acl_noedit" xml:space="preserve">
    <value>只能查看日誌？</value>
  </data>
  <data name="acl_any" xml:space="preserve">
    <value>可以查看任何文件作為日誌嗎？</value>
  </data>
  <data name="acl_logs" xml:space="preserve">
    <value>可以查看和配置日誌文件</value>
  </data>
  <data name="acl_all" xml:space="preserve">
    <value>所有日誌</value>
  </data>
  <data name="acl_sel" xml:space="preserve">
    <value>僅列出文件和列出目錄下的文件 ..</value>
  </data>
  <data name="acl_extra" xml:space="preserve">
    <value>該用戶的額外日誌文件</value>
  </data>
  <data name="acl_syslog" xml:space="preserve">
    <value>可以從syslog查看日誌嗎？</value>
  </data>
  <data name="acl_others" xml:space="preserve">
    <value>可以查看其他模塊的日誌嗎？</value>
  </data>
</root>