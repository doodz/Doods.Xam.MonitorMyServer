<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>System Logs</value>
  </data>
  <data name="index_m4msg" xml:space="preserve">
    <value>Your system log configuration file $1 appears to contain &lt;tt&gt;m4&lt;/tt&gt; directives. Before it can be edited, Webmin needs to pass the file through &lt;tt&gt;m4&lt;/tt&gt; to safely remove these directives.</value>
  </data>
  <data name="index_m4" xml:space="preserve">
    <value>Remove m4 directives from config file</value>
  </data>
  <data name="index_active" xml:space="preserve">
    <value>Active?</value>
  </data>
  <data name="index_tag" xml:space="preserve">
    <value>Program</value>
  </data>
  <data name="index_to" xml:space="preserve">
    <value>Log destination</value>
  </data>
  <data name="index_rule" xml:space="preserve">
    <value>Messages selected</value>
  </data>
  <data name="index_file" xml:space="preserve">
    <value>File $1</value>
  </data>
  <data name="index_pipe" xml:space="preserve">
    <value>Named pipe $1</value>
  </data>
  <data name="index_pipe2" xml:space="preserve">
    <value>Pipe to command $1</value>
  </data>
  <data name="index_host" xml:space="preserve">
    <value>Syslog server on $1</value>
  </data>
  <data name="index_socket" xml:space="preserve">
    <value>Unix socket file $1</value>
  </data>
  <data name="index_cmd" xml:space="preserve">
    <value>Output from $1</value>
  </data>
  <data name="index_all" xml:space="preserve">
    <value>All users</value>
  </data>
  <data name="index_users" xml:space="preserve">
    <value>Users $1</value>
  </data>
  <data name="index_add" xml:space="preserve">
    <value>Add a new system log.</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>system logs</value>
  </data>
  <data name="index_restart" xml:space="preserve">
    <value>Apply Changes</value>
  </data>
  <data name="index_restartmsg" xml:space="preserve">
    <value>Click this button to make the current configuration active by killing the running &lt;tt&gt;syslog&lt;/tt&gt; process and restarting it.</value>
  </data>
  <data name="index_start" xml:space="preserve">
    <value>Start Syslog Server</value>
  </data>
  <data name="index_startmsg" xml:space="preserve">
    <value>Click this button to start the syslog server $1. Until it is started, no logging can be done.</value>
  </data>
  <data name="all" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="index_view" xml:space="preserve">
    <value>View..</value>
  </data>
  <data name="index_viewfile" xml:space="preserve">
    <value>View log file:</value>
  </data>
  <data name="index_viewok" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="restart_ekill" xml:space="preserve">
    <value>Failed to signal syslog process $1 : $2</value>
  </data>
  <data name="restart_ecannot" xml:space="preserve">
    <value>You are not allowed to restart syslog</value>
  </data>
  <data name="start_ecannot" xml:space="preserve">
    <value>You are not allowed to start syslog</value>
  </data>
  <data name="edit_title" xml:space="preserve">
    <value>Edit System Log</value>
  </data>
  <data name="create_title" xml:space="preserve">
    <value>Add System Log</value>
  </data>
  <data name="edit_header1" xml:space="preserve">
    <value>Log destination</value>
  </data>
  <data name="edit_logto" xml:space="preserve">
    <value>Log to</value>
  </data>
  <data name="edit_file" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="edit_sync" xml:space="preserve">
    <value>Sync after each message?</value>
  </data>
  <data name="edit_pipe" xml:space="preserve">
    <value>Named pipe</value>
  </data>
  <data name="edit_socket" xml:space="preserve">
    <value>Unix domain socket file</value>
  </data>
  <data name="edit_pipe2" xml:space="preserve">
    <value>Pipe to command</value>
  </data>
  <data name="edit_host" xml:space="preserve">
    <value>Syslog server on</value>
  </data>
  <data name="edit_users" xml:space="preserve">
    <value>Local users</value>
  </data>
  <data name="edit_allusers" xml:space="preserve">
    <value>All logged-in users</value>
  </data>
  <data name="edit_active" xml:space="preserve">
    <value>Logging active?</value>
  </data>
  <data name="edit_header2" xml:space="preserve">
    <value>Message types to log</value>
  </data>
  <data name="edit_facil" xml:space="preserve">
    <value>Facilities</value>
  </data>
  <data name="edit_pri" xml:space="preserve">
    <value>Priorities</value>
  </data>
  <data name="edit_all" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="edit_one" xml:space="preserve">
    <value>One</value>
  </data>
  <data name="edit_many" xml:space="preserve">
    <value>Many</value>
  </data>
  <data name="edit_pdir0" xml:space="preserve">
    <value>At or above..</value>
  </data>
  <data name="edit_pdir1" xml:space="preserve">
    <value>Exactly..</value>
  </data>
  <data name="edit_pdir2" xml:space="preserve">
    <value>Below..</value>
  </data>
  <data name="edit_pdir3" xml:space="preserve">
    <value>All except..</value>
  </data>
  <data name="edit_none" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="edit_view" xml:space="preserve">
    <value>View logfile</value>
  </data>
  <data name="edit_tag" xml:space="preserve">
    <value>Only for program</value>
  </data>
  <data name="edit_return" xml:space="preserve">
    <value>log details</value>
  </data>
  <data name="edit_ecannot" xml:space="preserve">
    <value>You are not allowed to edit log settings</value>
  </data>
  <data name="edit_ecannot2" xml:space="preserve">
    <value>You are not allowed to edit this log</value>
  </data>
  <data name="view_title" xml:space="preserve">
    <value>View Logfile</value>
  </data>
  <data name="view_header" xml:space="preserve">
    <value>Last $1 lines of $2</value>
  </data>
  <data name="view_empty" xml:space="preserve">
    <value>Log file is empty</value>
  </data>
  <data name="view_refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="view_filter" xml:space="preserve">
    <value>Only show lines with text $1</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>Failed to save log</value>
  </data>
  <data name="save_efile" xml:space="preserve">
    <value>'$1' is not a valid filename : $2</value>
  </data>
  <data name="save_epipe" xml:space="preserve">
    <value>'$1' is not a valid named pipe</value>
  </data>
  <data name="save_epipe2" xml:space="preserve">
    <value>Missing command to pipe to</value>
  </data>
  <data name="save_esocket" xml:space="preserve">
    <value>Missing or invalid unix domain socket</value>
  </data>
  <data name="save_ehost" xml:space="preserve">
    <value>Syslog host '$1' does not exist</value>
  </data>
  <data name="save_enousers" xml:space="preserve">
    <value>No local users entered</value>
  </data>
  <data name="save_euser" xml:space="preserve">
    <value>User '$1' does not exist</value>
  </data>
  <data name="save_efacils" xml:space="preserve">
    <value>No facilities entered</value>
  </data>
  <data name="save_esel" xml:space="preserve">
    <value>No message types to log</value>
  </data>
  <data name="save_epri" xml:space="preserve">
    <value>No priority selected</value>
  </data>
  <data name="save_ecannot1" xml:space="preserve">
    <value>You are not allowed to delete this log</value>
  </data>
  <data name="save_ecannot2" xml:space="preserve">
    <value>You are not allowed to view this log</value>
  </data>
  <data name="save_ecannot3" xml:space="preserve">
    <value>You are not allowed to create a log with this destination</value>
  </data>
  <data name="save_ecannot4" xml:space="preserve">
    <value>You are not allowed to save a log with this destination</value>
  </data>
  <data name="save_ecannot5" xml:space="preserve">
    <value>You are not allowed to modify this log</value>
  </data>
  <data name="save_ecannot6" xml:space="preserve">
    <value>You are not allowed to view arbitrary logs</value>
  </data>
  <data name="save_ecannot7" xml:space="preserve">
    <value>You are not allowed to view this extra log</value>
  </data>
  <data name="save_emissing" xml:space="preserve">
    <value>Missing log file to view</value>
  </data>
  <data name="log_modify" xml:space="preserve">
    <value>Modified log to $1</value>
  </data>
  <data name="log_create" xml:space="preserve">
    <value>Added log to $1</value>
  </data>
  <data name="log_delete" xml:space="preserve">
    <value>Deleted log to $1</value>
  </data>
  <data name="log_apply" xml:space="preserve">
    <value>Applied changes</value>
  </data>
  <data name="log_start" xml:space="preserve">
    <value>Started logging server</value>
  </data>
  <data name="desc_sysmesg" xml:space="preserve">
    <value>System Messages</value>
  </data>
  <data name="desc_mail" xml:space="preserve">
    <value>Mail Log</value>
  </data>
  <data name="desc_auth" xml:space="preserve">
    <value>Authentication Log</value>
  </data>
  <data name="desc_boot" xml:space="preserve">
    <value>Boot Messages</value>
  </data>
  <data name="desc_news" xml:space="preserve">
    <value>NNTP News Log</value>
  </data>
  <data name="desc_uucp" xml:space="preserve">
    <value>UUCP Log</value>
  </data>
  <data name="desc_debug" xml:space="preserve">
    <value>Debugging Messages</value>
  </data>
  <data name="desc_cron" xml:space="preserve">
    <value>Cron Job Log</value>
  </data>
  <data name="acl_noedit" xml:space="preserve">
    <value>Can only view logs?</value>
  </data>
  <data name="acl_any" xml:space="preserve">
    <value>Can view any file as a log?</value>
  </data>
  <data name="acl_logs" xml:space="preserve">
    <value>Can view and configure log files</value>
  </data>
  <data name="acl_all" xml:space="preserve">
    <value>All logs</value>
  </data>
  <data name="acl_sel" xml:space="preserve">
    <value>Only listed files and those under listed directories ..</value>
  </data>
  <data name="acl_extra" xml:space="preserve">
    <value>Extra log files for this user</value>
  </data>
  <data name="acl_syslog" xml:space="preserve">
    <value>Can view logs from syslog?</value>
  </data>
  <data name="acl_others" xml:space="preserve">
    <value>Can view logs from other modules?</value>
  </data>
  <data name="__norefs" xml:space="preserve">
    <value>1</value>
  </data>
</root>