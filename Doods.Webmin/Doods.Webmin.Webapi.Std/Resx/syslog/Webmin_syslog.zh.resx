<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>系统日志</value>
  </data>
  <data name="index_m4msg" xml:space="preserve">
    <value>系统日志配置文件 $1 包含 &lt;tt&gt;m4&lt;/tt&gt; 指令，Webmin 需要将此文件跳过 &lt;tt&gt;m4&lt;/tt&gt;，以安全地移除这些指令，然后才能对其进行编辑。</value>
  </data>
  <data name="index_m4" xml:space="preserve">
    <value>从配置文件中移除 m4 指令</value>
  </data>
  <data name="index_active" xml:space="preserve">
    <value>启动?</value>
  </data>
  <data name="index_tag" xml:space="preserve">
    <value>程序</value>
  </data>
  <data name="index_to" xml:space="preserve">
    <value>日志目标</value>
  </data>
  <data name="index_rule" xml:space="preserve">
    <value>选定的消息</value>
  </data>
  <data name="index_file" xml:space="preserve">
    <value>文件 $1</value>
  </data>
  <data name="index_pipe" xml:space="preserve">
    <value>命名管道 $1</value>
  </data>
  <data name="index_pipe2" xml:space="preserve">
    <value>从管道传递到命令 $1</value>
  </data>
  <data name="index_host" xml:space="preserve">
    <value>位于 $1 的 syslog 服务器</value>
  </data>
  <data name="index_all" xml:space="preserve">
    <value>所有用户</value>
  </data>
  <data name="index_users" xml:space="preserve">
    <value>用户 $1</value>
  </data>
  <data name="index_add" xml:space="preserve">
    <value>新增一个系统日志</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>系统日志</value>
  </data>
  <data name="index_restart" xml:space="preserve">
    <value>应用更改</value>
  </data>
  <data name="index_restartmsg" xml:space="preserve">
    <value>单击此按钮以终止正在运行的 &lt;tt&gt;syslog&lt;/tt&gt; 进程并重新启动，从而启用当前配置。</value>
  </data>
  <data name="index_start" xml:space="preserve">
    <value>启动系统日志服务器</value>
  </data>
  <data name="index_startmsg" xml:space="preserve">
    <value>单击此按扭启动日志服务器 $1，启动之前不会有日志写入。</value>
  </data>
  <data name="all" xml:space="preserve">
    <value>所有</value>
  </data>
  <data name="index_view" xml:space="preserve">
    <value>查看..</value>
  </data>
  <data name="restart_ekill" xml:space="preserve">
    <value>无法给日志进程 $1 : $2 发送信号</value>
  </data>
  <data name="edit_title" xml:space="preserve">
    <value>编辑系统日志</value>
  </data>
  <data name="create_title" xml:space="preserve">
    <value>增添系统日志</value>
  </data>
  <data name="edit_header1" xml:space="preserve">
    <value>日志目标</value>
  </data>
  <data name="edit_logto" xml:space="preserve">
    <value>将日志记录到</value>
  </data>
  <data name="edit_file" xml:space="preserve">
    <value>文件</value>
  </data>
  <data name="edit_sync" xml:space="preserve">
    <value>记录是否在每条信息之后同步?</value>
  </data>
  <data name="edit_pipe" xml:space="preserve">
    <value>命名的管道</value>
  </data>
  <data name="edit_pipe2" xml:space="preserve">
    <value>从管道传递到指令</value>
  </data>
  <data name="edit_host" xml:space="preserve">
    <value>系统日志服务器位于</value>
  </data>
  <data name="edit_users" xml:space="preserve">
    <value>本地用户</value>
  </data>
  <data name="edit_allusers" xml:space="preserve">
    <value>所有登录的用户</value>
  </data>
  <data name="edit_active" xml:space="preserve">
    <value>启用日志?</value>
  </data>
  <data name="edit_header2" xml:space="preserve">
    <value>记入日志的信息类型</value>
  </data>
  <data name="edit_facil" xml:space="preserve">
    <value>设备</value>
  </data>
  <data name="edit_pri" xml:space="preserve">
    <value>优先级</value>
  </data>
  <data name="edit_all" xml:space="preserve">
    <value>所有</value>
  </data>
  <data name="edit_one" xml:space="preserve">
    <value>一个</value>
  </data>
  <data name="edit_many" xml:space="preserve">
    <value>多个</value>
  </data>
  <data name="edit_pdir0" xml:space="preserve">
    <value>等于或高于..</value>
  </data>
  <data name="edit_pdir1" xml:space="preserve">
    <value>精确..</value>
  </data>
  <data name="edit_pdir2" xml:space="preserve">
    <value>低于..</value>
  </data>
  <data name="edit_pdir3" xml:space="preserve">
    <value>所有除了..</value>
  </data>
  <data name="edit_none" xml:space="preserve">
    <value>没有</value>
  </data>
  <data name="edit_view" xml:space="preserve">
    <value>查看日志文件</value>
  </data>
  <data name="edit_tag" xml:space="preserve">
    <value>仅适用于程序</value>
  </data>
  <data name="edit_return" xml:space="preserve">
    <value>日志的详细资料</value>
  </data>
  <data name="view_title" xml:space="preserve">
    <value>查看日志文件</value>
  </data>
  <data name="view_header" xml:space="preserve">
    <value>$2的最后 $1 行</value>
  </data>
  <data name="view_empty" xml:space="preserve">
    <value>日志文件是空的</value>
  </data>
  <data name="view_refresh" xml:space="preserve">
    <value>刷新</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>无法保存日志</value>
  </data>
  <data name="save_efile" xml:space="preserve">
    <value>'$1' 不是有效的文件名 : $2</value>
  </data>
  <data name="save_epipe" xml:space="preserve">
    <value>'$1' 不是有效的管道名</value>
  </data>
  <data name="save_epipe2" xml:space="preserve">
    <value>从管道传递的命令丢失</value>
  </data>
  <data name="save_ehost" xml:space="preserve">
    <value>Syslog主机'$1'不存在</value>
  </data>
  <data name="save_enousers" xml:space="preserve">
    <value>未输入本地用户</value>
  </data>
  <data name="save_euser" xml:space="preserve">
    <value>用户 '$1' 不存在</value>
  </data>
  <data name="save_efacils" xml:space="preserve">
    <value>未输入设备</value>
  </data>
  <data name="save_esel" xml:space="preserve">
    <value>没有记入日志的信息类型</value>
  </data>
  <data name="save_epri" xml:space="preserve">
    <value>未选择优先级</value>
  </data>
  <data name="log_modify" xml:space="preserve">
    <value>修改日志为 $1</value>
  </data>
  <data name="log_create" xml:space="preserve">
    <value>已将增添日志至 $1</value>
  </data>
  <data name="log_delete" xml:space="preserve">
    <value>已删除日志至 $1</value>
  </data>
  <data name="log_apply" xml:space="preserve">
    <value>已应用更改</value>
  </data>
  <data name="desc_sysmesg" xml:space="preserve">
    <value>系统信息</value>
  </data>
  <data name="desc_mail" xml:space="preserve">
    <value>邮件日志</value>
  </data>
  <data name="desc_auth" xml:space="preserve">
    <value>认证日志</value>
  </data>
  <data name="desc_boot" xml:space="preserve">
    <value>启动信息</value>
  </data>
  <data name="desc_news" xml:space="preserve">
    <value>NNTP 新闻日志</value>
  </data>
  <data name="desc_uucp" xml:space="preserve">
    <value>UUCP 日志</value>
  </data>
  <data name="desc_debug" xml:space="preserve">
    <value>调试消息</value>
  </data>
  <data name="desc_cron" xml:space="preserve">
    <value>Cron 任务日志</value>
  </data>
</root>