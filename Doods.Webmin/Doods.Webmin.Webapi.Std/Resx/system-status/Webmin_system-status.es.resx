<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="right_header" xml:space="preserve">
    <value>Información del sistema</value>
  </data>
  <data name="right_host" xml:space="preserve">
    <value>Nombre de host del sistema</value>
  </data>
  <data name="right_os" xml:space="preserve">
    <value>Sistema operativo</value>
  </data>
  <data name="right_login" xml:space="preserve">
    <value>Sesión iniciada como</value>
  </data>
  <data name="right_from" xml:space="preserve">
    <value>Inicia sesión desde</value>
  </data>
  <data name="right_webmin" xml:space="preserve">
    <value>Versión de Webmin</value>
  </data>
  <data name="right_usermin" xml:space="preserve">
    <value>Versión de Usermin</value>
  </data>
  <data name="right_cpu" xml:space="preserve">
    <value>Promedios de carga de la CPU</value>
  </data>
  <data name="right_cpuinfo" xml:space="preserve">
    <value>Información del procesador</value>
  </data>
  <data name="right_cputemps" xml:space="preserve">
    <value>Temperaturas de la CPU</value>
  </data>
  <data name="right_drivetemps" xml:space="preserve">
    <value>Tempetaruras del disco</value>
  </data>
  <data name="right_driveerr" xml:space="preserve">
    <value>¡$1 errores!</value>
  </data>
  <data name="right_drivefailed" xml:space="preserve">
    <value>¡Comprobación SMART fallida!</value>
  </data>
  <data name="right_cputype" xml:space="preserve">
    <value>$5, $8 núcleos</value>
  </data>
  <data name="right_load" xml:space="preserve">
    <value>$1 (1 min) $2 (5 mins) $3 (15 mins)</value>
  </data>
  <data name="right_cpuuse" xml:space="preserve">
    <value>Uso de la CPU</value>
  </data>
  <data name="right_cpustats" xml:space="preserve">
    <value>$1% usuario, $2% kernel, $4% IO, $3% idle</value>
  </data>
  <data name="right_real" xml:space="preserve">
    <value>Memoria real</value>
  </data>
  <data name="right_virt" xml:space="preserve">
    <value>Memoria virtual</value>
  </data>
  <data name="right_procs" xml:space="preserve">
    <value>Procesos corriendo</value>
  </data>
  <data name="right_disk" xml:space="preserve">
    <value>Espacio en disco local</value>
  </data>
  <data name="right_used" xml:space="preserve">
    <value>$2 usado, $1 en total</value>
  </data>
  <data name="right_used2" xml:space="preserve">
    <value>$2 usado, $1 garantizado, $3 burstable</value>
  </data>
  <data name="right_used3" xml:space="preserve">
    <value>$2 usado, $3 cached, $1 en total</value>
  </data>
  <data name="right_out" xml:space="preserve">
    <value>$1&amp;nbsp;of&amp;nbsp;$2</value>
  </data>
  <data name="right_fsfull" xml:space="preserve">
    <value>¡Advertencia! ¡El sistema de archivos de $ 2 montado en $ 1 no tiene espacio libre en el disco!</value>
  </data>
  <data name="right_fsnearly" xml:space="preserve">
    <value>¡Advertencia! The $2 sistema de archivos montado en $1 sólo tiene $3 de espacio libre en disco</value>
  </data>
  <data name="right_ifsfull" xml:space="preserve">
    <value>¡Advertencia! El sistema de archivos montado en $1 no tiene inodos libres de $2!</value>
  </data>
  <data name="right_ifsnearly" xml:space="preserve">
    <value>¡Advertencia! El sistema de archivos montado en $1 sólo tiene $3 de inodos libres de un total de $2</value>
  </data>
  <data name="right_quota" xml:space="preserve">
    <value>Uso de disco y cuota</value>
  </data>
  <data name="right_header5" xml:space="preserve">
    <value>Información de la cuenta</value>
  </data>
  <data name="right_uquota" xml:space="preserve">
    <value>Cuota de disco y uso</value>
  </data>
  <data name="right_time" xml:space="preserve">
    <value>Tiempo en el sistema</value>
  </data>
  <data name="right_uptime" xml:space="preserve">
    <value>Tiempo de actividad del sistema</value>
  </data>
  <data name="right_updays" xml:space="preserve">
    <value>$1 días, $2 horas, $3 minutos</value>
  </data>
  <data name="right_uphours" xml:space="preserve">
    <value>$1 horas, $2 minutos</value>
  </data>
  <data name="right_upmins" xml:space="preserve">
    <value>$1 minutos</value>
  </data>
  <data name="right_kernel" xml:space="preserve">
    <value>Kernel y CPU</value>
  </data>
  <data name="right_kernelon" xml:space="preserve">
    <value>$1 $2 en $3</value>
  </data>
  <data name="right_updates" xml:space="preserve">
    <value>Actualizaciones de paquetes</value>
  </data>
  <data name="right_upok" xml:space="preserve">
    <value>Todos los paquetes instalados están actualizados.</value>
  </data>
  <data name="right_upneed" xml:space="preserve">
    <value>$1 actualizaciones de paquete están disponibles</value>
  </data>
  <data name="right_upsec" xml:space="preserve">
    <value>$1 actualizaciones de paquetes disponibles, de las cuales $2 son actualizaciones de seguridad</value>
  </data>
  <data name="right_recollect" xml:space="preserve">
    <value>Actualizar información del sistema</value>
  </data>
  <data name="right_vvirtualmin" xml:space="preserve">
    <value>Versión de Virtualmin</value>
  </data>
  <data name="right_vvm2" xml:space="preserve">
    <value>Versión de Cloudmin</value>
  </data>
  <data name="acl_show" xml:space="preserve">
    <value>Información del sistema para mostrar</value>
  </data>
  <data name="acl_showall" xml:space="preserve">
    <value>Todo</value>
  </data>
  <data name="acl_showsel" xml:space="preserve">
    <value>Solo seleccionado ..</value>
  </data>
  <data name="acl_host" xml:space="preserve">
    <value>Nombre de host y versiones</value>
  </data>
  <data name="acl_cpu" xml:space="preserve">
    <value>CPU y kernel</value>
  </data>
  <data name="acl_temp" xml:space="preserve">
    <value>CPU y temperaturas del disco</value>
  </data>
  <data name="acl_load" xml:space="preserve">
    <value>Carga de CPU y procesos</value>
  </data>
  <data name="acl_mem" xml:space="preserve">
    <value>Memoria libre y swap</value>
  </data>
  <data name="acl_disk" xml:space="preserve">
    <value>Espacio libre en disco</value>
  </data>
  <data name="acl_poss" xml:space="preserve">
    <value>Actualizaciones de paquetes</value>
  </data>
</root>