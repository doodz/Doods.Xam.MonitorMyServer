<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_active" xml:space="preserve">
    <value>活性？</value>
  </data>
  <data name="index_cron" xml:space="preserve">
    <value>预定检查</value>
  </data>
  <data name="index_crondesc" xml:space="preserve">
    <value>单击此按钮可以创建，更改或删除Cron作业，以使Fetchmail按计划自动运行，以使用上述配置检查和下载电子邮件。</value>
  </data>
  <data name="index_crondesc2" xml:space="preserve">
    <value>单击此按钮可以创建，更改或删除Cron作业，以使Fetchmail按计划自动运行，以检查和下载所有列出的用户的电子邮件。</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>Fetchmail版本 $1</value>
  </data>
  <data name="index_header" xml:space="preserve">
    <value>具有Fetchmail配置的用户</value>
  </data>
  <data name="index_search" xml:space="preserve">
    <value>显示Fetchmail配置：</value>
  </data>
  <data name="index_show" xml:space="preserve">
    <value>节目</value>
  </data>
  <data name="index_toomany" xml:space="preserve">
    <value>您的系统上有太多用户无法显示。</value>
  </data>
  <data name="poll_auth" xml:space="preserve">
    <value>身份验证方法</value>
  </data>
  <data name="poll_usually" xml:space="preserve">
    <value>通常没有</value>
  </data>
  <data name="poll_ssl" xml:space="preserve">
    <value>以SSL模式连接？</value>
  </data>
  <data name="poll_eboth" xml:space="preserve">
    <value>将消息保留在服务器上并始终提取所有消息的选项不兼容</value>
  </data>
  <data name="poll_eusername" xml:space="preserve">
    <value>用户不存在！</value>
  </data>
  <data name="poll_foruser" xml:space="preserve">
    <value>对于用户 $1</value>
  </data>
  <data name="stop_ecannot" xml:space="preserve">
    <value>您无权停止fetchmail</value>
  </data>
  <data name="start_ecannot" xml:space="preserve">
    <value>您无权启动fetchmail</value>
  </data>
  <data name="log_create_cron" xml:space="preserve">
    <value>启用计划检查</value>
  </data>
  <data name="log_update_cron" xml:space="preserve">
    <value>修改的计划检查</value>
  </data>
  <data name="log_delete_cron" xml:space="preserve">
    <value>禁用预定检查</value>
  </data>
  <data name="acl_cron" xml:space="preserve">
    <value>可以配置预定检查吗？</value>
  </data>
  <data name="acl_daemon" xml:space="preserve">
    <value>可以配置Fetchmail守护程序吗？</value>
  </data>
  <data name="cron_title" xml:space="preserve">
    <value>预定检查</value>
  </data>
  <data name="cron_desc" xml:space="preserve">
    <value>此页面可用于启用或禁用Cron作业，以定期检查Fetchmail配置中的邮件服务器。使用优于运行Fetchmail守护程序的Cron作业，因为不需要在启动时重新启动它。</value>
  </data>
  <data name="cron_header" xml:space="preserve">
    <value>预定的Fetchmail设置</value>
  </data>
  <data name="cron_enabled" xml:space="preserve">
    <value>启用计划检查？</value>
  </data>
  <data name="cron_yes" xml:space="preserve">
    <value>是的，有时在下面配置 ..</value>
  </data>
  <data name="cron_output" xml:space="preserve">
    <value>Fetchmail输出的目标</value>
  </data>
  <data name="cron_file" xml:space="preserve">
    <value>写入文件 $1</value>
  </data>
  <data name="cron_mail" xml:space="preserve">
    <value>电邮至地址 $1</value>
  </data>
  <data name="cron_throw" xml:space="preserve">
    <value>丢弃</value>
  </data>
  <data name="cron_cron" xml:space="preserve">
    <value>输出到cron</value>
  </data>
  <data name="cron_owner" xml:space="preserve">
    <value>电子邮件给正在检查其配置的用户</value>
  </data>
  <data name="cron_user" xml:space="preserve">
    <value>以用户身份运行Fetchmail</value>
  </data>
  <data name="cron_err" xml:space="preserve">
    <value>保存预定检查失败</value>
  </data>
  <data name="cron_efile" xml:space="preserve">
    <value>缺少或无效的输出文件名</value>
  </data>
  <data name="cron_email" xml:space="preserve">
    <value>电子邮件地址丢失或无效</value>
  </data>
  <data name="cron_euser" xml:space="preserve">
    <value>缺少或无效的Unix用户</value>
  </data>
  <data name="cron_errors" xml:space="preserve">
    <value>仅在发生错误时输出吗？</value>
  </data>
  <data name="cron_ecannot2" xml:space="preserve">
    <value>您不允许配置计划的检查</value>
  </data>
  <data name="user_title" xml:space="preserve">
    <value>Fetchmail配置</value>
  </data>
  <data name="user_header" xml:space="preserve">
    <value>对于用户 $1</value>
  </data>
  <data name="user_return" xml:space="preserve">
    <value>用户配置</value>
  </data>
  <data name="email_ok" xml:space="preserve">
    <value>Fetchmail输出</value>
  </data>
  <data name="email_failed" xml:space="preserve">
    <value>Fetchmail错误</value>
  </data>
</root>