<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Fetchmail Mail Retrieval</value>
  </data>
  <data name="index_poll" xml:space="preserve">
    <value>Server to poll</value>
  </data>
  <data name="index_proto" xml:space="preserve">
    <value>Protocol</value>
  </data>
  <data name="index_active" xml:space="preserve">
    <value>Active?</value>
  </data>
  <data name="index_users" xml:space="preserve">
    <value>Remote and local users</value>
  </data>
  <data name="index_add" xml:space="preserve">
    <value>Add a new server.</value>
  </data>
  <data name="index_run" xml:space="preserve">
    <value>Check all servers</value>
  </data>
  <data name="index_global" xml:space="preserve">
    <value>Edit default settings.</value>
  </data>
  <data name="index_user" xml:space="preserve">
    <value>Unix user</value>
  </data>
  <data name="index_conf" xml:space="preserve">
    <value>Fetchmail configuration</value>
  </data>
  <data name="index_ok" xml:space="preserve">
    <value>Add Fetchmail server for user:</value>
  </data>
  <data name="index_file" xml:space="preserve">
    <value>Fetchmail configuration in $1</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>server list</value>
  </data>
  <data name="index_start" xml:space="preserve">
    <value>Start Fetchmail Daemon</value>
  </data>
  <data name="index_stop" xml:space="preserve">
    <value>Stop Fetchmail Daemon</value>
  </data>
  <data name="index_startmsg" xml:space="preserve">
    <value>Click this button to start the fetchmail daemon on this server, and have it check for mail every $1 seconds. The daemon will run as user $2 and use the configuration above.</value>
  </data>
  <data name="index_stopmsg" xml:space="preserve">
    <value>Click this button to stop the fetchmail daemon currently running as user $1. Mail will no longer be automatically downloaded every $2 seconds.</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>No Unix users have &lt;tt&gt;.fetchmailrc&lt;/tt&gt; files.</value>
  </data>
  <data name="index_cron" xml:space="preserve">
    <value>Scheduled Checking</value>
  </data>
  <data name="index_crondesc" xml:space="preserve">
    <value>Click this button to create, change or remove a Cron job to have Fetchmail run automatically on schedule to check for and download email using the configuration above.</value>
  </data>
  <data name="index_crondesc2" xml:space="preserve">
    <value>Click this button to create, change or remove a Cron job to have Fetchmail run automatically on schedule to check for and download email for all listed users.</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>Fetchmail version $1</value>
  </data>
  <data name="index_header" xml:space="preserve">
    <value>Users with Fetchmail configurations</value>
  </data>
  <data name="index_search" xml:space="preserve">
    <value>Show Fetchmail configuration for:</value>
  </data>
  <data name="index_show" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="index_toomany" xml:space="preserve">
    <value>There are too many users on your system to display.</value>
  </data>
  <data name="poll_create" xml:space="preserve">
    <value>Add Server</value>
  </data>
  <data name="poll_edit" xml:space="preserve">
    <value>Edit Server</value>
  </data>
  <data name="poll_header" xml:space="preserve">
    <value>Mail server options</value>
  </data>
  <data name="poll_poll" xml:space="preserve">
    <value>Server name</value>
  </data>
  <data name="poll_auth" xml:space="preserve">
    <value>Authentication method</value>
  </data>
  <data name="poll_skip" xml:space="preserve">
    <value>Polling enabled?</value>
  </data>
  <data name="poll_via" xml:space="preserve">
    <value>Mail server to contact</value>
  </data>
  <data name="poll_via_def" xml:space="preserve">
    <value>Same as server name</value>
  </data>
  <data name="poll_proto" xml:space="preserve">
    <value>Protocol</value>
  </data>
  <data name="poll_port" xml:space="preserve">
    <value>Server port</value>
  </data>
  <data name="poll_uheader" xml:space="preserve">
    <value>Mail server user details</value>
  </data>
  <data name="poll_user" xml:space="preserve">
    <value>Remote user</value>
  </data>
  <data name="poll_pass" xml:space="preserve">
    <value>Remote password</value>
  </data>
  <data name="poll_is" xml:space="preserve">
    <value>Local user(s)</value>
  </data>
  <data name="poll_keep" xml:space="preserve">
    <value>Leave messages on server?</value>
  </data>
  <data name="poll_fetchall" xml:space="preserve">
    <value>Always fetch all messages?</value>
  </data>
  <data name="poll_usually" xml:space="preserve">
    <value>Usually no</value>
  </data>
  <data name="poll_ssl" xml:space="preserve">
    <value>Connect in SSL mode?</value>
  </data>
  <data name="poll_err" xml:space="preserve">
    <value>Failed to save server</value>
  </data>
  <data name="poll_epoll" xml:space="preserve">
    <value>Missing or invalid server name</value>
  </data>
  <data name="poll_evia" xml:space="preserve">
    <value>Invalid mail server name</value>
  </data>
  <data name="poll_eport" xml:space="preserve">
    <value>Missing or invalid port number</value>
  </data>
  <data name="poll_euser" xml:space="preserve">
    <value>Missing or invalid remote user name</value>
  </data>
  <data name="poll_eboth" xml:space="preserve">
    <value>The options to leave messages on the server and always fetch all messages are incompatible</value>
  </data>
  <data name="poll_adduser" xml:space="preserve">
    <value>Add another user</value>
  </data>
  <data name="poll_check" xml:space="preserve">
    <value>Check this server</value>
  </data>
  <data name="poll_interface" xml:space="preserve">
    <value>Check condition</value>
  </data>
  <data name="poll_interface_def" xml:space="preserve">
    <value>Always check</value>
  </data>
  <data name="poll_interface_ifc" xml:space="preserve">
    <value>Only if interface is up</value>
  </data>
  <data name="poll_interface_ip" xml:space="preserve">
    <value>with address / netmask</value>
  </data>
  <data name="poll_einterface" xml:space="preserve">
    <value>Missing or invalid network interface</value>
  </data>
  <data name="poll_enet" xml:space="preserve">
    <value>Missing or invalid address</value>
  </data>
  <data name="poll_emask" xml:space="preserve">
    <value>Invalid address netmask</value>
  </data>
  <data name="poll_preconnect" xml:space="preserve">
    <value>Command to run before connecting</value>
  </data>
  <data name="poll_postconnect" xml:space="preserve">
    <value>Command to run after disconnecting</value>
  </data>
  <data name="poll_ecannot" xml:space="preserve">
    <value>You are not allowed to edit this user's fetchmail config</value>
  </data>
  <data name="poll_efile" xml:space="preserve">
    <value>Only users' fetchmail config files can be edited</value>
  </data>
  <data name="poll_eusername" xml:space="preserve">
    <value>User does not exist!</value>
  </data>
  <data name="poll_foruser" xml:space="preserve">
    <value>For user $1</value>
  </data>
  <data name="stop_err" xml:space="preserve">
    <value>Failed to stop fetchmail</value>
  </data>
  <data name="stop_ecannot" xml:space="preserve">
    <value>You are not allowed to stop fetchmail</value>
  </data>
  <data name="start_err" xml:space="preserve">
    <value>Failed to start fetchmail</value>
  </data>
  <data name="start_einterval" xml:space="preserve">
    <value>Missing or invalid checking interval</value>
  </data>
  <data name="start_ecannot" xml:space="preserve">
    <value>You are not allowed to start fetchmail</value>
  </data>
  <data name="check_title" xml:space="preserve">
    <value>Checking Servers</value>
  </data>
  <data name="check_exec" xml:space="preserve">
    <value>Checking for mail on server(s) with command $1 ..</value>
  </data>
  <data name="check_ok" xml:space="preserve">
    <value>.. checking complete.</value>
  </data>
  <data name="check_failed" xml:space="preserve">
    <value>.. checking failed!</value>
  </data>
  <data name="global_title" xml:space="preserve">
    <value>Default Settings</value>
  </data>
  <data name="global_header" xml:space="preserve">
    <value>Default settings for all servers</value>
  </data>
  <data name="global_err" xml:space="preserve">
    <value>Failed to save default settings</value>
  </data>
  <data name="log_create_poll_file" xml:space="preserve">
    <value>Added server $1 in file $2</value>
  </data>
  <data name="log_modify_poll_file" xml:space="preserve">
    <value>Modified server $1 in file $2</value>
  </data>
  <data name="log_delete_poll_file" xml:space="preserve">
    <value>Deleted server $1 in file $2</value>
  </data>
  <data name="log_create_poll_user" xml:space="preserve">
    <value>Added server $1 for user $2</value>
  </data>
  <data name="log_modify_poll_user" xml:space="preserve">
    <value>Modified server $1 for user $2</value>
  </data>
  <data name="log_delete_poll_user" xml:space="preserve">
    <value>Deleted server $1 for user $2</value>
  </data>
  <data name="log_check_file_file" xml:space="preserve">
    <value>Checked all servers in file $1</value>
  </data>
  <data name="log_check_file_server" xml:space="preserve">
    <value>Checked server $2 in file $1</value>
  </data>
  <data name="log_check_user_file" xml:space="preserve">
    <value>Checked all servers for user $1</value>
  </data>
  <data name="log_check_user_server" xml:space="preserve">
    <value>Checked server $2 for user $1</value>
  </data>
  <data name="log_check_server_l" xml:space="preserve">
    <value>Checked server $2 in file $1</value>
  </data>
  <data name="log_global_user" xml:space="preserve">
    <value>Changed global settings for user $1</value>
  </data>
  <data name="log_global_file" xml:space="preserve">
    <value>Changed global settings in file $1</value>
  </data>
  <data name="log_start" xml:space="preserve">
    <value>Started fetchmail daemon</value>
  </data>
  <data name="log_stop" xml:space="preserve">
    <value>Stopped fetchmail daemon</value>
  </data>
  <data name="log_create_cron" xml:space="preserve">
    <value>Enabled scheduled checking</value>
  </data>
  <data name="log_update_cron" xml:space="preserve">
    <value>Modified scheduled checking</value>
  </data>
  <data name="log_delete_cron" xml:space="preserve">
    <value>Disabled scheduled checking</value>
  </data>
  <data name="acl_users" xml:space="preserve">
    <value>Can edit fetchmail config for</value>
  </data>
  <data name="acl_all" xml:space="preserve">
    <value>All users</value>
  </data>
  <data name="acl_this" xml:space="preserve">
    <value>Current webmin user</value>
  </data>
  <data name="acl_only" xml:space="preserve">
    <value>Only users</value>
  </data>
  <data name="acl_except" xml:space="preserve">
    <value>All except users</value>
  </data>
  <data name="acl_cron" xml:space="preserve">
    <value>Can configure scheduled checking?</value>
  </data>
  <data name="acl_daemon" xml:space="preserve">
    <value>Can configure Fetchmail daemon?</value>
  </data>
  <data name="cron_title" xml:space="preserve">
    <value>Scheduled Checking</value>
  </data>
  <data name="cron_desc" xml:space="preserve">
    <value>This page can be used to enable or disable a Cron job to check the mail servers in your Fetchmail configuration on a regular schedule. Using a Cron job superior to running the Fetchmail daemon, as it does not need to be re-started at boot time.</value>
  </data>
  <data name="cron_header" xml:space="preserve">
    <value>Scheduled Fetchmail settings</value>
  </data>
  <data name="cron_enabled" xml:space="preserve">
    <value>Scheduled checking enabled?</value>
  </data>
  <data name="cron_yes" xml:space="preserve">
    <value>Yes, at times configured below ..</value>
  </data>
  <data name="cron_output" xml:space="preserve">
    <value>Destination for Fetchmail output</value>
  </data>
  <data name="cron_file" xml:space="preserve">
    <value>Write to file $1</value>
  </data>
  <data name="cron_mail" xml:space="preserve">
    <value>Email to address $1</value>
  </data>
  <data name="cron_throw" xml:space="preserve">
    <value>Discard</value>
  </data>
  <data name="cron_cron" xml:space="preserve">
    <value>Output to cron</value>
  </data>
  <data name="cron_owner" xml:space="preserve">
    <value>Email to user whose configuration is being checked</value>
  </data>
  <data name="cron_user" xml:space="preserve">
    <value>Run Fetchmail as user</value>
  </data>
  <data name="cron_err" xml:space="preserve">
    <value>Failed to save scheduled checking</value>
  </data>
  <data name="cron_efile" xml:space="preserve">
    <value>Missing or invalid output filename</value>
  </data>
  <data name="cron_email" xml:space="preserve">
    <value>Missing or invalid email address</value>
  </data>
  <data name="cron_euser" xml:space="preserve">
    <value>Missing or invalid Unix user</value>
  </data>
  <data name="cron_errors" xml:space="preserve">
    <value>Only output if an error occurs?</value>
  </data>
  <data name="cron_ecannot2" xml:space="preserve">
    <value>You are not allowed to configure scheduled checking</value>
  </data>
  <data name="user_title" xml:space="preserve">
    <value>Fetchmail Configuration</value>
  </data>
  <data name="user_header" xml:space="preserve">
    <value>For user $1</value>
  </data>
  <data name="user_return" xml:space="preserve">
    <value>user's configuration</value>
  </data>
  <data name="email_ok" xml:space="preserve">
    <value>Fetchmail output</value>
  </data>
  <data name="email_failed" xml:space="preserve">
    <value>Fetchmail error</value>
  </data>
  <data name="__norefs" xml:space="preserve">
    <value>1</value>
  </data>
</root>