<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_active" xml:space="preserve">
    <value>活性？</value>
  </data>
  <data name="index_cron" xml:space="preserve">
    <value>預定檢查</value>
  </data>
  <data name="index_crondesc" xml:space="preserve">
    <value>單擊此按鈕可以創建，更改或刪除Cron作業，以使Fetchmail按計劃自動運行，以使用上述配置檢查和下載電子郵件。</value>
  </data>
  <data name="index_crondesc2" xml:space="preserve">
    <value>單擊此按鈕可以創建，更改或刪除Cron作業，以使Fetchmail按計劃自動運行，以檢查和下載所有列出的用戶的電子郵件。</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>Fetchmail版本 $1</value>
  </data>
  <data name="index_header" xml:space="preserve">
    <value>具有Fetchmail配置的用戶</value>
  </data>
  <data name="index_search" xml:space="preserve">
    <value>顯示Fetchmail配置：</value>
  </data>
  <data name="index_show" xml:space="preserve">
    <value>節目</value>
  </data>
  <data name="index_toomany" xml:space="preserve">
    <value>您的系統上有太多用戶無法顯示。</value>
  </data>
  <data name="poll_auth" xml:space="preserve">
    <value>身份驗證方法</value>
  </data>
  <data name="poll_usually" xml:space="preserve">
    <value>通常沒有</value>
  </data>
  <data name="poll_ssl" xml:space="preserve">
    <value>以SSL模式連接？</value>
  </data>
  <data name="poll_eboth" xml:space="preserve">
    <value>將消息保留在服務器上並始終提取所有消息的選項不兼容</value>
  </data>
  <data name="poll_eusername" xml:space="preserve">
    <value>用戶不存在！</value>
  </data>
  <data name="poll_foruser" xml:space="preserve">
    <value>對於用戶 $1</value>
  </data>
  <data name="stop_ecannot" xml:space="preserve">
    <value>您無權停止fetchmail</value>
  </data>
  <data name="start_ecannot" xml:space="preserve">
    <value>您無權啟動fetchmail</value>
  </data>
  <data name="log_create_cron" xml:space="preserve">
    <value>啟用計劃的檢查</value>
  </data>
  <data name="log_update_cron" xml:space="preserve">
    <value>修改的計劃檢查</value>
  </data>
  <data name="log_delete_cron" xml:space="preserve">
    <value>禁用預定檢查</value>
  </data>
  <data name="acl_cron" xml:space="preserve">
    <value>可以配置預定檢查嗎？</value>
  </data>
  <data name="acl_daemon" xml:space="preserve">
    <value>可以配置Fetchmail守護程序嗎？</value>
  </data>
  <data name="cron_title" xml:space="preserve">
    <value>預定檢查</value>
  </data>
  <data name="cron_desc" xml:space="preserve">
    <value>此頁面可用於啟用或禁用Cron作業，以定期檢查Fetchmail配置中的郵件服務器。使用優於運行Fetchmail守護程序的Cron作業，因為不需要在啟動時重新啟動它。</value>
  </data>
  <data name="cron_header" xml:space="preserve">
    <value>預定的Fetchmail設置</value>
  </data>
  <data name="cron_enabled" xml:space="preserve">
    <value>啟用計劃檢查？</value>
  </data>
  <data name="cron_yes" xml:space="preserve">
    <value>是的，有時在下面配置 ..</value>
  </data>
  <data name="cron_output" xml:space="preserve">
    <value>Fetchmail輸出的目標</value>
  </data>
  <data name="cron_file" xml:space="preserve">
    <value>寫入文件 $1</value>
  </data>
  <data name="cron_mail" xml:space="preserve">
    <value>電郵至地址 $1</value>
  </data>
  <data name="cron_throw" xml:space="preserve">
    <value>丟棄</value>
  </data>
  <data name="cron_cron" xml:space="preserve">
    <value>輸出到cron</value>
  </data>
  <data name="cron_owner" xml:space="preserve">
    <value>電子郵件給正在檢查其配置的用戶</value>
  </data>
  <data name="cron_user" xml:space="preserve">
    <value>以用戶身份運行Fetchmail</value>
  </data>
  <data name="cron_err" xml:space="preserve">
    <value>保存預定檢查失敗</value>
  </data>
  <data name="cron_efile" xml:space="preserve">
    <value>缺少或無效的輸出文件名</value>
  </data>
  <data name="cron_email" xml:space="preserve">
    <value>電子郵件地址丟失或無效</value>
  </data>
  <data name="cron_euser" xml:space="preserve">
    <value>缺少或無效的Unix用戶</value>
  </data>
  <data name="cron_errors" xml:space="preserve">
    <value>僅在發生錯誤時輸出嗎？</value>
  </data>
  <data name="cron_ecannot2" xml:space="preserve">
    <value>您不允許配置計劃的檢查</value>
  </data>
  <data name="user_title" xml:space="preserve">
    <value>Fetchmail配置</value>
  </data>
  <data name="user_header" xml:space="preserve">
    <value>對於用戶 $1</value>
  </data>
  <data name="user_return" xml:space="preserve">
    <value>用戶配置</value>
  </data>
  <data name="email_ok" xml:space="preserve">
    <value>Fetchmail輸出</value>
  </data>
  <data name="email_failed" xml:space="preserve">
    <value>Fetchmail錯誤</value>
  </data>
</root>