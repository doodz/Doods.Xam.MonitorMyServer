<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_active" xml:space="preserve">
    <value>¿Activo?</value>
  </data>
  <data name="index_cron" xml:space="preserve">
    <value>Comprobación programada</value>
  </data>
  <data name="index_crondesc" xml:space="preserve">
    <value>Haga clic en este botón para crear, cambiar o eliminar un trabajo de Cron para que Fetchmail se ejecute automáticamente según lo programado para verificar y descargar el correo electrónico utilizando la configuración anterior.</value>
  </data>
  <data name="index_crondesc2" xml:space="preserve">
    <value>Haga clic en este botón para crear, cambiar o eliminar un trabajo de Cron para que Fetchmail se ejecute automáticamente según lo programado para verificar y descargar el correo electrónico de todos los usuarios enumerados.</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>Fetchmail versión $1 </value>
  </data>
  <data name="index_header" xml:space="preserve">
    <value>Usuarios con configuraciones de Fetchmail</value>
  </data>
  <data name="index_search" xml:space="preserve">
    <value>Mostrar configuración de Fetchmail para:</value>
  </data>
  <data name="index_show" xml:space="preserve">
    <value>mostrar</value>
  </data>
  <data name="index_toomany" xml:space="preserve">
    <value>Hay demasiados usuarios en su sistema para mostrar.</value>
  </data>
  <data name="poll_auth" xml:space="preserve">
    <value>Método de autentificación</value>
  </data>
  <data name="poll_usually" xml:space="preserve">
    <value>Por lo general no</value>
  </data>
  <data name="poll_ssl" xml:space="preserve">
    <value>¿Conectar en modo SSL?</value>
  </data>
  <data name="poll_eboth" xml:space="preserve">
    <value>Las opciones para dejar mensajes en el servidor y buscar siempre todos los mensajes son incompatibles</value>
  </data>
  <data name="poll_eusername" xml:space="preserve">
    <value>¡El usuario no existe!</value>
  </data>
  <data name="poll_foruser" xml:space="preserve">
    <value>Para el usuario $1 </value>
  </data>
  <data name="stop_ecannot" xml:space="preserve">
    <value>No tienes permiso para detener fetchmail</value>
  </data>
  <data name="start_ecannot" xml:space="preserve">
    <value>No tienes permiso para iniciar fetchmail</value>
  </data>
  <data name="log_create_cron" xml:space="preserve">
    <value>Comprobación programada habilitada</value>
  </data>
  <data name="log_update_cron" xml:space="preserve">
    <value>Verificación programada modificada</value>
  </data>
  <data name="log_delete_cron" xml:space="preserve">
    <value>Comprobación programada desactivada</value>
  </data>
  <data name="acl_cron" xml:space="preserve">
    <value>¿Se puede configurar la comprobación programada?</value>
  </data>
  <data name="acl_daemon" xml:space="preserve">
    <value>¿Se puede configurar el demonio Fetchmail?</value>
  </data>
  <data name="cron_title" xml:space="preserve">
    <value>Comprobación programada</value>
  </data>
  <data name="cron_desc" xml:space="preserve">
    <value>Esta página se puede usar para habilitar o deshabilitar un trabajo de Cron para verificar los servidores de correo en su configuración de Fetchmail en un horario regular. Usar un trabajo Cron superior a la ejecución del demonio Fetchmail, ya que no necesita reiniciarse en el momento del arranque.</value>
  </data>
  <data name="cron_header" xml:space="preserve">
    <value>Configuraciones programadas de Fetchmail</value>
  </data>
  <data name="cron_enabled" xml:space="preserve">
    <value>¿Comprobación programada habilitada?</value>
  </data>
  <data name="cron_yes" xml:space="preserve">
    <value>Sí, a veces configurado a continuación.</value>
  </data>
  <data name="cron_output" xml:space="preserve">
    <value>Destino para la salida de Fetchmail</value>
  </data>
  <data name="cron_file" xml:space="preserve">
    <value>Escribir en el archivo $1 </value>
  </data>
  <data name="cron_mail" xml:space="preserve">
    <value>Correo electrónico a la dirección $1 </value>
  </data>
  <data name="cron_throw" xml:space="preserve">
    <value>Descarte</value>
  </data>
  <data name="cron_cron" xml:space="preserve">
    <value>Salida a cron</value>
  </data>
  <data name="cron_owner" xml:space="preserve">
    <value>Correo electrónico al usuario cuya configuración se está verificando</value>
  </data>
  <data name="cron_user" xml:space="preserve">
    <value>Ejecuta Fetchmail como usuario</value>
  </data>
  <data name="cron_err" xml:space="preserve">
    <value>Error al guardar la comprobación programada</value>
  </data>
  <data name="cron_efile" xml:space="preserve">
    <value>Nombre de archivo de salida faltante o no válido</value>
  </data>
  <data name="cron_email" xml:space="preserve">
    <value>Dirección de correo electrónico faltante o inválida</value>
  </data>
  <data name="cron_euser" xml:space="preserve">
    <value>Usuario de Unix perdido o no válido</value>
  </data>
  <data name="cron_errors" xml:space="preserve">
    <value>¿Solo salida si ocurre un error?</value>
  </data>
  <data name="cron_ecannot2" xml:space="preserve">
    <value>No tiene permiso para configurar la comprobación programada</value>
  </data>
  <data name="user_title" xml:space="preserve">
    <value>Configuración de Fetchmail</value>
  </data>
  <data name="user_header" xml:space="preserve">
    <value>Para el usuario $1 </value>
  </data>
  <data name="user_return" xml:space="preserve">
    <value>configuración del usuario</value>
  </data>
  <data name="email_ok" xml:space="preserve">
    <value>Salida de Fetchmail</value>
  </data>
  <data name="email_failed" xml:space="preserve">
    <value>Error de fetchmail</value>
  </data>
</root>