<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Cluster Cron Jobs</value>
  </data>
  <data name="index_add" xml:space="preserve">
    <value>Sortu kluster cron lan berria.</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>Ez da kluster cron lanik definitu.</value>
  </data>
  <data name="index_servers" xml:space="preserve">
    <value>Exekutatu zerbitzarietan</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>cluster cron lanpostuen zerrenda</value>
  </data>
  <data name="index_more" xml:space="preserve">
    <value>$1 gehiago ..</value>
  </data>
  <data name="index_run" xml:space="preserve">
    <value>Korrika orain ..</value>
  </data>
  <data name="index_actions" xml:space="preserve">
    <value>Ekintzak</value>
  </data>
  <data name="edit_title" xml:space="preserve">
    <value>Editatu Cluster Cron lana</value>
  </data>
  <data name="create_title" xml:space="preserve">
    <value>Sortu Cluster Cron lana</value>
  </data>
  <data name="edit_servers" xml:space="preserve">
    <value>Exekutatu zerbitzarietan</value>
  </data>
  <data name="edit_group" xml:space="preserve">
    <value>$1 eko kideak</value>
  </data>
  <data name="edit_this" xml:space="preserve">
    <value>zerbitzari hau</value>
  </data>
  <data name="edit_all" xml:space="preserve">
    <value>&amp;lt;Ostalari guztiak&amp;gt;</value>
  </data>
  <data name="edit_emissing" xml:space="preserve">
    <value>Cron lana ez da existitzen!</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>Ezin izan da cluster cron lana gordetzean</value>
  </data>
  <data name="exec_title" xml:space="preserve">
    <value>Cluster Cron lana gauzatzea</value>
  </data>
  <data name="exec_cmd" xml:space="preserve">
    <value>$1 exekutatzen hautatutako zerbitzarietan ..</value>
  </data>
  <data name="exec_failed" xml:space="preserve">
    <value>Ezin izan da exekutatu $1 : $2 an</value>
  </data>
  <data name="exec_success" xml:space="preserve">
    <value>$1 -eko irteera.</value>
  </data>
  <data name="exec_nohosts" xml:space="preserve">
    <value>Ez dago exekutatzeko hautatutako ostalarik, edo hautatutako taldeek ez dute ostalari erabilgarririk.</value>
  </data>
  <data name="log_run" xml:space="preserve">
    <value>Ran $1 $2 zerbitzarietan</value>
  </data>
  <data name="log_run_l" xml:space="preserve">
    <value>Ran $1 $2 an</value>
  </data>
  <data name="log_create" xml:space="preserve">
    <value>$1 erako klusterreko kluster lana sortu da</value>
  </data>
  <data name="log_create_l" xml:space="preserve">
    <value>$2 klusterreko kluster lana sortu da $1 -erako</value>
  </data>
  <data name="log_modify" xml:space="preserve">
    <value>$1 erako klusterreko kluster lana aldatu da</value>
  </data>
  <data name="log_modify_l" xml:space="preserve">
    <value>$2 ko klusterreko lana aldatu du $1 erako</value>
  </data>
  <data name="log_delete" xml:space="preserve">
    <value>$1 eko klusterreko kluster lana ezabatu da</value>
  </data>
  <data name="log_delete_l" xml:space="preserve">
    <value>$2 ko kluster-en lana ezabatu da $1 -erako</value>
  </data>
  <data name="log_deletes" xml:space="preserve">
    <value>$1 klusterreko laneko mezuak ezabatu dira</value>
  </data>
  <data name="delete_err" xml:space="preserve">
    <value>Huts egin du klusterren cron lanak</value>
  </data>
  <data name="delete_enone" xml:space="preserve">
    <value>Ez da hautatu</value>
  </data>
</root>