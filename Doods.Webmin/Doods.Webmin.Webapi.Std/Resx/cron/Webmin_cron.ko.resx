<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>예약된 cron 작업</value>
  </data>
  <data name="index_user" xml:space="preserve">
    <value>사용자</value>
  </data>
  <data name="index_active" xml:space="preserve">
    <value>활성 상태입니까?</value>
  </data>
  <data name="index_command" xml:space="preserve">
    <value>명령</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>이 시스템에 cron 작업이 없습니다</value>
  </data>
  <data name="index_create" xml:space="preserve">
    <value>예약된 cron 작업을 새로 작성했습니다</value>
  </data>
  <data name="index_allow" xml:space="preserve">
    <value>cron 작업에 대한 사용자 접근 제어</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>cron 목록</value>
  </data>
  <data name="edit_title" xml:space="preserve">
    <value>cron 작업 편집</value>
  </data>
  <data name="create_title" xml:space="preserve">
    <value>cron 작업 작성</value>
  </data>
  <data name="edit_ecannot" xml:space="preserve">
    <value>이 사용자의 cron 작업을 편집할 수 없습니다</value>
  </data>
  <data name="edit_details" xml:space="preserve">
    <value>작업 세부 정보</value>
  </data>
  <data name="edit_user" xml:space="preserve">
    <value>cron 작업 실행 자격</value>
  </data>
  <data name="edit_active" xml:space="preserve">
    <value>활성 상태입니까?</value>
  </data>
  <data name="edit_commands" xml:space="preserve">
    <value>명령</value>
  </data>
  <data name="edit_command" xml:space="preserve">
    <value>명령</value>
  </data>
  <data name="edit_input" xml:space="preserve">
    <value>명령 입력</value>
  </data>
  <data name="edit_when" xml:space="preserve">
    <value>실행 일시</value>
  </data>
  <data name="edit_mins" xml:space="preserve">
    <value>분</value>
  </data>
  <data name="edit_hours" xml:space="preserve">
    <value>시</value>
  </data>
  <data name="edit_days" xml:space="preserve">
    <value>일</value>
  </data>
  <data name="edit_months" xml:space="preserve">
    <value>월</value>
  </data>
  <data name="edit_weekdays" xml:space="preserve">
    <value>평일</value>
  </data>
  <data name="edit_all" xml:space="preserve">
    <value>모두</value>
  </data>
  <data name="edit_selected" xml:space="preserve">
    <value>선택한 시간..</value>
  </data>
  <data name="edit_run" xml:space="preserve">
    <value>지금 실행</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>cron 작업을 저장하지 못했습니다</value>
  </data>
  <data name="save_ecmd" xml:space="preserve">
    <value>실행할 명령을 입력하지 않았습니다</value>
  </data>
  <data name="save_euser" xml:space="preserve">
    <value>사용자를 선택해야 합니다</value>
  </data>
  <data name="save_euser2" xml:space="preserve">
    <value>사용자 '$1'이(가) 존재하지 않습니다</value>
  </data>
  <data name="save_eallow" xml:space="preserve">
    <value>사용자 '$1'은(는) cron에 접근할 수 없습니다.</value>
  </data>
  <data name="save_ecannot" xml:space="preserve">
    <value>'$1'의 cron 작업을 작성 또는 편집할 수 없습니다.</value>
  </data>
  <data name="save_enone" xml:space="preserve">
    <value>실행할 $1을(를) 선택하지 않았습니다.</value>
  </data>
  <data name="allow_title" xml:space="preserve">
    <value>cron 접근 제어</value>
  </data>
  <data name="allow_desc" xml:space="preserve">
    <value>이 양식을 사용하여 어떤 사용자가 cron 작업을 작성 및 실행할 수 있는지를 제어할 수 있습니다.</value>
  </data>
  <data name="allow_ecannot" xml:space="preserve">
    <value>cron에 대한 사용자 접근을 제어할 수 없습니다</value>
  </data>
  <data name="allow_all1" xml:space="preserve">
    <value>모든 사용자 거부</value>
  </data>
  <data name="allow_all2" xml:space="preserve">
    <value>root를 제외한 모든 사용자 거부</value>
  </data>
  <data name="allow_all3" xml:space="preserve">
    <value>모든 사용자 허용</value>
  </data>
  <data name="allow_allow" xml:space="preserve">
    <value>목록에 있는 사용자만 허용</value>
  </data>
  <data name="allow_deny" xml:space="preserve">
    <value>목록에 있는 사용자만 거부</value>
  </data>
  <data name="env_name" xml:space="preserve">
    <value>변수 이름</value>
  </data>
  <data name="env_value" xml:space="preserve">
    <value>값</value>
  </data>
  <data name="env_ename" xml:space="preserve">
    <value>'$1'은(는) 유효한 변수 이름이 아닙니다</value>
  </data>
  <data name="exec_title" xml:space="preserve">
    <value>cron 작업 실행</value>
  </data>
  <data name="exec_ecannot" xml:space="preserve">
    <value>이 사용자의 cron 작업을 실행할 수 없습니다</value>
  </data>
  <data name="exec_cmd" xml:space="preserve">
    <value>명령 $1의 출력..</value>
  </data>
  <data name="exec_none" xml:space="preserve">
    <value>생성된 출력이 없습니다</value>
  </data>
  <data name="acl_users" xml:space="preserve">
    <value>cron 작업 편집이 가능한 대상</value>
  </data>
  <data name="acl_all" xml:space="preserve">
    <value>모든 사용자</value>
  </data>
  <data name="acl_only" xml:space="preserve">
    <value>사용자만</value>
  </data>
  <data name="acl_except" xml:space="preserve">
    <value>사용자를 제외한 모두</value>
  </data>
  <data name="acl_control" xml:space="preserve">
    <value>cron에 대한 사용자 접근을 제어할 수 있습니까?</value>
  </data>
  <data name="log_modify" xml:space="preserve">
    <value>$1의 cron 작업 수정됨</value>
  </data>
  <data name="log_modify_l" xml:space="preserve">
    <value>$1의 cron 작업 "$2" 수정됨</value>
  </data>
  <data name="log_create" xml:space="preserve">
    <value>$1의 cron 작업 작성됨</value>
  </data>
  <data name="log_create_l" xml:space="preserve">
    <value>$1의 cron 작업 "$2" 작성됨</value>
  </data>
  <data name="log_delete" xml:space="preserve">
    <value>$1의 cron 작업 삭제됨</value>
  </data>
  <data name="log_exec" xml:space="preserve">
    <value>$1(으)로서 Cron 작업 실행됨</value>
  </data>
  <data name="log_exec_l" xml:space="preserve">
    <value>$1(으)로서 cron 작업 "$2" 실행됨</value>
  </data>
  <data name="log_allow" xml:space="preserve">
    <value>cron에 대한 사용자 접근 권한 변경됨</value>
  </data>
</root>