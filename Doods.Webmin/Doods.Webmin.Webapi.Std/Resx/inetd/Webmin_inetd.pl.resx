<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Usługi internetowe</value>
  </data>
  <data name="index_list" xml:space="preserve">
    <value>listy usług</value>
  </data>
  <data name="index_save" xml:space="preserve">
    <value>Zachowaj</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>Usuń</value>
  </data>
  <data name="index_create" xml:space="preserve">
    <value>Utwórz</value>
  </data>
  <data name="index_service" xml:space="preserve">
    <value>Usługi internetowe</value>
  </data>
  <data name="index_newservice" xml:space="preserve">
    <value>Utwórz nową usługę internetową</value>
  </data>
  <data name="index_rpc" xml:space="preserve">
    <value>Programy RPC</value>
  </data>
  <data name="index_newrpc" xml:space="preserve">
    <value>Utwórz nowy program RPC</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>Zastosuj zmiany</value>
  </data>
  <data name="index_applymsg" xml:space="preserve">
    <value>Naciśnij ten przycisk, aby zastosować bieżącą konfigurację poprzez wysłanie sygnału SIGHUP do procesu &lt;tt&gt;inetd&lt;/tt&gt;</value>
  </data>
  <data name="error_restart" xml:space="preserve">
    <value>Nie udało sie zrestartować Inetd</value>
  </data>
  <data name="error_saverpc" xml:space="preserve">
    <value>Nie udało sie zachowac programu RPC</value>
  </data>
  <data name="error_invalidprgname" xml:space="preserve">
    <value>'$1' nie jest poprawną nazwą programu</value>
  </data>
  <data name="error_invalidprgnum" xml:space="preserve">
    <value>'$1' nie jest poprawnym numerem programu</value>
  </data>
  <data name="error_invalidver" xml:space="preserve">
    <value>'$1' nie jest poprawną wersją RPC</value>
  </data>
  <data name="error_noprotocol" xml:space="preserve">
    <value>Musisz wybrać co najmniej jeden protokół</value>
  </data>
  <data name="error_notexist" xml:space="preserve">
    <value>'$1' nie istnieje</value>
  </data>
  <data name="error_notexecutable" xml:space="preserve">
    <value>'$1' nie jest uruchamialny</value>
  </data>
  <data name="error_invalidcmd" xml:space="preserve">
    <value>'$1' nie jest poprawnym poleceniem</value>
  </data>
  <data name="error_nouser" xml:space="preserve">
    <value>Musisz wybrać użytkownika</value>
  </data>
  <data name="error_prgexist" xml:space="preserve">
    <value>Program RPC o nazwie $1 już istnieje</value>
  </data>
  <data name="error_prginuse" xml:space="preserve">
    <value>Numer programu RPC $1 jest już używany</value>
  </data>
  <data name="error_saveservice" xml:space="preserve">
    <value>Nie udało się zapisać usługi internetowej</value>
  </data>
  <data name="error_invalidport" xml:space="preserve">
    <value>'$1' nie jest poprawnym numerem portu</value>
  </data>
  <data name="error_invalidservice" xml:space="preserve">
    <value>'$1' nie jest poprawną nazwą usługi</value>
  </data>
  <data name="error_portnum" xml:space="preserve">
    <value>Numer portu $1 musi być &gt;0 i &lt;65536</value>
  </data>
  <data name="error_invalidprg" xml:space="preserve">
    <value>'$1' nie jest poprawnym programem</value>
  </data>
  <data name="error_invalidarg" xml:space="preserve">
    <value>'$1' nie jest poprawną listą argumentów</value>
  </data>
  <data name="error_invalidwrapper" xml:space="preserve">
    <value>'$1' nie jest poprawną usługą TCP-wrappers</value>
  </data>
  <data name="error_invalidpermin" xml:space="preserve">
    <value>'$1' nie jest poprawną maksymalną liczbą połączeń na minutę</value>
  </data>
  <data name="error_invalidchildnum" xml:space="preserve">
    <value>'$1' nie jest poprawną liczba procesów potomnych</value>
  </data>
  <data name="error_childnum" xml:space="preserve">
    <value>Jeśli podano maksymalną liczbę połączeń na minutę, musi być także podana liczba procesów potomnych</value>
  </data>
  <data name="error_serviceexist" xml:space="preserve">
    <value>Usługa korzystająca z portu $1 po protokole $2 już istnieje</value>
  </data>
  <data name="error_nameexist" xml:space="preserve">
    <value>Usługa o nazwie $1 po protokole $2 już istnieje</value>
  </data>
  <data name="error_inetservice" xml:space="preserve">
    <value>Usługa internetowa o nazwie $1 po protokole $2 już istnieje</value>
  </data>
  <data name="editrpc_title1" xml:space="preserve">
    <value>Utwórz program RPC</value>
  </data>
  <data name="editrpc_title2" xml:space="preserve">
    <value>Zmień program RPC</value>
  </data>
  <data name="editrpc_detail" xml:space="preserve">
    <value>Dane programu RPC</value>
  </data>
  <data name="editrpc_prgname" xml:space="preserve">
    <value>Nazwa programu</value>
  </data>
  <data name="editrpc_prgnum" xml:space="preserve">
    <value>Numer programu</value>
  </data>
  <data name="editrpc_aliase" xml:space="preserve">
    <value>Aliasy</value>
  </data>
  <data name="editrpc_server" xml:space="preserve">
    <value>Program serwera</value>
  </data>
  <data name="editrpc_noassigned" xml:space="preserve">
    <value>Nie przypisano programu</value>
  </data>
  <data name="editrpc_disable" xml:space="preserve">
    <value>Program wyłączony..</value>
  </data>
  <data name="editrpc_enable" xml:space="preserve">
    <value>Program włączony..</value>
  </data>
  <data name="editrpc_socket" xml:space="preserve">
    <value>Typ gniazda</value>
  </data>
  <data name="editrpc_version" xml:space="preserve">
    <value>Wersje RPC</value>
  </data>
  <data name="editrpc_protocol" xml:space="preserve">
    <value>Protokół</value>
  </data>
  <data name="editrpc_internal" xml:space="preserve">
    <value>Wewnętrznie</value>
  </data>
  <data name="editrpc_command" xml:space="preserve">
    <value>Polecenie</value>
  </data>
  <data name="editrpc_waitmode" xml:space="preserve">
    <value>Tryb czekania</value>
  </data>
  <data name="editrpc_wait" xml:space="preserve">
    <value>Czekaj na zakończenie</value>
  </data>
  <data name="editrpc_nowait" xml:space="preserve">
    <value>Nie czekaj</value>
  </data>
  <data name="editrpc_execasuser" xml:space="preserve">
    <value>Uruchom jako użytkownik</value>
  </data>
  <data name="editrpc_max" xml:space="preserve">
    <value>Maks. na minutę</value>
  </data>
  <data name="editrpc_default" xml:space="preserve">
    <value>Domyślne</value>
  </data>
  <data name="editrpc_execasgrp" xml:space="preserve">
    <value>Uruchom jako grupa</value>
  </data>
  <data name="editserv_title1" xml:space="preserve">
    <value>Utwórz usługę internetową</value>
  </data>
  <data name="editserv_title2" xml:space="preserve">
    <value>Zmień usługę internetową</value>
  </data>
  <data name="editserv_detail" xml:space="preserve">
    <value>Dane usługi internetowej</value>
  </data>
  <data name="editserv_name" xml:space="preserve">
    <value>Nazwa usługi</value>
  </data>
  <data name="editserv_port" xml:space="preserve">
    <value>Numer portu</value>
  </data>
  <data name="editserv_program" xml:space="preserve">
    <value>Program</value>
  </data>
  <data name="editserv_args" xml:space="preserve">
    <value>Argumenty</value>
  </data>
  <data name="editserv_maxchild" xml:space="preserve">
    <value>Maks. liczba potomnych</value>
  </data>
  <data name="editserv_execlogin" xml:space="preserve">
    <value>Uruchom w klasie logowania</value>
  </data>
  <data name="editserv_wrapper" xml:space="preserve">
    <value>TCP-Wrapper</value>
  </data>
  <data name="editserv_inetd" xml:space="preserve">
    <value>Wewnętrzne polecenie &lt;tt&gt;inetd&lt;/tt&gt;</value>
  </data>
  <data name="log_apply" xml:space="preserve">
    <value>Zastosowano zmiany</value>
  </data>
  <data name="log_create_serv" xml:space="preserve">
    <value>Utworzono usługę $1</value>
  </data>
  <data name="log_modify_serv" xml:space="preserve">
    <value>Zmieniono usługę $1</value>
  </data>
  <data name="log_delete_serv" xml:space="preserve">
    <value>Wyłączono usługę $1</value>
  </data>
  <data name="log_create_prog" xml:space="preserve">
    <value>Utworzono usługę i program $1</value>
  </data>
  <data name="log_modify_prog" xml:space="preserve">
    <value>Zmieniono usługę i program $1</value>
  </data>
  <data name="log_delete_prog" xml:space="preserve">
    <value>Wyłączono usługę i program $1</value>
  </data>
  <data name="log_create_serv_l" xml:space="preserve">
    <value>Utworzono usługę $1 na porcie $2</value>
  </data>
  <data name="log_modify_serv_l" xml:space="preserve">
    <value>Zmieniono usługę $1 na porcie $2</value>
  </data>
  <data name="log_delete_serv_l" xml:space="preserve">
    <value>Wyłączono usługę $1 na porcie $2</value>
  </data>
  <data name="log_create_prog_l" xml:space="preserve">
    <value>Utworzono usługę $1 na porcie $2 dla programu $3</value>
  </data>
  <data name="log_modify_prog_l" xml:space="preserve">
    <value>Zmieniono usługę $1 na porcie $2 dla programu $3</value>
  </data>
  <data name="log_delete_prog_l" xml:space="preserve">
    <value>Wyłączono usługę $1 na porcie $2 dla programu $3</value>
  </data>
  <data name="log_create_rpc" xml:space="preserve">
    <value>Utworzono RPC $1</value>
  </data>
  <data name="log_modify_rpc" xml:space="preserve">
    <value>Zmieniono RPC $1</value>
  </data>
  <data name="log_delete_rpc" xml:space="preserve">
    <value>Wyłączono RPC $1</value>
  </data>
  <data name="log_create_rprog" xml:space="preserve">
    <value>Utworzono RPC i program $1</value>
  </data>
  <data name="log_modify_rprog" xml:space="preserve">
    <value>Zmieniono RPC i program $1</value>
  </data>
  <data name="log_delete_rprog" xml:space="preserve">
    <value>Wyłączono RPC i program $1</value>
  </data>
  <data name="log_create_rpc_l" xml:space="preserve">
    <value>Utworzono RPC $1 o numerze $2</value>
  </data>
  <data name="log_modify_rpc_l" xml:space="preserve">
    <value>Zmieniono RPC $1 o numerze $2</value>
  </data>
  <data name="log_delete_rpc_l" xml:space="preserve">
    <value>Wyłączono RPC $1 o numerze $2</value>
  </data>
  <data name="log_create_rprog_l" xml:space="preserve">
    <value>Utworzono RPC $1 o numerze $2 dla programu $3</value>
  </data>
  <data name="log_modify_rprog_l" xml:space="preserve">
    <value>Zmieniono RPC $1 o numerze $2 dla programu $3</value>
  </data>
  <data name="log_delete_rprog_l" xml:space="preserve">
    <value>Wyłączono RPC $1 o numerze $2 dla programu $3</value>
  </data>
</root>