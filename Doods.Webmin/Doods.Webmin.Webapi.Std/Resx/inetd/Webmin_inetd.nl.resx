<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Internet Services</value>
  </data>
  <data name="index_list" xml:space="preserve">
    <value>service lijst</value>
  </data>
  <data name="index_save" xml:space="preserve">
    <value>Opslaan</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>Verwijder</value>
  </data>
  <data name="index_create" xml:space="preserve">
    <value>Aanmaken</value>
  </data>
  <data name="index_edit" xml:space="preserve">
    <value>Bewerk service :</value>
  </data>
  <data name="index_service" xml:space="preserve">
    <value>Internet Services</value>
  </data>
  <data name="index_newservice" xml:space="preserve">
    <value>Maak een nieuwe internet service</value>
  </data>
  <data name="index_rpc" xml:space="preserve">
    <value>RPC Programma's</value>
  </data>
  <data name="index_newrpc" xml:space="preserve">
    <value>Maak een nieuw RPC programma</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>Veranderingen Toevoegen</value>
  </data>
  <data name="index_applymsg" xml:space="preserve">
    <value>Klik op deze knop om de huidige configuratie door het zenden van een SIGHUP signaal toe te voegen aan het lopende &lt;tt&gt;inetd&lt;/tt&gt; proces</value>
  </data>
  <data name="error_restart" xml:space="preserve">
    <value>Mislukt om Inetd te herstarten</value>
  </data>
  <data name="error_saverpc" xml:space="preserve">
    <value>Mislukt om RPC programma op te slaan</value>
  </data>
  <data name="error_invalidprgname" xml:space="preserve">
    <value>'$1' is geen geldige programma naam</value>
  </data>
  <data name="error_invalidprgnum" xml:space="preserve">
    <value>'$1' is geen geldig programma nummer</value>
  </data>
  <data name="error_invalidver" xml:space="preserve">
    <value>'$1' is geen geldige RPC versie</value>
  </data>
  <data name="error_noprotocol" xml:space="preserve">
    <value>U moet minimaal één protocol kiezen</value>
  </data>
  <data name="error_notexist" xml:space="preserve">
    <value>'$1' bestaat niet</value>
  </data>
  <data name="error_notexecutable" xml:space="preserve">
    <value>'$1' is niet uitvoerbaar</value>
  </data>
  <data name="error_invalidcmd" xml:space="preserve">
    <value>'$1' is geen geldige opdracht</value>
  </data>
  <data name="error_nouser" xml:space="preserve">
    <value>U moet een gebruiker selecteren</value>
  </data>
  <data name="error_user" xml:space="preserve">
    <value>Ontbrekende of ongeldige gebruiker om uit te voeren als</value>
  </data>
  <data name="error_group" xml:space="preserve">
    <value>Ontbrekende of ongeldige groep om uit te voeren als</value>
  </data>
  <data name="error_prgexist" xml:space="preserve">
    <value>Een RPC programma met de naam $1 bestaat reeds</value>
  </data>
  <data name="error_prginuse" xml:space="preserve">
    <value>Het RPC programma nummer $1 is reeds in gebruik</value>
  </data>
  <data name="error_saveservice" xml:space="preserve">
    <value>Mislukt om internet service op te slaan</value>
  </data>
  <data name="error_invalidport" xml:space="preserve">
    <value>'$1' is geen geldig poort nummer</value>
  </data>
  <data name="error_invalidservice" xml:space="preserve">
    <value>'$1' is geen geldige service naam</value>
  </data>
  <data name="error_portnum" xml:space="preserve">
    <value>Poort nummer $1 moet groter dan &gt;0 en kleiner dan &lt;65536 zijn</value>
  </data>
  <data name="error_invalidprg" xml:space="preserve">
    <value>'$1' is geen geldig programma</value>
  </data>
  <data name="error_invalidarg" xml:space="preserve">
    <value>'$1' is geen geldige argumenten lijst</value>
  </data>
  <data name="error_invalidwrapper" xml:space="preserve">
    <value>'$1' is geen geldige TCP-wrappers service</value>
  </data>
  <data name="error_invalidpermin" xml:space="preserve">
    <value>'$1' is geen geldige maximum per minuut</value>
  </data>
  <data name="error_invalidchildnum" xml:space="preserve">
    <value>'$1' is geen geldig aantal child processen</value>
  </data>
  <data name="error_childnum" xml:space="preserve">
    <value>Indien er een maximum per minuut is opgegeven, moet dit ook gedaan worden voor de child processen</value>
  </data>
  <data name="error_serviceexist" xml:space="preserve">
    <value>Een service die poort $1 en protocol $2 gebruikt bestaat reeds</value>
  </data>
  <data name="error_nameexist" xml:space="preserve">
    <value>Een service met de naam $1 en protocol $2 bestaat reeds</value>
  </data>
  <data name="error_inetservice" xml:space="preserve">
    <value>Een internet service met de naam $1 en protocol $2 bestaat reeds</value>
  </data>
  <data name="error_smfservice" xml:space="preserve">
    <value>Mislukt om smf service te updaten met opdracht '$1', foutcode $2</value>
  </data>
  <data name="error_smf_cmdfield" xml:space="preserve">
    <value>Voor smf, filenaam of programma '$1' moet het eerste argument in het opdracht veld overeenkomen met, bijv. be '$2'</value>
  </data>
  <data name="editrpc_title1" xml:space="preserve">
    <value>Maak RPC Programma</value>
  </data>
  <data name="editrpc_title2" xml:space="preserve">
    <value>Bewerk RPC Programma</value>
  </data>
  <data name="editrpc_detail" xml:space="preserve">
    <value>RPC Programma Details</value>
  </data>
  <data name="editrpc_prgname" xml:space="preserve">
    <value>Programma Naam</value>
  </data>
  <data name="editrpc_prgnum" xml:space="preserve">
    <value>Programma Nummer</value>
  </data>
  <data name="editrpc_aliase" xml:space="preserve">
    <value>Aliassen</value>
  </data>
  <data name="editrpc_server" xml:space="preserve">
    <value>Server Programma</value>
  </data>
  <data name="editrpc_noassigned" xml:space="preserve">
    <value>Geen programma toegewezen</value>
  </data>
  <data name="editrpc_disable" xml:space="preserve">
    <value>Programma uitgeschakeld..</value>
  </data>
  <data name="editrpc_enable" xml:space="preserve">
    <value>Programma aangezet..</value>
  </data>
  <data name="editrpc_socket" xml:space="preserve">
    <value>Socket Type</value>
  </data>
  <data name="editrpc_version" xml:space="preserve">
    <value>RPC Versies</value>
  </data>
  <data name="editrpc_protocol" xml:space="preserve">
    <value>Protocol</value>
  </data>
  <data name="editrpc_internal" xml:space="preserve">
    <value>Intern</value>
  </data>
  <data name="editrpc_command" xml:space="preserve">
    <value>Opdracht</value>
  </data>
  <data name="editrpc_waitmode" xml:space="preserve">
    <value>Wacht Mode</value>
  </data>
  <data name="editrpc_wait" xml:space="preserve">
    <value>Wacht totdat het compleet is</value>
  </data>
  <data name="editrpc_nowait" xml:space="preserve">
    <value>Niet wachten</value>
  </data>
  <data name="editrpc_execasuser" xml:space="preserve">
    <value>Uitvoeren als Gebruiker</value>
  </data>
  <data name="editrpc_max" xml:space="preserve">
    <value>Max per Minuut</value>
  </data>
  <data name="editrpc_default" xml:space="preserve">
    <value>Standaard</value>
  </data>
  <data name="editrpc_execasgrp" xml:space="preserve">
    <value>Uitvoeren als Groep</value>
  </data>
  <data name="editserv_title1" xml:space="preserve">
    <value>Maak Internet Service</value>
  </data>
  <data name="editserv_title2" xml:space="preserve">
    <value>Bewerk Internet Service</value>
  </data>
  <data name="editserv_detail" xml:space="preserve">
    <value>Internet Service Details</value>
  </data>
  <data name="editserv_name" xml:space="preserve">
    <value>Service Naam</value>
  </data>
  <data name="editserv_port" xml:space="preserve">
    <value>Poort Nummer</value>
  </data>
  <data name="editserv_program" xml:space="preserve">
    <value>Programma</value>
  </data>
  <data name="editserv_args" xml:space="preserve">
    <value>Args</value>
  </data>
  <data name="editserv_maxchild" xml:space="preserve">
    <value>Max Child Processen</value>
  </data>
  <data name="editserv_execlogin" xml:space="preserve">
    <value>Uitvoeren Als Login Class</value>
  </data>
  <data name="editserv_wrapper" xml:space="preserve">
    <value>TCP-Wrapper</value>
  </data>
  <data name="editserv_inetd" xml:space="preserve">
    <value>Intern naar &lt;tt&gt;inetd&lt;/tt&gt;</value>
  </data>
  <data name="editserv_qm" xml:space="preserve">
    <value>Opdracht bestaat misschien niet?</value>
  </data>
  <data name="editserv_ename" xml:space="preserve">
    <value>Er bestaat geen service met die naam en protocol</value>
  </data>
  <data name="log_apply" xml:space="preserve">
    <value>Veranderingen toegevoegd</value>
  </data>
  <data name="log_create_serv" xml:space="preserve">
    <value>Gemaakte service $1</value>
  </data>
  <data name="log_modify_serv" xml:space="preserve">
    <value>Gemodificeerde service $1</value>
  </data>
  <data name="log_delete_serv" xml:space="preserve">
    <value>Verwijderde service $1</value>
  </data>
  <data name="log_create_prog" xml:space="preserve">
    <value>Gemaakte service en programma $1</value>
  </data>
  <data name="log_modify_prog" xml:space="preserve">
    <value>Gemodificeerde service en programma $1</value>
  </data>
  <data name="log_delete_prog" xml:space="preserve">
    <value>Verwijderde service en programma $1</value>
  </data>
  <data name="log_create_serv_l" xml:space="preserve">
    <value>Aangemaakte service $1 op poort $2</value>
  </data>
  <data name="log_modify_serv_l" xml:space="preserve">
    <value>Gemodificeerde service $1 op poort $2</value>
  </data>
  <data name="log_delete_serv_l" xml:space="preserve">
    <value>Verwijderde service $1 op poort $2</value>
  </data>
  <data name="log_create_prog_l" xml:space="preserve">
    <value>Gemaakte service $1 op poort $2 voor programma $3</value>
  </data>
  <data name="log_modify_prog_l" xml:space="preserve">
    <value>Gemodificeerde service $1 op poort $2 voor programma $3</value>
  </data>
  <data name="log_delete_prog_l" xml:space="preserve">
    <value>Verwijderde service op poort $2 voor programma $3</value>
  </data>
  <data name="log_create_rpc" xml:space="preserve">
    <value>Gemaakte RPC $1</value>
  </data>
  <data name="log_modify_rpc" xml:space="preserve">
    <value>Gemodificeerd RPC $1</value>
  </data>
  <data name="log_delete_rpc" xml:space="preserve">
    <value>Verwijderde RPC $1</value>
  </data>
  <data name="log_create_rprog" xml:space="preserve">
    <value>Gemaakte RPC en programma $1</value>
  </data>
  <data name="log_modify_rprog" xml:space="preserve">
    <value>Gemodificeerd RPC en programma $1</value>
  </data>
  <data name="log_delete_rprog" xml:space="preserve">
    <value>Verwijderde RPC en programma $1</value>
  </data>
  <data name="log_create_rpc_l" xml:space="preserve">
    <value>Gemaakte RPC $1 nummer $2</value>
  </data>
  <data name="log_modify_rpc_l" xml:space="preserve">
    <value>Gemodificeerd RPC $1 nummer $2</value>
  </data>
  <data name="log_delete_rpc_l" xml:space="preserve">
    <value>Verwijderde RPC $1 nummer $2</value>
  </data>
  <data name="log_create_rprog_l" xml:space="preserve">
    <value>Gemaakte RPC $1 nummer $2 voor programma $3</value>
  </data>
  <data name="log_modify_rprog_l" xml:space="preserve">
    <value>Gemodificeerd RPC $1 nummer $2 voor programma $3</value>
  </data>
  <data name="log_delete_rprog_l" xml:space="preserve">
    <value>Verwijderde RPC $1 nummer $2 voor programma $3</value>
  </data>
</root>