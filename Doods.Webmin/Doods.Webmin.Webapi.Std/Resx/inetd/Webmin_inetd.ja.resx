<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Inetd インターネット サービス</value>
  </data>
  <data name="index_list" xml:space="preserve">
    <value>サービス リスト</value>
  </data>
  <data name="index_save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>削除</value>
  </data>
  <data name="index_create" xml:space="preserve">
    <value>作成</value>
  </data>
  <data name="index_service" xml:space="preserve">
    <value>インターネット サービス</value>
  </data>
  <data name="index_newservice" xml:space="preserve">
    <value>新規のインターネット サービスの作成</value>
  </data>
  <data name="index_rpc" xml:space="preserve">
    <value>RPC プログラム</value>
  </data>
  <data name="index_newrpc" xml:space="preserve">
    <value>新規 RPC プログラムの作成</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>変更を適用</value>
  </data>
  <data name="index_applymsg" xml:space="preserve">
    <value>実行中の&lt;tt&gt;inetd&lt;/tt&gt; プロセスに SIGHUP 信号を送信して現在の設定を適用するには、このボタンをクリックしてください。</value>
  </data>
  <data name="error_restart" xml:space="preserve">
    <value>Inetd を再起動できませんでした</value>
  </data>
  <data name="error_saverpc" xml:space="preserve">
    <value>RPC プログラムを保存できませんでした</value>
  </data>
  <data name="error_invalidprgname" xml:space="preserve">
    <value>'$1' は無効なプログラム名です</value>
  </data>
  <data name="error_invalidprgnum" xml:space="preserve">
    <value>'$1' は無効なプログラム番号です</value>
  </data>
  <data name="error_invalidver" xml:space="preserve">
    <value>'$1' は無効なRPC バージョンです</value>
  </data>
  <data name="error_noprotocol" xml:space="preserve">
    <value>少なくとも 1つのプロトコルを選択する必要があります</value>
  </data>
  <data name="error_notexist" xml:space="preserve">
    <value>'$1' は存在しません</value>
  </data>
  <data name="error_notexecutable" xml:space="preserve">
    <value>'$1' は実行できません</value>
  </data>
  <data name="error_invalidcmd" xml:space="preserve">
    <value>'$1' は無効なコマンドです</value>
  </data>
  <data name="error_nouser" xml:space="preserve">
    <value>ユーザを選択する必要があります</value>
  </data>
  <data name="error_prgexist" xml:space="preserve">
    <value>$1 という RPC プログラムはすでに存在します</value>
  </data>
  <data name="error_prginuse" xml:space="preserve">
    <value>RPC プログラム番号 $1 はすでに使用されています</value>
  </data>
  <data name="error_saveservice" xml:space="preserve">
    <value>インターネット サービスを保存できませんでした</value>
  </data>
  <data name="error_invalidport" xml:space="preserve">
    <value>'$1' は無効なポート番号です</value>
  </data>
  <data name="error_invalidservice" xml:space="preserve">
    <value>'$1' は無効なサービス名です</value>
  </data>
  <data name="error_portnum" xml:space="preserve">
    <value>ポート番号 $1 は 0 より大きくて65536 より小さくなければなりません。 </value>
  </data>
  <data name="error_invalidprg" xml:space="preserve">
    <value>'$1' は無効なプログラムです</value>
  </data>
  <data name="error_invalidarg" xml:space="preserve">
    <value>'$1' は無効な引数リストです</value>
  </data>
  <data name="error_invalidwrapper" xml:space="preserve">
    <value>'$1' は無効な TCP ラッパー サービス名です</value>
  </data>
  <data name="error_invalidpermin" xml:space="preserve">
    <value>'$1' は有効な分単位最大値ではありません</value>
  </data>
  <data name="error_invalidchildnum" xml:space="preserve">
    <value>'$1'は無効な子の処理数です</value>
  </data>
  <data name="error_childnum" xml:space="preserve">
    <value>分単位の最大値を指定した場合は、子の処理数も指定する必要があります。</value>
  </data>
  <data name="error_serviceexist" xml:space="preserve">
    <value>ポート $1 とプロトコル $2 を使用したサービスはすでに存在します</value>
  </data>
  <data name="error_nameexist" xml:space="preserve">
    <value>名前 $1 とプロトコル $2 を使用したサービスはすでに存在します</value>
  </data>
  <data name="error_inetservice" xml:space="preserve">
    <value>名前 $1 とプロトコル $2 を使用したインターネット サービスはすでに存在します</value>
  </data>
  <data name="editrpc_title1" xml:space="preserve">
    <value>RPC プログラムの作成</value>
  </data>
  <data name="editrpc_title2" xml:space="preserve">
    <value>RPC プログラムの編集</value>
  </data>
  <data name="editrpc_detail" xml:space="preserve">
    <value>RPC プログラムの詳細</value>
  </data>
  <data name="editrpc_prgname" xml:space="preserve">
    <value>プログラム名</value>
  </data>
  <data name="editrpc_prgnum" xml:space="preserve">
    <value>プログラム数</value>
  </data>
  <data name="editrpc_aliase" xml:space="preserve">
    <value>エイリアス</value>
  </data>
  <data name="editrpc_server" xml:space="preserve">
    <value>サーバ プログラム</value>
  </data>
  <data name="editrpc_noassigned" xml:space="preserve">
    <value>割り当てられたプログラムはありません</value>
  </data>
  <data name="editrpc_disable" xml:space="preserve">
    <value>プログラム無効..</value>
  </data>
  <data name="editrpc_enable" xml:space="preserve">
    <value>プログラム有効..</value>
  </data>
  <data name="editrpc_socket" xml:space="preserve">
    <value>ソケットの種類</value>
  </data>
  <data name="editrpc_version" xml:space="preserve">
    <value>RPC バージョン</value>
  </data>
  <data name="editrpc_protocol" xml:space="preserve">
    <value>プロトコル</value>
  </data>
  <data name="editrpc_internal" xml:space="preserve">
    <value>内部</value>
  </data>
  <data name="editrpc_command" xml:space="preserve">
    <value>コマンド</value>
  </data>
  <data name="editrpc_waitmode" xml:space="preserve">
    <value>待機モード</value>
  </data>
  <data name="editrpc_wait" xml:space="preserve">
    <value>終了まで待機</value>
  </data>
  <data name="editrpc_nowait" xml:space="preserve">
    <value>待機しない</value>
  </data>
  <data name="editrpc_execasuser" xml:space="preserve">
    <value>次のユーザとして実行</value>
  </data>
  <data name="editrpc_max" xml:space="preserve">
    <value>分単位の最大値</value>
  </data>
  <data name="editrpc_default" xml:space="preserve">
    <value>デフォルト</value>
  </data>
  <data name="editrpc_execasgrp" xml:space="preserve">
    <value>次のグループとして実行</value>
  </data>
  <data name="editserv_title1" xml:space="preserve">
    <value>インターネット サービスの作成</value>
  </data>
  <data name="editserv_title2" xml:space="preserve">
    <value>インターネット サービスの編集</value>
  </data>
  <data name="editserv_detail" xml:space="preserve">
    <value>インターネット サービスの詳細</value>
  </data>
  <data name="editserv_name" xml:space="preserve">
    <value>サービス名</value>
  </data>
  <data name="editserv_port" xml:space="preserve">
    <value>ポート番号</value>
  </data>
  <data name="editserv_program" xml:space="preserve">
    <value>プログラム</value>
  </data>
  <data name="editserv_args" xml:space="preserve">
    <value>Args</value>
  </data>
  <data name="editserv_maxchild" xml:space="preserve">
    <value>子処理最大値</value>
  </data>
  <data name="editserv_execlogin" xml:space="preserve">
    <value>ログイン クラスとして実行</value>
  </data>
  <data name="editserv_wrapper" xml:space="preserve">
    <value>TCP ラッパー</value>
  </data>
  <data name="editserv_inetd" xml:space="preserve">
    <value>inetd&lt;tt&gt;経由&lt;/tt&gt;</value>
  </data>
  <data name="log_apply" xml:space="preserve">
    <value>変更を適用しました</value>
  </data>
  <data name="log_create_serv" xml:space="preserve">
    <value>サービス $1 を作成しました</value>
  </data>
  <data name="log_modify_serv" xml:space="preserve">
    <value>サービス $1 を変更しました</value>
  </data>
  <data name="log_delete_serv" xml:space="preserve">
    <value>サービス $1 を削除しました</value>
  </data>
  <data name="log_create_prog" xml:space="preserve">
    <value>サービスとプログラム $1 を作成しました</value>
  </data>
  <data name="log_modify_prog" xml:space="preserve">
    <value>サービスとプログラム $1 を変更しました</value>
  </data>
  <data name="log_delete_prog" xml:space="preserve">
    <value>サービスとプログラム $1 を削除しました</value>
  </data>
  <data name="log_create_serv_l" xml:space="preserve">
    <value>ポート $2 上のサービス $1 を作成しました</value>
  </data>
  <data name="log_modify_serv_l" xml:space="preserve">
    <value>ポート $2 上のサービス $1 を変更しました</value>
  </data>
  <data name="log_delete_serv_l" xml:space="preserve">
    <value>ポート $2 上のサービス $1 を削除しました</value>
  </data>
  <data name="log_create_prog_l" xml:space="preserve">
    <value>ポート $2上のプログラム $3 用サービス $1 を作成しました</value>
  </data>
  <data name="log_modify_prog_l" xml:space="preserve">
    <value>ポート $2上のプログラム $3 用サービス $1 を変更しました</value>
  </data>
  <data name="log_delete_prog_l" xml:space="preserve">
    <value>ポート $2上のプログラム $3 用サービス $1 を削除しました</value>
  </data>
  <data name="log_create_rpc" xml:space="preserve">
    <value>RPC $1 を作成しました</value>
  </data>
  <data name="log_modify_rpc" xml:space="preserve">
    <value>RPC $1 を変更しました</value>
  </data>
  <data name="log_delete_rpc" xml:space="preserve">
    <value>RPC $1 を削除しました</value>
  </data>
  <data name="log_create_rprog" xml:space="preserve">
    <value>RPC とプログラム $1 を作成しました</value>
  </data>
  <data name="log_modify_rprog" xml:space="preserve">
    <value>RPC とプログラム $1 を変更しました</value>
  </data>
  <data name="log_delete_rprog" xml:space="preserve">
    <value>RPC とプログラム $1 を削除しました</value>
  </data>
  <data name="log_create_rpc_l" xml:space="preserve">
    <value>RPC $1 番号 $2 を作成しました</value>
  </data>
  <data name="log_modify_rpc_l" xml:space="preserve">
    <value>RPC $1 番号 $2 を変更しました</value>
  </data>
  <data name="log_delete_rpc_l" xml:space="preserve">
    <value>RPC $1 番号 $2 を削除しました</value>
  </data>
  <data name="log_create_rprog_l" xml:space="preserve">
    <value>プログラム $3 用のRPC $1 番号 $2 を作成しました</value>
  </data>
  <data name="log_modify_rprog_l" xml:space="preserve">
    <value>プログラム $3 用のRPC $1 番号 $2 を変更しました</value>
  </data>
  <data name="log_delete_rprog_l" xml:space="preserve">
    <value>プログラム $3 用のRPC $1 番号 $2 を削除しました</value>
  </data>
</root>