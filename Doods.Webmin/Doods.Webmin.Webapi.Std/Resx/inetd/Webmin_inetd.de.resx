<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Internet-Dienste und Protokolle</value>
  </data>
  <data name="index_list" xml:space="preserve">
    <value>Dienste-Liste</value>
  </data>
  <data name="index_save" xml:space="preserve">
    <value>Speichern</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="index_create" xml:space="preserve">
    <value>Erstellen</value>
  </data>
  <data name="index_edit" xml:space="preserve">
    <value>Dienst bearbeiten:</value>
  </data>
  <data name="index_service" xml:space="preserve">
    <value>Internet-Dienste</value>
  </data>
  <data name="index_newservice" xml:space="preserve">
    <value>Einen neuen Internet-Dienst erstellen.</value>
  </data>
  <data name="index_rpc" xml:space="preserve">
    <value>RPC-Programme</value>
  </data>
  <data name="index_newrpc" xml:space="preserve">
    <value>Ein neues RPC-Programm erstellen</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>Änderungen anwenden</value>
  </data>
  <data name="index_applymsg" xml:space="preserve">
    <value>Drücken Sie diese Schaltfläche, um die aktuelle Konfiguration durch Senden eines SIGHUP-Signals an den laufenden &lt;tt&gt;inetd&lt;/tt&gt;-Prozeß anzuwenden.</value>
  </data>
  <data name="index_search" xml:space="preserve">
    <value>Anzeige Dienste Übereinstimmung:</value>
  </data>
  <data name="index_sok" xml:space="preserve">
    <value>Suche</value>
  </data>
  <data name="index_toomany" xml:space="preserve">
    <value>Es gibt viele Internet-Dienste, um diese auf hier anzuzeigen.</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>Keine Internet-Dienste entsprechen Ihrer Suche.</value>
  </data>
  <data name="error_restart" xml:space="preserve">
    <value>Inetd konnte nicht neu gestartet werden</value>
  </data>
  <data name="error_saverpc" xml:space="preserve">
    <value>RPC-Programm konnte nicht gespeichert werden</value>
  </data>
  <data name="error_invalidprgname" xml:space="preserve">
    <value>'$1' ist kein gültiger Programmname</value>
  </data>
  <data name="error_invalidprgnum" xml:space="preserve">
    <value>'$1' ist keine gültige Programmnummer!</value>
  </data>
  <data name="error_invalidver" xml:space="preserve">
    <value>'$1' ist keine gültige RPC-Version!</value>
  </data>
  <data name="error_noprotocol" xml:space="preserve">
    <value>Sie müssen mindestens ein Protkoll auswählen</value>
  </data>
  <data name="error_notexist" xml:space="preserve">
    <value>'$1' existiert nicht</value>
  </data>
  <data name="error_notexecutable" xml:space="preserve">
    <value>'$1' ist nicht ausführbar</value>
  </data>
  <data name="error_invalidcmd" xml:space="preserve">
    <value>'$1' ist kein gültiger Befehl!</value>
  </data>
  <data name="error_nouser" xml:space="preserve">
    <value>Sie müssen einen Benutzer auswählen</value>
  </data>
  <data name="error_user" xml:space="preserve">
    <value>Ausführender Benutzer fehlend oder ungültig</value>
  </data>
  <data name="error_group" xml:space="preserve">
    <value>Ausführende Benutzergruppe fehlend oder ungültig!</value>
  </data>
  <data name="error_prgexist" xml:space="preserve">
    <value>Ein RPC-Programm mit Namen $1 existiert bereits</value>
  </data>
  <data name="error_prginuse" xml:space="preserve">
    <value>Das RPC-Programm Nummer $1 wird bereits benutzt</value>
  </data>
  <data name="error_saveservice" xml:space="preserve">
    <value>Internet-Service konnte nicht gespeichert werden</value>
  </data>
  <data name="error_invalidport" xml:space="preserve">
    <value>'$1' ist keine gültige Portnummer</value>
  </data>
  <data name="error_invalidservice" xml:space="preserve">
    <value>'$1' ist kein gültiger Dienstename</value>
  </data>
  <data name="error_portnum" xml:space="preserve">
    <value>Die Portnummer $1 muss &gt;0 und &lt;65536 sein</value>
  </data>
  <data name="error_invalidprg" xml:space="preserve">
    <value>'$1' ist kein gültiges Programm</value>
  </data>
  <data name="error_invalidarg" xml:space="preserve">
    <value>'$1' ist keine gültige Argument-Liste!</value>
  </data>
  <data name="error_invalidwrapper" xml:space="preserve">
    <value>'$1' ist kein gültiger TCP-Wrapper Dienste</value>
  </data>
  <data name="error_invalidpermin" xml:space="preserve">
    <value>'$1' ist kein gültiges Maximum pro Minute</value>
  </data>
  <data name="error_invalidchildnum" xml:space="preserve">
    <value>'$1' ist keine gültige Nummer von Kindprozessen!</value>
  </data>
  <data name="error_childnum" xml:space="preserve">
    <value>Wenn ein Maximum pro Minute angegeben wird, muß auch eine Anzahl von Kindprozessen angegeben werden.</value>
  </data>
  <data name="error_serviceexist" xml:space="preserve">
    <value>Ein Service, der Port $1 und Protokoll $2 benutzt existiert bereits</value>
  </data>
  <data name="error_nameexist" xml:space="preserve">
    <value>Ein Service mit dem Namen $1 und dem Protokoll $2 existiert bereits</value>
  </data>
  <data name="error_inetservice" xml:space="preserve">
    <value>Ein Internet-Dienste mit dem Namen $1 und dem Protokoll $2 existiert bereits</value>
  </data>
  <data name="error_smfservice" xml:space="preserve">
    <value>Konnte den Dienst smf nicht mit der Kommandzeile '$1' aktualisieren. Fehlernummer: $2</value>
  </data>
  <data name="error_smf_cmdfield" xml:space="preserve">
    <value>Für smf muss der Dateiname des Programmes '$1' dem ersten Argument der Kommandozeile entsprechen, z.B. '$2'</value>
  </data>
  <data name="editrpc_title1" xml:space="preserve">
    <value>Erstelle RPC-Programm</value>
  </data>
  <data name="editrpc_title2" xml:space="preserve">
    <value>Bearbeite RPC-Programm</value>
  </data>
  <data name="editrpc_detail" xml:space="preserve">
    <value>RPC-Programm Details</value>
  </data>
  <data name="editrpc_prgname" xml:space="preserve">
    <value>Programmname</value>
  </data>
  <data name="editrpc_prgnum" xml:space="preserve">
    <value>Programmnummer</value>
  </data>
  <data name="editrpc_aliase" xml:space="preserve">
    <value>Aliase</value>
  </data>
  <data name="editrpc_server" xml:space="preserve">
    <value>Server-Programm</value>
  </data>
  <data name="editrpc_act" xml:space="preserve">
    <value>Programm Zustand</value>
  </data>
  <data name="editrpc_noassigned" xml:space="preserve">
    <value>Kein Programm zugeordnet</value>
  </data>
  <data name="editrpc_disable" xml:space="preserve">
    <value>Programm deaktiviert...</value>
  </data>
  <data name="editrpc_enable" xml:space="preserve">
    <value>Programm aktiviert...</value>
  </data>
  <data name="editrpc_socket" xml:space="preserve">
    <value>Socket-Typ</value>
  </data>
  <data name="editrpc_stream" xml:space="preserve">
    <value>Stream</value>
  </data>
  <data name="editrpc_dgram" xml:space="preserve">
    <value>Datagram</value>
  </data>
  <data name="editrpc_tli" xml:space="preserve">
    <value>TLI</value>
  </data>
  <data name="editrpc_version" xml:space="preserve">
    <value>RPC-Versionen</value>
  </data>
  <data name="editrpc_protocol" xml:space="preserve">
    <value>Protokoll</value>
  </data>
  <data name="editrpc_internal" xml:space="preserve">
    <value>Intern</value>
  </data>
  <data name="editrpc_command" xml:space="preserve">
    <value>Kommando</value>
  </data>
  <data name="editrpc_waitmode" xml:space="preserve">
    <value>Warte Modus</value>
  </data>
  <data name="editrpc_wait" xml:space="preserve">
    <value>Warten bis beendet</value>
  </data>
  <data name="editrpc_nowait" xml:space="preserve">
    <value>Nicht warten</value>
  </data>
  <data name="editrpc_execasuser" xml:space="preserve">
    <value>Ausführen als Benutzer</value>
  </data>
  <data name="editrpc_max" xml:space="preserve">
    <value>Maximum pro Minute</value>
  </data>
  <data name="editrpc_default" xml:space="preserve">
    <value>Vorgabe</value>
  </data>
  <data name="editrpc_execasgrp" xml:space="preserve">
    <value>Ausführen als Gruppe</value>
  </data>
  <data name="editserv_title1" xml:space="preserve">
    <value>Erstelle Internet-Dienste</value>
  </data>
  <data name="editserv_title2" xml:space="preserve">
    <value>Bearbeite Internet-Dienste</value>
  </data>
  <data name="editserv_detail" xml:space="preserve">
    <value>Internet-Dienste Details</value>
  </data>
  <data name="editserv_name" xml:space="preserve">
    <value>Dienste-Name</value>
  </data>
  <data name="editserv_port" xml:space="preserve">
    <value>Port-Nummer</value>
  </data>
  <data name="editserv_program" xml:space="preserve">
    <value>Programm</value>
  </data>
  <data name="editserv_args" xml:space="preserve">
    <value>Argumente</value>
  </data>
  <data name="editserv_maxchild" xml:space="preserve">
    <value>Max. Anzahl Kindprozesse</value>
  </data>
  <data name="editserv_execlogin" xml:space="preserve">
    <value>Ausführen als Login Klasse</value>
  </data>
  <data name="editserv_wrapper" xml:space="preserve">
    <value>TCP-Wrapper</value>
  </data>
  <data name="editserv_inetd" xml:space="preserve">
    <value>Intern zu &lt;tt&gt;inetd&lt;/tt&gt;</value>
  </data>
  <data name="editserv_qm" xml:space="preserve">
    <value>Befehl existiert eventuell nicht?</value>
  </data>
  <data name="editserv_ename" xml:space="preserve">
    <value>Es existiert kein Dienst mit diesem Namen und Protokoll</value>
  </data>
  <data name="log_apply" xml:space="preserve">
    <value>angewendete Änderungen</value>
  </data>
  <data name="log_create_serv" xml:space="preserve">
    <value>Service $1 erstellt</value>
  </data>
  <data name="log_modify_serv" xml:space="preserve">
    <value>Dienste $1 geändert</value>
  </data>
  <data name="log_delete_serv" xml:space="preserve">
    <value>Dienste $1 gelöscht</value>
  </data>
  <data name="log_create_prog" xml:space="preserve">
    <value>Dienste und Programm $1 erstellt</value>
  </data>
  <data name="log_modify_prog" xml:space="preserve">
    <value>Dienste und Programm $1 geändert</value>
  </data>
  <data name="log_delete_prog" xml:space="preserve">
    <value>Dienste und Programm $1 gelöscht</value>
  </data>
  <data name="log_create_serv_l" xml:space="preserve">
    <value>Dienste $1 auf Port $2 erstellt</value>
  </data>
  <data name="log_modify_serv_l" xml:space="preserve">
    <value>Dienste $1 auf Port $2 geändert</value>
  </data>
  <data name="log_delete_serv_l" xml:space="preserve">
    <value>Dienste $1 auf Port $2 gelöscht</value>
  </data>
  <data name="log_create_prog_l" xml:space="preserve">
    <value>Dienste $1 auf Port $2 für Programm $3 erstellt</value>
  </data>
  <data name="log_modify_prog_l" xml:space="preserve">
    <value>Dienste $1 auf Port $2 für Programm $3 geändert</value>
  </data>
  <data name="log_delete_prog_l" xml:space="preserve">
    <value>Dienste $1 auf Port $2 für Programm $3 gelöscht</value>
  </data>
  <data name="log_create_rpc" xml:space="preserve">
    <value>RPC $1 erstellt</value>
  </data>
  <data name="log_modify_rpc" xml:space="preserve">
    <value>RPC $1 geändert</value>
  </data>
  <data name="log_delete_rpc" xml:space="preserve">
    <value>RPC $1 gelöscht</value>
  </data>
  <data name="log_create_rprog" xml:space="preserve">
    <value>RPC und Programm $1 erstellt</value>
  </data>
  <data name="log_modify_rprog" xml:space="preserve">
    <value>RPC und Programm $1 geändert</value>
  </data>
  <data name="log_delete_rprog" xml:space="preserve">
    <value>RPC und Programm $1 gelöscht</value>
  </data>
  <data name="log_create_rpc_l" xml:space="preserve">
    <value>RPC $1 Nummer $2 erstellt</value>
  </data>
  <data name="log_modify_rpc_l" xml:space="preserve">
    <value>RPC $1 Nummer $2 geändert</value>
  </data>
  <data name="log_delete_rpc_l" xml:space="preserve">
    <value>RPC $1 Nummer $2 gelöscht</value>
  </data>
  <data name="log_create_rprog_l" xml:space="preserve">
    <value>RPC $1 Nummer $2 für Programm $3 erstellt</value>
  </data>
  <data name="log_modify_rprog_l" xml:space="preserve">
    <value>RPC $1 Nummer $2 für Programm $3 geändert</value>
  </data>
  <data name="log_delete_rprog_l" xml:space="preserve">
    <value>RPC $1 Nummer $2 für Programm $3 gelöscht</value>
  </data>
</root>