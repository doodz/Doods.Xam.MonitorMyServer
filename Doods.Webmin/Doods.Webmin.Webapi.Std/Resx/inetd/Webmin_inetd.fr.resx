<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Services internet</value>
  </data>
  <data name="index_list" xml:space="preserve">
    <value>list des services</value>
  </data>
  <data name="index_save" xml:space="preserve">
    <value>Enregistrer</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="index_create" xml:space="preserve">
    <value>Créer</value>
  </data>
  <data name="index_service" xml:space="preserve">
    <value>Services internet</value>
  </data>
  <data name="index_newservice" xml:space="preserve">
    <value>Créer un nouveau service internet</value>
  </data>
  <data name="index_rpc" xml:space="preserve">
    <value>Programmes RPC</value>
  </data>
  <data name="index_newrpc" xml:space="preserve">
    <value>Créer un nouveau programme RPC</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>Mettre à jour</value>
  </data>
  <data name="index_applymsg" xml:space="preserve">
    <value>Cliquer sur ce bouton pour prendre en compte la configuration courante en envoyant un signal &lt;tt&gt;SIGHUP&lt;/tt&gt; au processus &lt;tt&gt;inetd&lt;/tt&gt; en cours.</value>
  </data>
  <data name="error_restart" xml:space="preserve">
    <value>Impossible de redémarrer &lt;tt&gt;inetd&lt;/tt&gt;</value>
  </data>
  <data name="error_saverpc" xml:space="preserve">
    <value>Impossible de créer le programme RPC</value>
  </data>
  <data name="error_invalidprgname" xml:space="preserve">
    <value>'$1' n'est pas un nom de programme valide</value>
  </data>
  <data name="error_invalidprgnum" xml:space="preserve">
    <value>'$1' n'est pas un numéro de programme valide</value>
  </data>
  <data name="error_invalidver" xml:space="preserve">
    <value>'$1' n'est pas une version de RPC valide</value>
  </data>
  <data name="error_noprotocol" xml:space="preserve">
    <value>Vous devez choisir au moins un protocole</value>
  </data>
  <data name="error_notexist" xml:space="preserve">
    <value>'$1' n'existe pas</value>
  </data>
  <data name="error_notexecutable" xml:space="preserve">
    <value>'$1' n'est pas exécutable</value>
  </data>
  <data name="error_invalidcmd" xml:space="preserve">
    <value>'$1' n'est pas une commande valide</value>
  </data>
  <data name="error_nouser" xml:space="preserve">
    <value>Vous devez choisir un utilisateur</value>
  </data>
  <data name="error_prgexist" xml:space="preserve">
    <value>Un programme RPC du nom de $1 existe déjà</value>
  </data>
  <data name="error_prginuse" xml:space="preserve">
    <value>Le numéro de programme RPC $1 est déjà utilisé</value>
  </data>
  <data name="error_saveservice" xml:space="preserve">
    <value>Impossible de créer le service internet</value>
  </data>
  <data name="error_invalidport" xml:space="preserve">
    <value>'$1' n'est pas un numéro de port valide</value>
  </data>
  <data name="error_invalidservice" xml:space="preserve">
    <value>'$1' n'est pas un nom de service valide</value>
  </data>
  <data name="error_portnum" xml:space="preserve">
    <value>Le numéro de port $1 doit être &gt;0 et &lt;65536</value>
  </data>
  <data name="error_invalidprg" xml:space="preserve">
    <value>'$1' n'est pas un programme valide</value>
  </data>
  <data name="error_invalidarg" xml:space="preserve">
    <value>'$1' n'est pas une liste d'arguments valide</value>
  </data>
  <data name="error_invalidwrapper" xml:space="preserve">
    <value>'$1' n'est pas un service des TCP-wrappers valide</value>
  </data>
  <data name="error_invalidpermin" xml:space="preserve">
    <value>'$1' n'est pas un maximum valide d'exécutions par minutes</value>
  </data>
  <data name="error_invalidchildnum" xml:space="preserve">
    <value>'$1' n'est pas un nombre valide de processus fils</value>
  </data>
  <data name="error_childnum" xml:space="preserve">
    <value>Il faut spécifier un nombre de processus fils si le maximum d'exécutions par minute est spécifié</value>
  </data>
  <data name="error_serviceexist" xml:space="preserve">
    <value>Un service utilisant le port $1 et le protocole $2 existe déjà</value>
  </data>
  <data name="error_nameexist" xml:space="preserve">
    <value>Un service du nom de $1 et utilisant le protocole $2 existe déjà</value>
  </data>
  <data name="error_inetservice" xml:space="preserve">
    <value>Un service internet du nom de $1 et utilisant le protocole $2 existe déjà</value>
  </data>
  <data name="editrpc_title1" xml:space="preserve">
    <value>Création d'un programme RPC</value>
  </data>
  <data name="editrpc_title2" xml:space="preserve">
    <value>Modification d'un programme RPC</value>
  </data>
  <data name="editrpc_detail" xml:space="preserve">
    <value>Details du programme RPC</value>
  </data>
  <data name="editrpc_prgname" xml:space="preserve">
    <value>Nom du programme</value>
  </data>
  <data name="editrpc_prgnum" xml:space="preserve">
    <value>Numéro du programme</value>
  </data>
  <data name="editrpc_aliase" xml:space="preserve">
    <value>Synonymes</value>
  </data>
  <data name="editrpc_server" xml:space="preserve">
    <value>Serveur</value>
  </data>
  <data name="editrpc_noassigned" xml:space="preserve">
    <value>Aucun programme assigné</value>
  </data>
  <data name="editrpc_disable" xml:space="preserve">
    <value>Programme arrêté</value>
  </data>
  <data name="editrpc_enable" xml:space="preserve">
    <value>Programme en fonctionnement</value>
  </data>
  <data name="editrpc_socket" xml:space="preserve">
    <value>Type de socket</value>
  </data>
  <data name="editrpc_version" xml:space="preserve">
    <value>Version de RPC</value>
  </data>
  <data name="editrpc_protocol" xml:space="preserve">
    <value>Protocole</value>
  </data>
  <data name="editrpc_internal" xml:space="preserve">
    <value>Interne</value>
  </data>
  <data name="editrpc_command" xml:space="preserve">
    <value>Commande</value>
  </data>
  <data name="editrpc_waitmode" xml:space="preserve">
    <value>Mode d'attente</value>
  </data>
  <data name="editrpc_wait" xml:space="preserve">
    <value>Attend d'avoir terminé</value>
  </data>
  <data name="editrpc_nowait" xml:space="preserve">
    <value>N'attend pas</value>
  </data>
  <data name="editrpc_execasuser" xml:space="preserve">
    <value>Exécute en tant qu'utilisateur</value>
  </data>
  <data name="editrpc_max" xml:space="preserve">
    <value>Maximum par minute</value>
  </data>
  <data name="editrpc_default" xml:space="preserve">
    <value>Défaut</value>
  </data>
  <data name="editrpc_execasgrp" xml:space="preserve">
    <value>Exécute en tant que groupe</value>
  </data>
  <data name="editserv_title1" xml:space="preserve">
    <value>Création d'un service internet</value>
  </data>
  <data name="editserv_title2" xml:space="preserve">
    <value>Modification d'un service internet</value>
  </data>
  <data name="editserv_detail" xml:space="preserve">
    <value>Détails du service internet</value>
  </data>
  <data name="editserv_name" xml:space="preserve">
    <value>Nom du service</value>
  </data>
  <data name="editserv_port" xml:space="preserve">
    <value>Numéro de port</value>
  </data>
  <data name="editserv_program" xml:space="preserve">
    <value>Programme</value>
  </data>
  <data name="editserv_args" xml:space="preserve">
    <value>Arguments</value>
  </data>
  <data name="editserv_maxchild" xml:space="preserve">
    <value>Nombre maximum de processus fils</value>
  </data>
  <data name="editserv_execlogin" xml:space="preserve">
    <value>Exécute en tant que classe de connexion</value>
  </data>
  <data name="editserv_wrapper" xml:space="preserve">
    <value>TCP-Wrapper</value>
  </data>
  <data name="editserv_inetd" xml:space="preserve">
    <value>Interne à &lt;tt&gt;inetd&lt;/tt&gt;</value>
  </data>
  <data name="log_apply" xml:space="preserve">
    <value>Changements effectués</value>
  </data>
  <data name="log_create_serv" xml:space="preserve">
    <value>Création du service $1</value>
  </data>
  <data name="log_modify_serv" xml:space="preserve">
    <value>Modification du service $1</value>
  </data>
  <data name="log_delete_serv" xml:space="preserve">
    <value>Suppression du service $1</value>
  </data>
  <data name="log_create_prog" xml:space="preserve">
    <value>Création du service et du programme $1</value>
  </data>
  <data name="log_modify_prog" xml:space="preserve">
    <value>Modification du service et du programme $1</value>
  </data>
  <data name="log_delete_prog" xml:space="preserve">
    <value>Suppression du service et du programme $1</value>
  </data>
  <data name="log_create_serv_l" xml:space="preserve">
    <value>Création du service $1 sur le port $2</value>
  </data>
  <data name="log_modify_serv_l" xml:space="preserve">
    <value>Modification du service $1 sur le port $2</value>
  </data>
  <data name="log_delete_serv_l" xml:space="preserve">
    <value>Suppression du service $1 sur le port $2</value>
  </data>
  <data name="log_create_prog_l" xml:space="preserve">
    <value>Création du service $1 sur le port $2 pour le programme $3</value>
  </data>
  <data name="log_modify_prog_l" xml:space="preserve">
    <value>Modification du service $1 sur le port $2 pour le programme $3</value>
  </data>
  <data name="log_delete_prog_l" xml:space="preserve">
    <value>Suppression du service $1 sur le port $2 pour le programme $3</value>
  </data>
  <data name="log_create_rpc" xml:space="preserve">
    <value>Création du RPC $1</value>
  </data>
  <data name="log_modify_rpc" xml:space="preserve">
    <value>Modification du RPC $1</value>
  </data>
  <data name="log_delete_rpc" xml:space="preserve">
    <value>Suppression RPC $1</value>
  </data>
  <data name="log_create_rprog" xml:space="preserve">
    <value>Création du RPC et du programme $1</value>
  </data>
  <data name="log_modify_rprog" xml:space="preserve">
    <value>Modification du RPC et du programme $1</value>
  </data>
  <data name="log_delete_rprog" xml:space="preserve">
    <value>Suppression du RPC et du programme $1</value>
  </data>
  <data name="log_create_rpc_l" xml:space="preserve">
    <value>Création du RPC $1 numéro $2</value>
  </data>
  <data name="log_modify_rpc_l" xml:space="preserve">
    <value>Modification du RPC $1 numéro $2</value>
  </data>
  <data name="log_delete_rpc_l" xml:space="preserve">
    <value>Suppression du RPC $1 numéro $2</value>
  </data>
  <data name="log_create_rprog_l" xml:space="preserve">
    <value>Création du RPC $1 numéro $2 pour le programme $3</value>
  </data>
  <data name="log_modify_rprog_l" xml:space="preserve">
    <value>Modification du RPC $1 numéro $2 pour le programme $3</value>
  </data>
  <data name="log_delete_rprog_l" xml:space="preserve">
    <value>Suppression du RPC $1 numéro $2 pour le programme $3</value>
  </data>
</root>