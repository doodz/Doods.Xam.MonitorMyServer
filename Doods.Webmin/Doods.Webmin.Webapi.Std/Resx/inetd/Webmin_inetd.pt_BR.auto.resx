<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Serviços e protocolos de rede</value>
  </data>
  <data name="index_list" xml:space="preserve">
    <value>lista de serviço</value>
  </data>
  <data name="index_save" xml:space="preserve">
    <value>Salve </value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>Excluir</value>
  </data>
  <data name="index_create" xml:space="preserve">
    <value>Crio</value>
  </data>
  <data name="index_edit" xml:space="preserve">
    <value>Serviço de edição:</value>
  </data>
  <data name="index_service" xml:space="preserve">
    <value>Serviços da Internet</value>
  </data>
  <data name="index_newservice" xml:space="preserve">
    <value>Crie um novo serviço de internet.</value>
  </data>
  <data name="index_rpc" xml:space="preserve">
    <value>Programas RPC</value>
  </data>
  <data name="index_newrpc" xml:space="preserve">
    <value>Crie um novo programa RPC.</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>Aplicar mudanças</value>
  </data>
  <data name="index_applymsg" xml:space="preserve">
    <value>Clique neste botão para aplicar a configuração atual enviando um sinal SIGHUP para o processo &lt;tt&gt;inetd&lt;/tt&gt; em execução</value>
  </data>
  <data name="index_search" xml:space="preserve">
    <value>Serviços de exibição correspondentes:</value>
  </data>
  <data name="index_sok" xml:space="preserve">
    <value>Procurar</value>
  </data>
  <data name="index_toomany" xml:space="preserve">
    <value>Existem muitos serviços de internet para exibir nesta página.</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>Nenhum serviço de Internet corresponde à sua pesquisa.</value>
  </data>
  <data name="error_restart" xml:space="preserve">
    <value>Falha ao reiniciar o Inetd</value>
  </data>
  <data name="error_saverpc" xml:space="preserve">
    <value>Falha ao salvar o programa RPC</value>
  </data>
  <data name="error_invalidprgname" xml:space="preserve">
    <value>'$1' não é um nome de programa válido</value>
  </data>
  <data name="error_invalidprgnum" xml:space="preserve">
    <value>'$1' não é um número de programa válido</value>
  </data>
  <data name="error_invalidver" xml:space="preserve">
    <value>'$1' não é uma versão RPC válida</value>
  </data>
  <data name="error_noprotocol" xml:space="preserve">
    <value>Você deve escolher pelo menos um protocolo</value>
  </data>
  <data name="error_notexist" xml:space="preserve">
    <value>'$1' não existe</value>
  </data>
  <data name="error_notexecutable" xml:space="preserve">
    <value>'$1' não é executável</value>
  </data>
  <data name="error_invalidcmd" xml:space="preserve">
    <value>'$1' não é um comando válido</value>
  </data>
  <data name="error_nouser" xml:space="preserve">
    <value>Você deve selecionar um usuário</value>
  </data>
  <data name="error_user" xml:space="preserve">
    <value>Usuário ausente ou inválido para executar como</value>
  </data>
  <data name="error_group" xml:space="preserve">
    <value>Grupo ausente ou inválido para executar como</value>
  </data>
  <data name="error_prgexist" xml:space="preserve">
    <value>Um programa RPC chamado $1 já existe</value>
  </data>
  <data name="error_prginuse" xml:space="preserve">
    <value>O número do programa RPC $1 já está em uso</value>
  </data>
  <data name="error_saveservice" xml:space="preserve">
    <value>Falha ao salvar o serviço de Internet</value>
  </data>
  <data name="error_invalidport" xml:space="preserve">
    <value>'$1' não é um número de porta válido</value>
  </data>
  <data name="error_invalidservice" xml:space="preserve">
    <value>'$1' não é um nome de serviço válido</value>
  </data>
  <data name="error_portnum" xml:space="preserve">
    <value>O número da porta $1 deve ser&gt; 0 e &lt;65536</value>
  </data>
  <data name="error_invalidprg" xml:space="preserve">
    <value>'$1' não é um programa válido</value>
  </data>
  <data name="error_invalidarg" xml:space="preserve">
    <value>'$1' não é uma lista de argumentos válida</value>
  </data>
  <data name="error_invalidwrapper" xml:space="preserve">
    <value>'$1' não é um serviço de invólucros TCP válido</value>
  </data>
  <data name="error_invalidpermin" xml:space="preserve">
    <value>'$1' não é um máximo válido por minuto</value>
  </data>
  <data name="error_invalidchildnum" xml:space="preserve">
    <value>'$1' não é um número válido de processos filho</value>
  </data>
  <data name="error_childnum" xml:space="preserve">
    <value>Se for dado um máximo por minuto, vários processos filhos também devem</value>
  </data>
  <data name="error_serviceexist" xml:space="preserve">
    <value>Um serviço usando a porta $1 e o protocolo $2 já existe</value>
  </data>
  <data name="error_nameexist" xml:space="preserve">
    <value>Um serviço com o nome $1 e protocolo $2 já existe</value>
  </data>
  <data name="error_inetservice" xml:space="preserve">
    <value>Já existe um serviço de internet com o nome $1 e protocolo $2 </value>
  </data>
  <data name="error_smfservice" xml:space="preserve">
    <value>Falha ao atualizar o serviço smf com o cmd '$1', código de erro $2 </value>
  </data>
  <data name="error_smf_cmdfield" xml:space="preserve">
    <value>Para smf, o nome do arquivo do programa '$1' deve corresponder ao primeiro argumento do campo de comando, ou seja, '$2'</value>
  </data>
  <data name="editrpc_title1" xml:space="preserve">
    <value>Criar programa RPC</value>
  </data>
  <data name="editrpc_title2" xml:space="preserve">
    <value>Editar programa RPC</value>
  </data>
  <data name="editrpc_detail" xml:space="preserve">
    <value>Detalhes do programa RPC</value>
  </data>
  <data name="editrpc_prgname" xml:space="preserve">
    <value>Nome do programa</value>
  </data>
  <data name="editrpc_prgnum" xml:space="preserve">
    <value>Número do Programa</value>
  </data>
  <data name="editrpc_aliase" xml:space="preserve">
    <value>Apelido</value>
  </data>
  <data name="editrpc_server" xml:space="preserve">
    <value>Programa Servidor</value>
  </data>
  <data name="editrpc_act" xml:space="preserve">
    <value>Estado do programa</value>
  </data>
  <data name="editrpc_noassigned" xml:space="preserve">
    <value>Nenhum programa atribuído</value>
  </data>
  <data name="editrpc_disable" xml:space="preserve">
    <value>Programa desativado ..</value>
  </data>
  <data name="editrpc_enable" xml:space="preserve">
    <value>Programa ativado ..</value>
  </data>
  <data name="editrpc_socket" xml:space="preserve">
    <value>Tipo de soquete</value>
  </data>
  <data name="editrpc_stream" xml:space="preserve">
    <value>Corrente</value>
  </data>
  <data name="editrpc_dgram" xml:space="preserve">
    <value>Datagrama</value>
  </data>
  <data name="editrpc_tli" xml:space="preserve">
    <value>TLI</value>
  </data>
  <data name="editrpc_version" xml:space="preserve">
    <value>Versões de RPC</value>
  </data>
  <data name="editrpc_protocol" xml:space="preserve">
    <value>Protocolo</value>
  </data>
  <data name="editrpc_internal" xml:space="preserve">
    <value>interno</value>
  </data>
  <data name="editrpc_command" xml:space="preserve">
    <value>Comando</value>
  </data>
  <data name="editrpc_waitmode" xml:space="preserve">
    <value>Modo de espera</value>
  </data>
  <data name="editrpc_wait" xml:space="preserve">
    <value>Aguarde até concluir</value>
  </data>
  <data name="editrpc_nowait" xml:space="preserve">
    <value>Não espere</value>
  </data>
  <data name="editrpc_execasuser" xml:space="preserve">
    <value>Executar como usuário</value>
  </data>
  <data name="editrpc_max" xml:space="preserve">
    <value>Máximo por minuto</value>
  </data>
  <data name="editrpc_default" xml:space="preserve">
    <value>Padrão</value>
  </data>
  <data name="editrpc_execasgrp" xml:space="preserve">
    <value>Executar como grupo</value>
  </data>
  <data name="editserv_title1" xml:space="preserve">
    <value>Criar serviço de Internet</value>
  </data>
  <data name="editserv_title2" xml:space="preserve">
    <value>Editar serviço de Internet</value>
  </data>
  <data name="editserv_detail" xml:space="preserve">
    <value>Detalhes do Serviço de Internet</value>
  </data>
  <data name="editserv_name" xml:space="preserve">
    <value>Nome do Serviço</value>
  </data>
  <data name="editserv_port" xml:space="preserve">
    <value>Número da porta</value>
  </data>
  <data name="editserv_program" xml:space="preserve">
    <value>Programa</value>
  </data>
  <data name="editserv_args" xml:space="preserve">
    <value>Args</value>
  </data>
  <data name="editserv_maxchild" xml:space="preserve">
    <value>Máximo de processos filhos</value>
  </data>
  <data name="editserv_execlogin" xml:space="preserve">
    <value>Executar como classe de logon</value>
  </data>
  <data name="editserv_wrapper" xml:space="preserve">
    <value>TCP-Wrapper</value>
  </data>
  <data name="editserv_inetd" xml:space="preserve">
    <value>Interno para &lt;tt&gt;inetd&lt;/tt&gt;</value>
  </data>
  <data name="editserv_qm" xml:space="preserve">
    <value>Comando pode não existir?</value>
  </data>
  <data name="editserv_ename" xml:space="preserve">
    <value>Não existe nenhum serviço com esse nome e protocolo</value>
  </data>
  <data name="log_apply" xml:space="preserve">
    <value>Alterações aplicadas</value>
  </data>
  <data name="log_create_serv" xml:space="preserve">
    <value>Serviço criado $1 </value>
  </data>
  <data name="log_modify_serv" xml:space="preserve">
    <value>Serviço modificado $1 </value>
  </data>
  <data name="log_delete_serv" xml:space="preserve">
    <value>Serviço excluído $1 </value>
  </data>
  <data name="log_create_prog" xml:space="preserve">
    <value>Serviço e programa criados $1 </value>
  </data>
  <data name="log_modify_prog" xml:space="preserve">
    <value>Serviço e programa modificados $1 </value>
  </data>
  <data name="log_delete_prog" xml:space="preserve">
    <value>Serviço e programa excluídos $1 </value>
  </data>
  <data name="log_create_serv_l" xml:space="preserve">
    <value>Serviço criado $1 na porta $2 </value>
  </data>
  <data name="log_modify_serv_l" xml:space="preserve">
    <value>Serviço modificado $1 na porta $2 </value>
  </data>
  <data name="log_delete_serv_l" xml:space="preserve">
    <value>Serviço excluído $1 na porta $2 </value>
  </data>
  <data name="log_create_prog_l" xml:space="preserve">
    <value>Serviço criado $1 na porta $2 para o programa $3 </value>
  </data>
  <data name="log_modify_prog_l" xml:space="preserve">
    <value>Serviço modificado $1 na porta $2 para o programa $3 </value>
  </data>
  <data name="log_delete_prog_l" xml:space="preserve">
    <value>Serviço excluído $1 na porta $2 para o programa $3 </value>
  </data>
  <data name="log_create_rpc" xml:space="preserve">
    <value>RPC $1 criado</value>
  </data>
  <data name="log_modify_rpc" xml:space="preserve">
    <value>RPC $1 modificado</value>
  </data>
  <data name="log_delete_rpc" xml:space="preserve">
    <value>RPC $1 excluído</value>
  </data>
  <data name="log_create_rprog" xml:space="preserve">
    <value>Criado RPC e programa $1 </value>
  </data>
  <data name="log_modify_rprog" xml:space="preserve">
    <value>RPC modificado e programa $1 </value>
  </data>
  <data name="log_delete_rprog" xml:space="preserve">
    <value>RPC e programa $1 excluídos</value>
  </data>
  <data name="log_create_rpc_l" xml:space="preserve">
    <value>RPC criado $1 número $2 </value>
  </data>
  <data name="log_modify_rpc_l" xml:space="preserve">
    <value>RPC modificado $1 número $2 </value>
  </data>
  <data name="log_delete_rpc_l" xml:space="preserve">
    <value>RPC excluído $1 número $2 </value>
  </data>
  <data name="log_create_rprog_l" xml:space="preserve">
    <value>Número RPC $1 criado $2 para o programa $3 </value>
  </data>
  <data name="log_modify_rprog_l" xml:space="preserve">
    <value>RPC $1 número $2 modificado para o programa $3 </value>
  </data>
  <data name="log_delete_rprog_l" xml:space="preserve">
    <value>Número de RPC $1 excluído $2 para o programa $3 </value>
  </data>
</root>