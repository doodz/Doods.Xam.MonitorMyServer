<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="inittab_new" xml:space="preserve">
    <value>Sukurkite naują iniciacijos procesą.</value>
  </data>
  <data name="inittab_id" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="inittab_active" xml:space="preserve">
    <value>Aktyvus?</value>
  </data>
  <data name="inittab_runlevels" xml:space="preserve">
    <value>Paleidimo pakopos lygis</value>
  </data>
  <data name="inittab_action" xml:space="preserve">
    <value>Veiksmas</value>
  </data>
  <data name="inittab_process" xml:space="preserve">
    <value>Procesas</value>
  </data>
  <data name="inittab_none" xml:space="preserve">
    <value>Nė vienas</value>
  </data>
  <data name="inittab_respawn" xml:space="preserve">
    <value>Restawn procesas</value>
  </data>
  <data name="inittab_wait" xml:space="preserve">
    <value>Laukti</value>
  </data>
  <data name="inittab_once" xml:space="preserve">
    <value>Kartą kartą lygiu</value>
  </data>
  <data name="inittab_boot" xml:space="preserve">
    <value>Įkrovos laikas</value>
  </data>
  <data name="inittab_bootwait" xml:space="preserve">
    <value>Įkrovos laikas, palaukite iki pabaigos</value>
  </data>
  <data name="inittab_off" xml:space="preserve">
    <value>Nieko nedaryk</value>
  </data>
  <data name="inittab_ondemand" xml:space="preserve">
    <value>Kai A, B, C</value>
  </data>
  <data name="inittab_initdefault" xml:space="preserve">
    <value>Po sistemos įkrovos</value>
  </data>
  <data name="inittab_sysinit" xml:space="preserve">
    <value>Sistemos įkrovos metu</value>
  </data>
  <data name="inittab_powerwait" xml:space="preserve">
    <value>Galia sumažėja</value>
  </data>
  <data name="inittab_powerfail" xml:space="preserve">
    <value>Maitinimas mažėja nelaukiant</value>
  </data>
  <data name="inittab_powerokwait" xml:space="preserve">
    <value>Galia atkurta</value>
  </data>
  <data name="inittab_powerfailnow" xml:space="preserve">
    <value>Maitinimas nutrūksta</value>
  </data>
  <data name="inittab_ctrlaltdel" xml:space="preserve">
    <value>„Ctrl-Alt-Del“</value>
  </data>
  <data name="inittab_kbdrequest" xml:space="preserve">
    <value>Specialus klavišų derinys</value>
  </data>
  <data name="inittab_kbrequest" xml:space="preserve">
    <value>Specialus klavišų derinys</value>
  </data>
  <data name="inittab_return" xml:space="preserve">
    <value>proceso sąrašas</value>
  </data>
  <data name="inittab_apply" xml:space="preserve">
    <value>Taikyti Init Configuration</value>
  </data>
  <data name="inittab_applymsg" xml:space="preserve">
    <value>Spustelėkite šį mygtuką, kad pritaikytumėte dabartinę „SysV Init“ konfigūraciją, vykdydami komandą &lt;tt&gt;telinit q&lt;/tt&gt;. Atminkite, kad bet kurios konfigūracijos klaidos gali paversti sistemą nenaudojama vykdant šią komandą.</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>Ištrinti pasirinktus procesus</value>
  </data>
  <data name="inittab_none2" xml:space="preserve">
    <value>Jūsų sistemoje nerasta įkrovos procesų. Tai tikriausiai rodo, kad jis nenaudoja „SysV init“ konfigūracijos failo.</value>
  </data>
  <data name="edit_inittab_err" xml:space="preserve">
    <value>Jums neleidžiama redaguoti proceso</value>
  </data>
  <data name="edit_inittab_title" xml:space="preserve">
    <value>Redaguoti procesą $1 </value>
  </data>
  <data name="edit_inittab_details" xml:space="preserve">
    <value>Informacija apie procesą</value>
  </data>
  <data name="edit_inittab_del" xml:space="preserve">
    <value>Ištrinti</value>
  </data>
  <data name="edit_inittab_save" xml:space="preserve">
    <value>Sutaupyti</value>
  </data>
  <data name="new_inittab_err" xml:space="preserve">
    <value>Jums neleidžiama kurti naujo proceso</value>
  </data>
  <data name="new_inittab_title" xml:space="preserve">
    <value>Naujas procesas</value>
  </data>
  <data name="save_inittab_err" xml:space="preserve">
    <value>Jums neleidžiama išsaugoti proceso</value>
  </data>
  <data name="save_inittab_noid" xml:space="preserve">
    <value>Klaida, neįvestas vardo procesas</value>
  </data>
  <data name="save_inittab_already" xml:space="preserve">
    <value>Klaida, pavadinimo procesas jau egzistuoja</value>
  </data>
  <data name="log_modify" xml:space="preserve">
    <value>Modifikuotas pradinis procesas $1 </value>
  </data>
  <data name="log_rename" xml:space="preserve">
    <value>Pervadintas iniciacijos procesas nuo $1 iki $2 </value>
  </data>
  <data name="log_create" xml:space="preserve">
    <value>Sukurtas pradinis procesas $1 </value>
  </data>
  <data name="log_delete" xml:space="preserve">
    <value>Ištrintas pradinis procesas $1 </value>
  </data>
  <data name="log_apply" xml:space="preserve">
    <value>Taikoma konfigūracija</value>
  </data>
  <data name="log_deletes" xml:space="preserve">
    <value>Ištrinti $1 pradiniai procesai</value>
  </data>
  <data name="apply_err" xml:space="preserve">
    <value>Nepavyko pritaikyti konfigūracijos</value>
  </data>
  <data name="delete_err" xml:space="preserve">
    <value>Nepavyko ištrinti procesų</value>
  </data>
  <data name="delete_enone" xml:space="preserve">
    <value>Nepasirinkta</value>
  </data>
</root>