<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="inittab_new" xml:space="preserve">
    <value>Vytvořit nový init proces</value>
  </data>
  <data name="inittab_id" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="inittab_active" xml:space="preserve">
    <value>Aktivní?</value>
  </data>
  <data name="inittab_runlevels" xml:space="preserve">
    <value>Úroveň běhu</value>
  </data>
  <data name="inittab_action" xml:space="preserve">
    <value>Akce</value>
  </data>
  <data name="inittab_process" xml:space="preserve">
    <value>Proces</value>
  </data>
  <data name="inittab_none" xml:space="preserve">
    <value>Nic</value>
  </data>
  <data name="inittab_respawn" xml:space="preserve">
    <value>Restartovat ukončený proces</value>
  </data>
  <data name="inittab_wait" xml:space="preserve">
    <value>Spustit proces a počkat na jeho ukončení</value>
  </data>
  <data name="inittab_once" xml:space="preserve">
    <value>Jedenkrát při vstupu do dané úrovně</value>
  </data>
  <data name="inittab_boot" xml:space="preserve">
    <value>Při startu systému</value>
  </data>
  <data name="inittab_bootwait" xml:space="preserve">
    <value>Před ukončením startu systému</value>
  </data>
  <data name="inittab_off" xml:space="preserve">
    <value>Nedělat nic</value>
  </data>
  <data name="inittab_ondemand" xml:space="preserve">
    <value>Kdykoliv je volána úroveň typu A, B, C</value>
  </data>
  <data name="inittab_initdefault" xml:space="preserve">
    <value>Defaultní úroveň běhu systému</value>
  </data>
  <data name="inittab_sysinit" xml:space="preserve">
    <value>Během startování systému</value>
  </data>
  <data name="inittab_powerwait" xml:space="preserve">
    <value>Selhání el.napájení s vyčkáním na ukončení procesu</value>
  </data>
  <data name="inittab_powerfail" xml:space="preserve">
    <value>Selhání el.napájení</value>
  </data>
  <data name="inittab_powerokwait" xml:space="preserve">
    <value>Obnovení el.napájení</value>
  </data>
  <data name="inittab_powerfailnow" xml:space="preserve">
    <value>Kritické selhání el.napájení</value>
  </data>
  <data name="inittab_ctrlaltdel" xml:space="preserve">
    <value>Stisk Ctrl-Alt-Del</value>
  </data>
  <data name="inittab_kbdrequest" xml:space="preserve">
    <value>Speciální kombinace kláves</value>
  </data>
  <data name="inittab_kbrequest" xml:space="preserve">
    <value>$inittab_kbdrequest</value>
  </data>
  <data name="inittab_return" xml:space="preserve">
    <value>seznam procesů</value>
  </data>
  <data name="inittab_apply" xml:space="preserve">
    <value>Použít init konfiguraci</value>
  </data>
  <data name="inittab_applymsg" xml:space="preserve">
    <value>Klepnutím na toto tlačítko použijete aktuální SysV Init konfiguraci spuštěním příkazu &lt;tt&gt;telinit q&lt;/tt&gt;. Buďte opatrní, protože jakékoliv chyby ve vaší konfiguraci mohou znepřístupnit systém v momentě, kdy je příkaz spuštěn.</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>Smazat vybrané procesy</value>
  </data>
  <data name="edit_inittab_err" xml:space="preserve">
    <value>Nemáte oprávnění editovat proces</value>
  </data>
  <data name="edit_inittab_title" xml:space="preserve">
    <value>Editace procesu $1</value>
  </data>
  <data name="edit_inittab_details" xml:space="preserve">
    <value>Detaily procesu</value>
  </data>
  <data name="edit_inittab_del" xml:space="preserve">
    <value>Smazat</value>
  </data>
  <data name="edit_inittab_save" xml:space="preserve">
    <value>Uložit</value>
  </data>
  <data name="new_inittab_err" xml:space="preserve">
    <value>Nemáte oprávnění vytvořit nový proces</value>
  </data>
  <data name="new_inittab_title" xml:space="preserve">
    <value>Nový proces</value>
  </data>
  <data name="save_inittab_err" xml:space="preserve">
    <value>Nemáte oprávnění uložit proces</value>
  </data>
  <data name="save_inittab_noid" xml:space="preserve">
    <value>Chyba, nebyl vložen žádný název procesu</value>
  </data>
  <data name="save_inittab_already" xml:space="preserve">
    <value>Chyba, název procesu již existuje</value>
  </data>
  <data name="log_modify" xml:space="preserve">
    <value>Modifikován init proces $1</value>
  </data>
  <data name="log_rename" xml:space="preserve">
    <value>Přejmenován init proces $1 na $2</value>
  </data>
  <data name="log_create" xml:space="preserve">
    <value>Vytvořen init proces $1</value>
  </data>
  <data name="log_delete" xml:space="preserve">
    <value>Smazán init proces $1</value>
  </data>
  <data name="log_apply" xml:space="preserve">
    <value>Konfigurace byla použita</value>
  </data>
  <data name="log_deletes" xml:space="preserve">
    <value>Vymazáno $1 inicializačních procesů</value>
  </data>
  <data name="apply_err" xml:space="preserve">
    <value>Chyba při použití konfigurace</value>
  </data>
  <data name="delete_err" xml:space="preserve">
    <value>Chyba při mazání procesů</value>
  </data>
  <data name="delete_enone" xml:space="preserve">
    <value>Nic není vybráno</value>
  </data>
</root>