<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="inittab_new" xml:space="preserve">
    <value>Skep 'n nuwe init-proses.</value>
  </data>
  <data name="inittab_id" xml:space="preserve">
    <value>ID</value>
  </data>
  <data name="inittab_active" xml:space="preserve">
    <value>Aktief?</value>
  </data>
  <data name="inittab_runlevels" xml:space="preserve">
    <value>Opstartvlak</value>
  </data>
  <data name="inittab_action" xml:space="preserve">
    <value>aksie</value>
  </data>
  <data name="inittab_process" xml:space="preserve">
    <value>proses</value>
  </data>
  <data name="inittab_none" xml:space="preserve">
    <value>Geen</value>
  </data>
  <data name="inittab_respawn" xml:space="preserve">
    <value>Hervestigde proses</value>
  </data>
  <data name="inittab_wait" xml:space="preserve">
    <value>wag</value>
  </data>
  <data name="inittab_once" xml:space="preserve">
    <value>Eens keer op vlak</value>
  </data>
  <data name="inittab_boot" xml:space="preserve">
    <value>Boot tyd</value>
  </data>
  <data name="inittab_bootwait" xml:space="preserve">
    <value>Boot tyd, wag tot beëindiging</value>
  </data>
  <data name="inittab_off" xml:space="preserve">
    <value>Doen niks</value>
  </data>
  <data name="inittab_ondemand" xml:space="preserve">
    <value>Telkens wanneer in A, B, C</value>
  </data>
  <data name="inittab_initdefault" xml:space="preserve">
    <value>Na die stelsellaaier</value>
  </data>
  <data name="inittab_sysinit" xml:space="preserve">
    <value>Tydens die stelsellaai</value>
  </data>
  <data name="inittab_powerwait" xml:space="preserve">
    <value>Krag gaan af</value>
  </data>
  <data name="inittab_powerfail" xml:space="preserve">
    <value>Krag gaan af sonder om te wag</value>
  </data>
  <data name="inittab_powerokwait" xml:space="preserve">
    <value>Krag word herstel</value>
  </data>
  <data name="inittab_powerfailnow" xml:space="preserve">
    <value>Krag misluk</value>
  </data>
  <data name="inittab_ctrlaltdel" xml:space="preserve">
    <value>Ctrl-Alt-Del</value>
  </data>
  <data name="inittab_kbdrequest" xml:space="preserve">
    <value>Spesiale sleutelkombinasie</value>
  </data>
  <data name="inittab_kbrequest" xml:space="preserve">
    <value>Spesiale sleutelkombinasie</value>
  </data>
  <data name="inittab_return" xml:space="preserve">
    <value>proseslys</value>
  </data>
  <data name="inittab_apply" xml:space="preserve">
    <value>Pas Init-konfigurasie toe</value>
  </data>
  <data name="inittab_applymsg" xml:space="preserve">
    <value>Klik op hierdie knoppie om die huidige SysV Init-konfigurasie toe te pas deur die opdrag &lt;tt&gt;telinit q&lt;/tt&gt; uit te voer. Let daarop dat enige foute in u konfigurasie die stelsel onbruikbaar kan maak as hierdie opdrag uitgevoer word.</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>Vee geselekteerde prosesse uit</value>
  </data>
  <data name="inittab_none2" xml:space="preserve">
    <value>Geen opstartprosesse is op u stelsel gevind nie. Dit dui waarskynlik daarop dat dit nie die SysV-init-konfigurasielêer gebruik nie.</value>
  </data>
  <data name="edit_inittab_err" xml:space="preserve">
    <value>U mag nie 'n proses wysig nie</value>
  </data>
  <data name="edit_inittab_title" xml:space="preserve">
    <value>Proses wysig $1 </value>
  </data>
  <data name="edit_inittab_details" xml:space="preserve">
    <value>Prosesbesonderhede</value>
  </data>
  <data name="edit_inittab_del" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="edit_inittab_save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="new_inittab_err" xml:space="preserve">
    <value>U mag nie 'n nuwe proses skep nie</value>
  </data>
  <data name="new_inittab_title" xml:space="preserve">
    <value>Nuwe proses</value>
  </data>
  <data name="save_inittab_err" xml:space="preserve">
    <value>U mag nie 'n proses stoor nie</value>
  </data>
  <data name="save_inittab_noid" xml:space="preserve">
    <value>Fout, geen naamproses ingevoer nie</value>
  </data>
  <data name="save_inittab_already" xml:space="preserve">
    <value>Fout, die naamproses bestaan reeds</value>
  </data>
  <data name="log_modify" xml:space="preserve">
    <value>Gewysigde initproses $1 </value>
  </data>
  <data name="log_rename" xml:space="preserve">
    <value>Die init-proses $1 tot $2 hernoem</value>
  </data>
  <data name="log_create" xml:space="preserve">
    <value>Geskep proses $1 </value>
  </data>
  <data name="log_delete" xml:space="preserve">
    <value>Init-proses $1 is uitgevee</value>
  </data>
  <data name="log_apply" xml:space="preserve">
    <value>Toegepaste konfigurasie</value>
  </data>
  <data name="log_deletes" xml:space="preserve">
    <value>$1 init prosesse is uitgevee</value>
  </data>
  <data name="apply_err" xml:space="preserve">
    <value>Kon nie konfigurasie toepas nie</value>
  </data>
  <data name="delete_err" xml:space="preserve">
    <value>Kon nie prosesse uitvee nie</value>
  </data>
  <data name="delete_enone" xml:space="preserve">
    <value>Geen gekies nie</value>
  </data>
</root>