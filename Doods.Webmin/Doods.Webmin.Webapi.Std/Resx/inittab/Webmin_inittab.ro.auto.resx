<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="inittab_new" xml:space="preserve">
    <value>Creați un nou proces de inițiere.</value>
  </data>
  <data name="inittab_id" xml:space="preserve">
    <value>ID-ul</value>
  </data>
  <data name="inittab_active" xml:space="preserve">
    <value>Activ?</value>
  </data>
  <data name="inittab_runlevels" xml:space="preserve">
    <value>Runlevel de bootare</value>
  </data>
  <data name="inittab_action" xml:space="preserve">
    <value>Acțiune</value>
  </data>
  <data name="inittab_process" xml:space="preserve">
    <value>Proces</value>
  </data>
  <data name="inittab_none" xml:space="preserve">
    <value>Nici unul</value>
  </data>
  <data name="inittab_respawn" xml:space="preserve">
    <value>Procesul de respawn</value>
  </data>
  <data name="inittab_wait" xml:space="preserve">
    <value>Aștepta</value>
  </data>
  <data name="inittab_once" xml:space="preserve">
    <value>Odată o dată la nivel</value>
  </data>
  <data name="inittab_boot" xml:space="preserve">
    <value>Timpul pentru resetare</value>
  </data>
  <data name="inittab_bootwait" xml:space="preserve">
    <value>Timp de pornire, așteptați până la încheiere</value>
  </data>
  <data name="inittab_off" xml:space="preserve">
    <value>Nu face nimic</value>
  </data>
  <data name="inittab_ondemand" xml:space="preserve">
    <value>Ori de câte ori în A, B, C</value>
  </data>
  <data name="inittab_initdefault" xml:space="preserve">
    <value>După pornirea sistemului</value>
  </data>
  <data name="inittab_sysinit" xml:space="preserve">
    <value>În timpul pornirii sistemului</value>
  </data>
  <data name="inittab_powerwait" xml:space="preserve">
    <value>Puterea scade</value>
  </data>
  <data name="inittab_powerfail" xml:space="preserve">
    <value>Puterea coboară fără a aștepta</value>
  </data>
  <data name="inittab_powerokwait" xml:space="preserve">
    <value>Puterea este restabilită</value>
  </data>
  <data name="inittab_powerfailnow" xml:space="preserve">
    <value>Puterea eșuează</value>
  </data>
  <data name="inittab_ctrlaltdel" xml:space="preserve">
    <value>Ctrl-Alt-Del</value>
  </data>
  <data name="inittab_kbdrequest" xml:space="preserve">
    <value>Combinație specială de taste</value>
  </data>
  <data name="inittab_kbrequest" xml:space="preserve">
    <value>Combinație specială de taste</value>
  </data>
  <data name="inittab_return" xml:space="preserve">
    <value>lista de procese</value>
  </data>
  <data name="inittab_apply" xml:space="preserve">
    <value>Aplicați configurația inițială</value>
  </data>
  <data name="inittab_applymsg" xml:space="preserve">
    <value>Faceți clic pe acest buton pentru a aplica configurația inițială SysV Init, executând comanda &lt;tt&gt;telinit q&lt;/tt&gt;. Rețineți că orice greșeală în configurația dvs. poate face sistemul să nu poată fi folosit atunci când este executată această comandă.</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>Ștergeți procesele selectate</value>
  </data>
  <data name="inittab_none2" xml:space="preserve">
    <value>Nu s-au găsit procese de pornire în sistemul dvs. Aceasta indică probabil că nu folosește fișierul de configurare init SysV.</value>
  </data>
  <data name="edit_inittab_err" xml:space="preserve">
    <value>Nu aveți voie să editați un proces</value>
  </data>
  <data name="edit_inittab_title" xml:space="preserve">
    <value>Procesul de editare $1 </value>
  </data>
  <data name="edit_inittab_details" xml:space="preserve">
    <value>Detalii despre proces</value>
  </data>
  <data name="edit_inittab_del" xml:space="preserve">
    <value>Șterge</value>
  </data>
  <data name="edit_inittab_save" xml:space="preserve">
    <value>salva</value>
  </data>
  <data name="new_inittab_err" xml:space="preserve">
    <value>Nu aveți voie să creați un nou proces</value>
  </data>
  <data name="new_inittab_title" xml:space="preserve">
    <value>Proces nou</value>
  </data>
  <data name="save_inittab_err" xml:space="preserve">
    <value>Nu este permis să salvați un proces</value>
  </data>
  <data name="save_inittab_noid" xml:space="preserve">
    <value>Eroare, nu a fost introdus niciun proces de nume</value>
  </data>
  <data name="save_inittab_already" xml:space="preserve">
    <value>Eroare, procesul de nume există deja</value>
  </data>
  <data name="log_modify" xml:space="preserve">
    <value>Proces inițial modificat $1 </value>
  </data>
  <data name="log_rename" xml:space="preserve">
    <value>Redenumit procesul init $1 la $2 </value>
  </data>
  <data name="log_create" xml:space="preserve">
    <value>Procesul inițial creat $1 </value>
  </data>
  <data name="log_delete" xml:space="preserve">
    <value>Procesul inițial șters $1 </value>
  </data>
  <data name="log_apply" xml:space="preserve">
    <value>Configurație aplicată</value>
  </data>
  <data name="log_deletes" xml:space="preserve">
    <value>Procesele de inițiere $1 șterse</value>
  </data>
  <data name="apply_err" xml:space="preserve">
    <value>Eroare la aplicarea configurației</value>
  </data>
  <data name="delete_err" xml:space="preserve">
    <value>Nu a reușit ștergerea proceselor</value>
  </data>
  <data name="delete_enone" xml:space="preserve">
    <value>Nimic selectat</value>
  </data>
</root>