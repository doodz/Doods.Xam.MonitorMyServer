<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>系统时间</value>
  </data>
  <data name="index_timeserver" xml:space="preserve">
    <value>时间服务器</value>
  </data>
  <data name="index_zone" xml:space="preserve">
    <value>时区</value>
  </data>
  <data name="index_tz" xml:space="preserve">
    <value>当前位置</value>
  </data>
  <data name="action_save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="action_apply" xml:space="preserve">
    <value>应用</value>
  </data>
  <data name="action_sync" xml:space="preserve">
    <value>按照硬件时间同步系统时间</value>
  </data>
  <data name="action_sync_s" xml:space="preserve">
    <value>按照系统时间同步硬件时间</value>
  </data>
  <data name="action_timeserver_sys" xml:space="preserve">
    <value>同步系统时间</value>
  </data>
  <data name="action_timeserver_hw" xml:space="preserve">
    <value>同步硬件时间</value>
  </data>
  <data name="action_savezone" xml:space="preserve">
    <value>改变时区</value>
  </data>
  <data name="acl_sys" xml:space="preserve">
    <value>用户可以编辑系统时间</value>
  </data>
  <data name="acl_hw" xml:space="preserve">
    <value>用户可以编辑硬件时间</value>
  </data>
  <data name="acl_yes" xml:space="preserve">
    <value>是</value>
  </data>
  <data name="acl_no" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="acl_error" xml:space="preserve">
    <value>你可以访问系统时间模块，但不能修改系统时间和硬件时间</value>
  </data>
  <data name="acl_nosys" xml:space="preserve">
    <value>你无权修改系统时间</value>
  </data>
  <data name="acl_nohw" xml:space="preserve">
    <value>你无权修改硬件时间</value>
  </data>
  <data name="sys_title" xml:space="preserve">
    <value>系统时间</value>
  </data>
  <data name="hw_title" xml:space="preserve">
    <value>硬件时间</value>
  </data>
  <data name="day" xml:space="preserve">
    <value>星期</value>
  </data>
  <data name="month" xml:space="preserve">
    <value>月</value>
  </data>
  <data name="date" xml:space="preserve">
    <value>日期</value>
  </data>
  <data name="hour" xml:space="preserve">
    <value>时间</value>
  </data>
  <data name="year" xml:space="preserve">
    <value>年</value>
  </data>
  <data name="error_cnf" xml:space="preserve">
    <value>错误：$1 命令没有找到</value>
  </data>
  <data name="error_hw" xml:space="preserve">
    <value>无法设置硬件时间：$1</value>
  </data>
  <data name="error_sync" xml:space="preserve">
    <value>无法同步系统时间：$1</value>
  </data>
  <data name="log_set_date" xml:space="preserve">
    <value>设置系统时间到 $1</value>
  </data>
  <data name="log_set_hwclock" xml:space="preserve">
    <value>设置硬件时钟到 $1</value>
  </data>
  <data name="log_remote_date" xml:space="preserve">
    <value>从 $2 取得系统时间</value>
  </data>
  <data name="log_remote_hwclock" xml:space="preserve">
    <value>从 $2 取得硬件时间</value>
  </data>
  <data name="log_remote_date_l" xml:space="preserve">
    <value>从 $2 取得系统时间 $1</value>
  </data>
  <data name="log_remote_hwclock_l" xml:space="preserve">
    <value>从 $2 取得硬件时间 $1</value>
  </data>
  <data name="log_sync" xml:space="preserve">
    <value>用硬件时间同步系统时间</value>
  </data>
  <data name="log_sync_s" xml:space="preserve">
    <value>用系统时间同步硬件时间</value>
  </data>
</root>