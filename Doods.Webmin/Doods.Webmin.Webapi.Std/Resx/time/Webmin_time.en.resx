<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>System Time</value>
  </data>
  <data name="index_timeserver" xml:space="preserve">
    <value>Time Server</value>
  </data>
  <data name="index_addresses" xml:space="preserve">
    <value>Timeserver hostnames or addresses</value>
  </data>
  <data name="index_zone" xml:space="preserve">
    <value>Timezone</value>
  </data>
  <data name="index_eformat" xml:space="preserve">
    <value>Unrecognized &lt;tt&gt;hwclock&lt;/tt&gt; output format</value>
  </data>
  <data name="index_sched" xml:space="preserve">
    <value>Synchronize on schedule?</value>
  </data>
  <data name="index_schedyes" xml:space="preserve">
    <value>Yes, at times below ..</value>
  </data>
  <data name="index_sync" xml:space="preserve">
    <value>Sync and Apply</value>
  </data>
  <data name="index_hardware2" xml:space="preserve">
    <value>Set hardware time too</value>
  </data>
  <data name="index_boot" xml:space="preserve">
    <value>Synchronize when Webmin starts?</value>
  </data>
  <data name="index_tzheader" xml:space="preserve">
    <value>Time Zone</value>
  </data>
  <data name="index_tz" xml:space="preserve">
    <value>Change timezone to</value>
  </data>
  <data name="index_ehwclock" xml:space="preserve">
    <value>$1 failed : $2</value>
  </data>
  <data name="index_tabtime" xml:space="preserve">
    <value>Set time</value>
  </data>
  <data name="index_tabzone" xml:space="preserve">
    <value>Change timezone</value>
  </data>
  <data name="index_tabsync" xml:space="preserve">
    <value>Time server sync</value>
  </data>
  <data name="index_desctime" xml:space="preserve">
    <value>This form is for changing the system's current time, which is used by all running processes. On operating systems that have a separate hardware clock, it can be used to set that too.</value>
  </data>
  <data name="index_desczone" xml:space="preserve">
    <value>This form allows you to set the system's default time zone, which is used to convert the system time to a human-readable format and offset.</value>
  </data>
  <data name="index_descsync" xml:space="preserve">
    <value>This form is for configuring the system to automatically synchronize the time with a remote server. Synchronization will be done using the Unix &lt;tt&gt;time&lt;/tt&gt; protocol or NTP, depending on which commands are installed and what the remote system supports.</value>
  </data>
  <data name="action_save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="action_apply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="action_sync" xml:space="preserve">
    <value>Set system time according to hardware time</value>
  </data>
  <data name="action_sync_s" xml:space="preserve">
    <value>Set hardware time according to system time</value>
  </data>
  <data name="action_timeserver_sys" xml:space="preserve">
    <value>Sync system time</value>
  </data>
  <data name="action_timeserver_hw" xml:space="preserve">
    <value>Sync hardware time</value>
  </data>
  <data name="action_savezone" xml:space="preserve">
    <value>Change timezone</value>
  </data>
  <data name="acl_sys" xml:space="preserve">
    <value>User can edit system time?</value>
  </data>
  <data name="acl_hw" xml:space="preserve">
    <value>User can edit hardware time?</value>
  </data>
  <data name="acl_timezone" xml:space="preserve">
    <value>User can set timezone?</value>
  </data>
  <data name="acl_ntp" xml:space="preserve">
    <value>Can synchronize with time server?</value>
  </data>
  <data name="acl_yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="acl_no" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="acl_error" xml:space="preserve">
    <value>You have access to the system time module, but you can't edit neither system time or hardware time</value>
  </data>
  <data name="acl_nosys" xml:space="preserve">
    <value>You are not allowed to edit system time</value>
  </data>
  <data name="acl_nohw" xml:space="preserve">
    <value>You are not allowed to edit hardware time</value>
  </data>
  <data name="acl_nontp" xml:space="preserve">
    <value>You are not allowed to synchronized with a time server</value>
  </data>
  <data name="sys_title" xml:space="preserve">
    <value>System Time</value>
  </data>
  <data name="hw_title" xml:space="preserve">
    <value>Hardware Time</value>
  </data>
  <data name="day" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="month" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="hour" xml:space="preserve">
    <value>Hour</value>
  </data>
  <data name="year" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="minute" xml:space="preserve">
    <value>Minute</value>
  </data>
  <data name="second" xml:space="preserve">
    <value>Second</value>
  </data>
  <data name="error_cnf" xml:space="preserve">
    <value>Error : $1 command not found</value>
  </data>
  <data name="error_hw" xml:space="preserve">
    <value>Can't set the hardware time : $1</value>
  </data>
  <data name="error_sync" xml:space="preserve">
    <value>Can't sync with system time : $1</value>
  </data>
  <data name="error_ediff" xml:space="preserve">
    <value>Time server different with local time is too large : $1 days</value>
  </data>
  <data name="error_entp" xml:space="preserve">
    <value>NTP time synchronization failed : $1</value>
  </data>
  <data name="error_etimeserver" xml:space="preserve">
    <value>No time servers to sync with entered</value>
  </data>
  <data name="log_set_date" xml:space="preserve">
    <value>Set system time to $1</value>
  </data>
  <data name="log_set_hwclock" xml:space="preserve">
    <value>Set hardware clock to $1</value>
  </data>
  <data name="log_remote_date" xml:space="preserve">
    <value>Fetched system time from $2</value>
  </data>
  <data name="log_remote_hwclock" xml:space="preserve">
    <value>Fetched hardware time from $2</value>
  </data>
  <data name="log_remote_date_l" xml:space="preserve">
    <value>Fetched system time $1 from $2</value>
  </data>
  <data name="log_remote_hwclock_l" xml:space="preserve">
    <value>Fetched hardware time $1 from $2</value>
  </data>
  <data name="log_sync" xml:space="preserve">
    <value>Synchronised system time with hardware time</value>
  </data>
  <data name="log_sync_s" xml:space="preserve">
    <value>Synchronised hardware time with system time</value>
  </data>
  <data name="log_timezone" xml:space="preserve">
    <value>Changed timezone to $1</value>
  </data>
  <data name="timezone_err" xml:space="preserve">
    <value>Failed to save timezone</value>
  </data>
  <data name="timezone_ecannot" xml:space="preserve">
    <value>You are not allowed to change the timezone</value>
  </data>
  <data name="timezone_enone" xml:space="preserve">
    <value>No zone selected</value>
  </data>
  <data name="__norefs" xml:space="preserve">
    <value>1</value>
  </data>
</root>