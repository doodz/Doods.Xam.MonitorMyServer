<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_addresses" xml:space="preserve">
    <value>时间服务器主机名或地址</value>
  </data>
  <data name="index_eformat" xml:space="preserve">
    <value>无法识别的&lt;tt&gt;hwclock&lt;/tt&gt;输出格式</value>
  </data>
  <data name="index_sched" xml:space="preserve">
    <value>是否按计划同步？</value>
  </data>
  <data name="index_schedyes" xml:space="preserve">
    <value>是的，有时在下面 ..</value>
  </data>
  <data name="index_sync" xml:space="preserve">
    <value>同步并套用</value>
  </data>
  <data name="index_hardware2" xml:space="preserve">
    <value>也设置硬件时间</value>
  </data>
  <data name="index_boot" xml:space="preserve">
    <value>Webmin启动时同步？</value>
  </data>
  <data name="index_tzheader" xml:space="preserve">
    <value>时区</value>
  </data>
  <data name="index_ehwclock" xml:space="preserve">
    <value>$1失败： $2</value>
  </data>
  <data name="index_tabtime" xml:space="preserve">
    <value>设置时间</value>
  </data>
  <data name="index_tabzone" xml:space="preserve">
    <value>更改时区</value>
  </data>
  <data name="index_tabsync" xml:space="preserve">
    <value>时间服务器同步</value>
  </data>
  <data name="index_desctime" xml:space="preserve">
    <value>该表格用于更改系统的当前时间，所有正在运行的进程都将使用该时间。在具有独立硬件时钟的操作系统上，也可以使用该时钟进行设置。</value>
  </data>
  <data name="index_desczone" xml:space="preserve">
    <value>该表格允许您设置系统的默认时区，该默认时区用于将系统时间转换为人类可读的格式和偏移量。</value>
  </data>
  <data name="index_descsync" xml:space="preserve">
    <value>该表格用于将系统配置为自动与远程服务器同步时间。同步将使用Unix &lt;tt&gt;time&lt;/tt&gt;协议或NTP完成，具体取决于安装了哪些命令以及远程系统支持什么。</value>
  </data>
  <data name="acl_timezone" xml:space="preserve">
    <value>用户可以设置时区吗？</value>
  </data>
  <data name="acl_ntp" xml:space="preserve">
    <value>可以与时间服务器同步吗？</value>
  </data>
  <data name="acl_nontp" xml:space="preserve">
    <value>您不允许与时间服务器同步</value>
  </data>
  <data name="minute" xml:space="preserve">
    <value>分钟</value>
  </data>
  <data name="second" xml:space="preserve">
    <value>第二</value>
  </data>
  <data name="error_ediff" xml:space="preserve">
    <value>与当地时间不同的时间服务器太大： $1天</value>
  </data>
  <data name="error_entp" xml:space="preserve">
    <value>NTP时间同步失败： $1</value>
  </data>
  <data name="error_etimeserver" xml:space="preserve">
    <value>没有时间服务器与输入的同步</value>
  </data>
  <data name="log_timezone" xml:space="preserve">
    <value>将时区更改为 $1</value>
  </data>
  <data name="timezone_err" xml:space="preserve">
    <value>无法保存时区</value>
  </data>
  <data name="timezone_ecannot" xml:space="preserve">
    <value>您无权更改时区</value>
  </data>
  <data name="timezone_enone" xml:space="preserve">
    <value>未选择区域</value>
  </data>
</root>