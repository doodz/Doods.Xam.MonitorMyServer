<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_enopfile" xml:space="preserve">
    <value>在您的系统中没能找到 PPP 口令文件  '$1',可能没安装 PPP</value>
  </data>
  <data name="index_table" xml:space="preserve">
    <value>PPP 拨入和拨出帐户</value>
  </data>
  <data name="index_user" xml:space="preserve">
    <value>用户</value>
  </data>
  <data name="index_server" xml:space="preserve">
    <value>服务器</value>
  </data>
  <data name="index_uany" xml:space="preserve">
    <value>任何</value>
  </data>
  <data name="index_sany" xml:space="preserve">
    <value>任何</value>
  </data>
  <data name="index_create" xml:space="preserve">
    <value>创建新的 PPP 帐户</value>
  </data>
  <data name="index_info" xml:space="preserve">
    <value>Webmin 可以被配置为对 Unix 用户表的改变将自动被应用到 PPP 的帐户列表.这只在使用 Webmin 的 &lt;tt&gt;用户和组&lt;/tt&gt; 模块来增加、删除和更改用户时有效。</value>
  </data>
  <data name="index_onadd" xml:space="preserve">
    <value>当增加一个 Unix 用户时为系统加一个 PPP 帐户</value>
  </data>
  <data name="index_onchange" xml:space="preserve">
    <value>当改变一个 Unix 用户时改变他的 PPP 帐户</value>
  </data>
  <data name="index_ondelete" xml:space="preserve">
    <value>当删除一个 Unix 用户时，删除相应的PPP 帐户</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>应用</value>
  </data>
  <data name="secrets_title" xml:space="preserve">
    <value>PPP 帐户</value>
  </data>
  <data name="secrets_return" xml:space="preserve">
    <value>索引</value>
  </data>
  <data name="edit_secret_etitle" xml:space="preserve">
    <value>编辑 PPP 帐户</value>
  </data>
  <data name="edit_secret_ctitle" xml:space="preserve">
    <value>创建 PPP 帐户</value>
  </data>
  <data name="edit_secret_acc" xml:space="preserve">
    <value>PPP 帐户</value>
  </data>
  <data name="edit_secret_user" xml:space="preserve">
    <value>用户名</value>
  </data>
  <data name="edit_secret_serv" xml:space="preserve">
    <value>服务器</value>
  </data>
  <data name="edit_secret_sany" xml:space="preserve">
    <value>任何</value>
  </data>
  <data name="edit_secret_uany" xml:space="preserve">
    <value>任何</value>
  </data>
  <data name="edit_secret_pass" xml:space="preserve">
    <value>口令</value>
  </data>
  <data name="edit_secret_none" xml:space="preserve">
    <value>无</value>
  </data>
  <data name="edit_secret_ffile" xml:space="preserve">
    <value>从文件</value>
  </data>
  <data name="edit_secret_leave" xml:space="preserve">
    <value>保持不变</value>
  </data>
  <data name="edit_secret_setto" xml:space="preserve">
    <value>设置到</value>
  </data>
  <data name="edit_secret_vaddr" xml:space="preserve">
    <value>有效地址</value>
  </data>
  <data name="edit_secret_aany" xml:space="preserve">
    <value>允许每个人</value>
  </data>
  <data name="edit_secret_anone" xml:space="preserve">
    <value>全不允许</value>
  </data>
  <data name="edit_secret_alist" xml:space="preserve">
    <value>允许被列出..</value>
  </data>
  <data name="edit_secret_save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="edit_secret_del" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="edit_secret_return" xml:space="preserve">
    <value>帐户列表</value>
  </data>
  <data name="save_secret_esave" xml:space="preserve">
    <value>保存帐户失败</value>
  </data>
  <data name="save_secret_enoip" xml:space="preserve">
    <value>'$1' 不是一个有效地址</value>
  </data>
  <data name="log_create" xml:space="preserve">
    <value>已创建 PPP 用户 $1</value>
  </data>
  <data name="log_modify" xml:space="preserve">
    <value>已更新 PPP 用户 $1</value>
  </data>
  <data name="log_delete" xml:space="preserve">
    <value>已删除 PPP 用户 $1</value>
  </data>
  <data name="log_sync" xml:space="preserve">
    <value>已与 Unix 用户同步</value>
  </data>
</root>