<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Netzwerk-Dienste</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>Keine Netzwerk-Dienste wurden bisher definiert.</value>
  </data>
  <data name="index_name" xml:space="preserve">
    <value>Dienstname</value>
  </data>
  <data name="index_type" xml:space="preserve">
    <value>Art</value>
  </data>
  <data name="index_port" xml:space="preserve">
    <value>Port / Nummer</value>
  </data>
  <data name="index_rpc" xml:space="preserve">
    <value>RPC</value>
  </data>
  <data name="index_inet" xml:space="preserve">
    <value>Internet</value>
  </data>
  <data name="index_proto" xml:space="preserve">
    <value>Protokoll</value>
  </data>
  <data name="index_user" xml:space="preserve">
    <value>Benutzer</value>
  </data>
  <data name="index_server" xml:space="preserve">
    <value>Serverprogramm</value>
  </data>
  <data name="index_redirect" xml:space="preserve">
    <value>Umleitung zu $1</value>
  </data>
  <data name="index_enabled" xml:space="preserve">
    <value>Aktiviert?</value>
  </data>
  <data name="index_internal" xml:space="preserve">
    <value>Intern zu Xinetd</value>
  </data>
  <data name="index_add_inet" xml:space="preserve">
    <value>Erzeuge einen neuen Internetdienst</value>
  </data>
  <data name="index_add_rpc" xml:space="preserve">
    <value>Erzeuge einen neuen RPC-Service</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>Diensteliste</value>
  </data>
  <data name="index_defaults" xml:space="preserve">
    <value>Bearbeite Standard</value>
  </data>
  <data name="index_defaultsmsg" xml:space="preserve">
    <value>Klicken Sie auf diesen Button um die Eigenschaften zu ändern, die auf alle Internet- und RPC-Dienste angewandt werden.</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>Änderungen anwenden</value>
  </data>
  <data name="index_applymsg" xml:space="preserve">
    <value>Klicken Sie auf diesen Button um die aktuelle Konfiguration durch das Senden eines SIGUSR2-Signals an den laufenden &lt;tt&gt;xinetd&lt;/tt&gt; Prozess anzuwenden.</value>
  </data>
  <data name="index_start" xml:space="preserve">
    <value>Starte Xinetd</value>
  </data>
  <data name="index_startmsg" xml:space="preserve">
    <value>Klicken Sie auf diesen Button um den Xinetd-Server mit der aktuellen Konfiguration zu starten</value>
  </data>
  <data name="index_noport" xml:space="preserve">
    <value>Unbekannt</value>
  </data>
  <data name="index_enable" xml:space="preserve">
    <value>Ausgewählte aktivieren</value>
  </data>
  <data name="index_disable" xml:space="preserve">
    <value>Ausgewählte deaktivieren</value>
  </data>
  <data name="serv_create" xml:space="preserve">
    <value>Erzeuge Internetdienst</value>
  </data>
  <data name="serv_edit" xml:space="preserve">
    <value>Bearbeite Internetdienst</value>
  </data>
  <data name="serv_header1" xml:space="preserve">
    <value>Netzwerkoptionen des Dienstes</value>
  </data>
  <data name="serv_header2" xml:space="preserve">
    <value>Programmoptionen des Dienstes</value>
  </data>
  <data name="serv_header3" xml:space="preserve">
    <value>Dienstzugriffskontrolle</value>
  </data>
  <data name="serv_id" xml:space="preserve">
    <value>Dienstname</value>
  </data>
  <data name="serv_port" xml:space="preserve">
    <value>Portnummer</value>
  </data>
  <data name="serv_port_def" xml:space="preserve">
    <value>Standard</value>
  </data>
  <data name="serv_sock" xml:space="preserve">
    <value>Socketart</value>
  </data>
  <data name="serv_proto" xml:space="preserve">
    <value>Protokoll</value>
  </data>
  <data name="serv_enabled" xml:space="preserve">
    <value>Dienst aktiviert?</value>
  </data>
  <data name="serv_bind" xml:space="preserve">
    <value>Binde an Adresse</value>
  </data>
  <data name="serv_bind_def" xml:space="preserve">
    <value>Alle</value>
  </data>
  <data name="serv_user" xml:space="preserve">
    <value>Laufe als Benutzer</value>
  </data>
  <data name="serv_group" xml:space="preserve">
    <value>Laufe als Gruppe</value>
  </data>
  <data name="serv_group_def" xml:space="preserve">
    <value>Von Benutzer</value>
  </data>
  <data name="serv_prog" xml:space="preserve">
    <value>Dienst gesteuert von</value>
  </data>
  <data name="serv_internal" xml:space="preserve">
    <value>Intern zu Xinetd</value>
  </data>
  <data name="serv_server" xml:space="preserve">
    <value>Serverprogramm</value>
  </data>
  <data name="serv_redirect" xml:space="preserve">
    <value>Umleitung zu Host</value>
  </data>
  <data name="serv_rport" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="serv_wait" xml:space="preserve">
    <value>Warte bis komplett?</value>
  </data>
  <data name="serv_inst" xml:space="preserve">
    <value>Maximale Anzahl gleichzeitiger Server</value>
  </data>
  <data name="serv_inst_def" xml:space="preserve">
    <value>Unbegrenzt</value>
  </data>
  <data name="serv_nice" xml:space="preserve">
    <value>Nice-Status für Server</value>
  </data>
  <data name="serv_cps0" xml:space="preserve">
    <value>Maximale Anzahl an Verbindungen pro Sekunde</value>
  </data>
  <data name="serv_cps_def" xml:space="preserve">
    <value>Unbegrenzt</value>
  </data>
  <data name="serv_cps1" xml:space="preserve">
    <value>Verzögerung wenn Maximum erreicht wurde</value>
  </data>
  <data name="serv_sec" xml:space="preserve">
    <value>Sekunden</value>
  </data>
  <data name="serv_from" xml:space="preserve">
    <value>Erlaube Zugriff von</value>
  </data>
  <data name="serv_from_def" xml:space="preserve">
    <value>Allen Hosts</value>
  </data>
  <data name="serv_from_sel" xml:space="preserve">
    <value>Nur gelistete Hosts ..</value>
  </data>
  <data name="serv_access" xml:space="preserve">
    <value>Verweigere Zugriff von</value>
  </data>
  <data name="serv_access_def" xml:space="preserve">
    <value>Keinen Hosts</value>
  </data>
  <data name="serv_access_sel" xml:space="preserve">
    <value>Nur gelistete Hosts ..</value>
  </data>
  <data name="serv_times" xml:space="preserve">
    <value>Erlaube Zugriff zu Zeiten</value>
  </data>
  <data name="serv_times_def" xml:space="preserve">
    <value>Jederzeit</value>
  </data>
  <data name="serv_err" xml:space="preserve">
    <value>Konnte Dienst nicht speichern</value>
  </data>
  <data name="serv_eid" xml:space="preserve">
    <value>Fehlender oder ungültiger Dienstname</value>
  </data>
  <data name="serv_ebind" xml:space="preserve">
    <value>Fehlende oder ungültige IP-Adresse zum Verbinden</value>
  </data>
  <data name="serv_eport" xml:space="preserve">
    <value>Fehlende oder ungültige Portnummer</value>
  </data>
  <data name="serv_einst" xml:space="preserve">
    <value>Fehlende oder ungültige Anzahl gleichzeitiger Server</value>
  </data>
  <data name="serv_euser" xml:space="preserve">
    <value>Sie müssen einen Benutzer angeben</value>
  </data>
  <data name="serv_egroup" xml:space="preserve">
    <value>Sie müssen eine Gruppe angeben</value>
  </data>
  <data name="serv_estd" xml:space="preserve">
    <value>Es gibt keinen Standardport für Dienst $1</value>
  </data>
  <data name="serv_eproto" xml:space="preserve">
    <value>Sie müssen ein Protokoll für diesen Dienst auswählen</value>
  </data>
  <data name="serv_eserver" xml:space="preserve">
    <value>Fehlendes oder ungültiges Serverprogramm</value>
  </data>
  <data name="serv_erhost" xml:space="preserve">
    <value>Fehlender oder ungültiger Weiterleitungshost</value>
  </data>
  <data name="serv_erport" xml:space="preserve">
    <value>Fehlender oder ungültiger Weiterleitungsport</value>
  </data>
  <data name="serv_enice" xml:space="preserve">
    <value>Fehlender oder ungültiger Nice-Status</value>
  </data>
  <data name="serv_ecps0" xml:space="preserve">
    <value>Fehlende oder ungültige Anzahl von Verbindungen pro Sekunde</value>
  </data>
  <data name="serv_ecps1" xml:space="preserve">
    <value>Fehlende oder ungültige Verzögerung</value>
  </data>
  <data name="serv_etimes" xml:space="preserve">
    <value>Zugriffszeiten müssen in der Art HH:MM-HH:MM angegeben werden.</value>
  </data>
  <data name="sock_stream" xml:space="preserve">
    <value>Stream</value>
  </data>
  <data name="sock_dgram" xml:space="preserve">
    <value>Datagram</value>
  </data>
  <data name="sock_raw" xml:space="preserve">
    <value>Raw</value>
  </data>
  <data name="sock_seqpacket" xml:space="preserve">
    <value>Sequentielles Datagram</value>
  </data>
  <data name="proto_" xml:space="preserve">
    <value>Standard</value>
  </data>
  <data name="proto_ip" xml:space="preserve">
    <value>IP (Internet Protocol)</value>
  </data>
  <data name="proto_tcp" xml:space="preserve">
    <value>TCP (Transmission Control Protocol)</value>
  </data>
  <data name="proto_udp" xml:space="preserve">
    <value>UDP (User Datagram Protocol)</value>
  </data>
  <data name="restart_err" xml:space="preserve">
    <value>Konnte Änderungen nicht anwenden</value>
  </data>
  <data name="restart_ekill" xml:space="preserve">
    <value>Konnte USR2-Signal nicht an PID $1 senden : $2</value>
  </data>
  <data name="restart_epid" xml:space="preserve">
    <value>Läuft nicht mehr</value>
  </data>
  <data name="start_err" xml:space="preserve">
    <value>Konnte Xinetd nicht starten</value>
  </data>
  <data name="start_estart" xml:space="preserve">
    <value>$1 gescheitert : $2</value>
  </data>
  <data name="defs_title" xml:space="preserve">
    <value>Standardoptionen</value>
  </data>
  <data name="defs_header" xml:space="preserve">
    <value>Standardoptionen für Dienste</value>
  </data>
  <data name="defs_log" xml:space="preserve">
    <value>Xinetd Protokollierungsmodus</value>
  </data>
  <data name="defs_log_def" xml:space="preserve">
    <value>Protokoll abschalten</value>
  </data>
  <data name="defs_facility" xml:space="preserve">
    <value>In das Syslog protokollieren</value>
  </data>
  <data name="defs_level" xml:space="preserve">
    <value>in Stufe</value>
  </data>
  <data name="defs_file" xml:space="preserve">
    <value>In Datei schreiben</value>
  </data>
  <data name="defs_soft" xml:space="preserve">
    <value>Weiches Dateilimit</value>
  </data>
  <data name="defs_hard" xml:space="preserve">
    <value>Hartes Dateilimit</value>
  </data>
  <data name="defs_success" xml:space="preserve">
    <value>Bei erfolgreicher Verbindung protokolliere</value>
  </data>
  <data name="defs_success_pid" xml:space="preserve">
    <value>Serverprozess-ID</value>
  </data>
  <data name="defs_success_host" xml:space="preserve">
    <value>Entfernter Host</value>
  </data>
  <data name="defs_success_userid" xml:space="preserve">
    <value>Entfernter ident Benutzer</value>
  </data>
  <data name="defs_success_exit" xml:space="preserve">
    <value>Serverbeendigungsstatus</value>
  </data>
  <data name="defs_success_duration" xml:space="preserve">
    <value>Sitzungsdauer</value>
  </data>
  <data name="defs_failure" xml:space="preserve">
    <value>Bei erfolgloser Verbindung protokolliere</value>
  </data>
  <data name="defs_failure_host" xml:space="preserve">
    <value>Entfernter Host</value>
  </data>
  <data name="defs_failure_userid" xml:space="preserve">
    <value>Entfernter ident Benutzer</value>
  </data>
  <data name="defs_failure_attempt" xml:space="preserve">
    <value>Verbindungsversuch</value>
  </data>
  <data name="defs_failure_record" xml:space="preserve">
    <value>Entfernte Information</value>
  </data>
  <data name="defs_err" xml:space="preserve">
    <value>Konnte Standardeigenschaften nicht speichern</value>
  </data>
  <data name="defs_efile" xml:space="preserve">
    <value>Fehlender oder ungültiger Name für die Protokolldatei</value>
  </data>
  <data name="defs_esoft" xml:space="preserve">
    <value>Fehlendes oder ungültiges weiches Dateilimit</value>
  </data>
  <data name="defs_ehard" xml:space="preserve">
    <value>Fehlendes oder ungültiges hartes Dateilimit</value>
  </data>
  <data name="log_create_serv" xml:space="preserve">
    <value>$2 Dienste $1 erstellt</value>
  </data>
  <data name="log_modify_serv" xml:space="preserve">
    <value>$2 Dienste $1 modifiziert</value>
  </data>
  <data name="log_delete_serv" xml:space="preserve">
    <value>$2 Dienste $1 gelöscht</value>
  </data>
  <data name="log_start" xml:space="preserve">
    <value>Xinetd Server gestartet</value>
  </data>
  <data name="log_apply" xml:space="preserve">
    <value>Angewandte Änderungen</value>
  </data>
  <data name="log_defaults" xml:space="preserve">
    <value>Standardoptionen geändert</value>
  </data>
  <data name="log_enable" xml:space="preserve">
    <value>$1 Dienste aktiviert</value>
  </data>
  <data name="log_disable" xml:space="preserve">
    <value>$1 Dienste deaktiviert</value>
  </data>
  <data name="log_enable_l" xml:space="preserve">
    <value>Dienste $1 aktiviert</value>
  </data>
  <data name="log_disable_l" xml:space="preserve">
    <value>Dienste $1 deaktiviert</value>
  </data>
  <data name="config_dirdef" xml:space="preserve">
    <value>Xinetd Konfigurationsdatei</value>
  </data>
  <data name="config_dirto" xml:space="preserve">
    <value>Neue Datei in Verzeichnis</value>
  </data>
</root>