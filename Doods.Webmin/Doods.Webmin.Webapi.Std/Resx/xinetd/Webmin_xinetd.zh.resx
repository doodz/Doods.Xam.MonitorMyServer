<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>扩展的 Internet 服务</value>
  </data>
  <data name="index_type" xml:space="preserve">
    <value>类型</value>
  </data>
  <data name="index_port" xml:space="preserve">
    <value>端口/号码</value>
  </data>
  <data name="index_rpc" xml:space="preserve">
    <value>RPC</value>
  </data>
  <data name="index_inet" xml:space="preserve">
    <value>Internet</value>
  </data>
  <data name="index_proto" xml:space="preserve">
    <value>协议</value>
  </data>
  <data name="index_user" xml:space="preserve">
    <value>用户</value>
  </data>
  <data name="index_server" xml:space="preserve">
    <value>服务器程序</value>
  </data>
  <data name="index_redirect" xml:space="preserve">
    <value>重新定向到 $1</value>
  </data>
  <data name="index_enabled" xml:space="preserve">
    <value>启用吗？</value>
  </data>
  <data name="index_internal" xml:space="preserve">
    <value>Xinetd 本身</value>
  </data>
  <data name="index_add_inet" xml:space="preserve">
    <value>创建一个新的 Internet 服务</value>
  </data>
  <data name="index_add_rpc" xml:space="preserve">
    <value>创建一个新的 RPC 服务</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>服务列表</value>
  </data>
  <data name="index_defaults" xml:space="preserve">
    <value>编辑默认值</value>
  </data>
  <data name="index_defaultsmsg" xml:space="preserve">
    <value>点击此按钮来编辑应用于所有 Internet 和 RPC 服务的默认选项</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>应用改变</value>
  </data>
  <data name="index_applymsg" xml:space="preserve">
    <value>点击此按钮发送一个 SIGHUP 信号到正在运行的 &lt;tt&gt;xinetd&lt;/tt&gt; 进程以应用当前配置</value>
  </data>
  <data name="index_start" xml:space="preserve">
    <value>启动 Xinetd</value>
  </data>
  <data name="index_startmsg" xml:space="preserve">
    <value>点击此按钮以当前的配置来启动 Xinetd 服务器</value>
  </data>
  <data name="serv_create" xml:space="preserve">
    <value>创建 Internet 服务</value>
  </data>
  <data name="serv_edit" xml:space="preserve">
    <value>编辑 Internet 服务</value>
  </data>
  <data name="serv_header1" xml:space="preserve">
    <value>服务网络选项</value>
  </data>
  <data name="serv_header2" xml:space="preserve">
    <value>服务程序选项</value>
  </data>
  <data name="serv_header3" xml:space="preserve">
    <value>服务访问控制</value>
  </data>
  <data name="serv_port" xml:space="preserve">
    <value>端口号</value>
  </data>
  <data name="serv_port_def" xml:space="preserve">
    <value>标准</value>
  </data>
  <data name="serv_sock" xml:space="preserve">
    <value>Socket 类型</value>
  </data>
  <data name="serv_proto" xml:space="preserve">
    <value>协议</value>
  </data>
  <data name="serv_enabled" xml:space="preserve">
    <value>启用服务吗？</value>
  </data>
  <data name="serv_bind" xml:space="preserve">
    <value>捆绑到地址</value>
  </data>
  <data name="serv_bind_def" xml:space="preserve">
    <value>所有</value>
  </data>
  <data name="serv_user" xml:space="preserve">
    <value>作为用户运行</value>
  </data>
  <data name="serv_group" xml:space="preserve">
    <value>作为工作组运行</value>
  </data>
  <data name="serv_group_def" xml:space="preserve">
    <value>来自用户</value>
  </data>
  <data name="serv_prog" xml:space="preserve">
    <value>服务控制于</value>
  </data>
  <data name="serv_internal" xml:space="preserve">
    <value>Xinetd 本身</value>
  </data>
  <data name="serv_server" xml:space="preserve">
    <value>服务器程序</value>
  </data>
  <data name="serv_redirect" xml:space="preserve">
    <value>重新定向到主机</value>
  </data>
  <data name="serv_rport" xml:space="preserve">
    <value>端口</value>
  </data>
  <data name="serv_wait" xml:space="preserve">
    <value>等到完成？</value>
  </data>
  <data name="serv_inst" xml:space="preserve">
    <value>最大的并行服务器数</value>
  </data>
  <data name="serv_inst_def" xml:space="preserve">
    <value>不限</value>
  </data>
  <data name="serv_nice" xml:space="preserve">
    <value>服务器的优先级(nice level)</value>
  </data>
  <data name="serv_cps0" xml:space="preserve">
    <value>每秒钟最大连接数</value>
  </data>
  <data name="serv_cps_def" xml:space="preserve">
    <value>不限</value>
  </data>
  <data name="serv_cps1" xml:space="preserve">
    <value>最大的连接延迟时间</value>
  </data>
  <data name="serv_sec" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="serv_from" xml:space="preserve">
    <value>允许访问来自</value>
  </data>
  <data name="serv_from_def" xml:space="preserve">
    <value>所有主机</value>
  </data>
  <data name="serv_from_sel" xml:space="preserve">
    <value>只有列表中的客户..</value>
  </data>
  <data name="serv_access" xml:space="preserve">
    <value>禁止访问来自</value>
  </data>
  <data name="serv_access_def" xml:space="preserve">
    <value>无主机</value>
  </data>
  <data name="serv_access_sel" xml:space="preserve">
    <value>只有列表中的客户..</value>
  </data>
  <data name="serv_times" xml:space="preserve">
    <value>允许访问的时间</value>
  </data>
  <data name="serv_times_def" xml:space="preserve">
    <value>随时</value>
  </data>
  <data name="serv_err" xml:space="preserve">
    <value>保存服务失败</value>
  </data>
  <data name="serv_eid" xml:space="preserve">
    <value>未输入或无效的服务名</value>
  </data>
  <data name="serv_ebind" xml:space="preserve">
    <value>未输入或无效的地址</value>
  </data>
  <data name="serv_eport" xml:space="preserve">
    <value>未输入或无效的端口号</value>
  </data>
  <data name="serv_einst" xml:space="preserve">
    <value>未输入或无效的并行服务器数</value>
  </data>
  <data name="serv_euser" xml:space="preserve">
    <value>您必须输入一个用户</value>
  </data>
  <data name="serv_egroup" xml:space="preserve">
    <value>您必须输入一个工作组</value>
  </data>
  <data name="serv_estd" xml:space="preserve">
    <value>服务 $1 没有标准的端口号</value>
  </data>
  <data name="serv_eproto" xml:space="preserve">
    <value>您必须为该服务选择一个协议</value>
  </data>
  <data name="serv_eserver" xml:space="preserve">
    <value>未输入或无效的服务器程序</value>
  </data>
  <data name="serv_erhost" xml:space="preserve">
    <value>未输入或无效的重新定向主机</value>
  </data>
  <data name="serv_erport" xml:space="preserve">
    <value>未输入或无效的重新定向端口</value>
  </data>
  <data name="serv_enice" xml:space="preserve">
    <value>未输入或无效的优先级(nice level)</value>
  </data>
  <data name="serv_ecps0" xml:space="preserve">
    <value>未输入或无效的每秒连接数</value>
  </data>
  <data name="serv_ecps1" xml:space="preserve">
    <value>未输入或无效的延迟</value>
  </data>
  <data name="serv_etimes" xml:space="preserve">
    <value>访问时间的格式必须是 HH:MM-HH:MM</value>
  </data>
  <data name="sock_stream" xml:space="preserve">
    <value>流</value>
  </data>
  <data name="sock_dgram" xml:space="preserve">
    <value>数据报</value>
  </data>
  <data name="sock_raw" xml:space="preserve">
    <value>原数据报</value>
  </data>
  <data name="sock_seqpacket" xml:space="preserve">
    <value>连续的数据报</value>
  </data>
  <data name="proto_" xml:space="preserve">
    <value>默认</value>
  </data>
  <data name="proto_ip" xml:space="preserve">
    <value>IP (Internet 协议)</value>
  </data>
  <data name="proto_tcp" xml:space="preserve">
    <value>TCP (传输控制协议)</value>
  </data>
  <data name="proto_udp" xml:space="preserve">
    <value>UDP (用户数据报协议)</value>
  </data>
  <data name="restart_err" xml:space="preserve">
    <value>应用改变值失败</value>
  </data>
  <data name="restart_ekill" xml:space="preserve">
    <value>向 PID $1 发送 HUP 信号失败 : $2</value>
  </data>
  <data name="start_err" xml:space="preserve">
    <value>启动 xinetd 失败</value>
  </data>
  <data name="start_estart" xml:space="preserve">
    <value>$1 失败 : $2</value>
  </data>
  <data name="defs_title" xml:space="preserve">
    <value>默认选项</value>
  </data>
  <data name="defs_header" xml:space="preserve">
    <value>默认服务选项</value>
  </data>
  <data name="defs_log" xml:space="preserve">
    <value>Xinetd 日志模式</value>
  </data>
  <data name="defs_log_def" xml:space="preserve">
    <value>停用日志</value>
  </data>
  <data name="defs_facility" xml:space="preserve">
    <value>在 syslog 中记录日志</value>
  </data>
  <data name="defs_level" xml:space="preserve">
    <value>在等级</value>
  </data>
  <data name="defs_file" xml:space="preserve">
    <value>记录到文件</value>
  </data>
  <data name="defs_soft" xml:space="preserve">
    <value>软性文件限制</value>
  </data>
  <data name="defs_hard" xml:space="preserve">
    <value>硬性文件限制</value>
  </data>
  <data name="defs_success" xml:space="preserve">
    <value>连接成功的日志</value>
  </data>
  <data name="defs_success_pid" xml:space="preserve">
    <value>服务器进程 ID</value>
  </data>
  <data name="defs_success_host" xml:space="preserve">
    <value>远程主机</value>
  </data>
  <data name="defs_success_userid" xml:space="preserve">
    <value>远程认证用户</value>
  </data>
  <data name="defs_success_exit" xml:space="preserve">
    <value>服务器退出状态</value>
  </data>
  <data name="defs_success_duration" xml:space="preserve">
    <value>会话持续时间</value>
  </data>
  <data name="defs_failure" xml:space="preserve">
    <value>连接失败的日志</value>
  </data>
  <data name="defs_failure_host" xml:space="preserve">
    <value>远程主机</value>
  </data>
  <data name="defs_failure_userid" xml:space="preserve">
    <value>远程认证用户</value>
  </data>
  <data name="defs_failure_attempt" xml:space="preserve">
    <value>连接尝试</value>
  </data>
  <data name="defs_failure_record" xml:space="preserve">
    <value>远程信息</value>
  </data>
  <data name="defs_err" xml:space="preserve">
    <value>保存默认选项失败</value>
  </data>
  <data name="defs_efile" xml:space="preserve">
    <value>未输入或无效的日志文件名</value>
  </data>
  <data name="defs_esoft" xml:space="preserve">
    <value>未输入或无效的软性限制</value>
  </data>
  <data name="defs_ehard" xml:space="preserve">
    <value>未输入或无效的硬性限制</value>
  </data>
  <data name="log_create_serv" xml:space="preserve">
    <value>创建了 $2 服务 $1</value>
  </data>
  <data name="log_modify_serv" xml:space="preserve">
    <value>修改了 $2 服务 $1</value>
  </data>
  <data name="log_delete_serv" xml:space="preserve">
    <value>删除了 $2 服务 $1</value>
  </data>
  <data name="log_start" xml:space="preserve">
    <value>启动了 Xinetd 服务器</value>
  </data>
  <data name="log_apply" xml:space="preserve">
    <value>已应用改变值</value>
  </data>
  <data name="log_defaults" xml:space="preserve">
    <value>已变更默认选项</value>
  </data>
</root>