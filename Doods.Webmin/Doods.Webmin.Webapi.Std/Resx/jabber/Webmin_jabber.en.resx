<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Jabber IM Server</value>
  </data>
  <data name="index_expat" xml:space="preserve">
    <value>Make sure you have the Expat C library and headers installed before trying to install the Perl modules, as they depend upon it and will fail if it is not available.</value>
  </data>
  <data name="index_eparse" xml:space="preserve">
    <value>The $1 perl module could not parse your Jabber config file : $2</value>
  </data>
  <data name="index_eversion" xml:space="preserve">
    <value>Webmin only supports Jabber version $2, but the command $3 reported the following version information : $1</value>
  </data>
  <data name="index_eversion2" xml:space="preserve">
    <value>Webmin only supports Jabber versions below $2, but the command $3 reported the following version information : $1</value>
  </data>
  <data name="index_start" xml:space="preserve">
    <value>Start Jabber Server</value>
  </data>
  <data name="index_startmsg" xml:space="preserve">
    <value>Click this button to start the Jabber server on your system. Until it is started, no instant messaging clients will be able to use it.</value>
  </data>
  <data name="index_stop" xml:space="preserve">
    <value>Stop Jabber Server</value>
  </data>
  <data name="index_stopmsg" xml:space="preserve">
    <value>Click this button to stop the running Jabber server on your system. No instant messaging clients will be able to use it when it is stopped.</value>
  </data>
  <data name="index_restart" xml:space="preserve">
    <value>Apply Changes</value>
  </data>
  <data name="index_restartmsg" xml:space="preserve">
    <value>Click this button to apply the current configuration by stopping and then re-starting the Jabber server.</value>
  </data>
  <data name="index_comments" xml:space="preserve">
    <value>Warning - your Jabber config file $1 contains comments, which will be removed if any configuration changes are made using this module.</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>Jabber menu</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>Jabber version $1</value>
  </data>
  <data name="general_title" xml:space="preserve">
    <value>General Options</value>
  </data>
  <data name="general_header" xml:space="preserve">
    <value>Global Jabber server options</value>
  </data>
  <data name="general_host" xml:space="preserve">
    <value>Your server's hostname</value>
  </data>
  <data name="general_elog" xml:space="preserve">
    <value>Error log file</value>
  </data>
  <data name="general_elogfmt" xml:space="preserve">
    <value>Error log format</value>
  </data>
  <data name="general_rlog" xml:space="preserve">
    <value>Access log file</value>
  </data>
  <data name="general_rlogfmt" xml:space="preserve">
    <value>Access log format</value>
  </data>
  <data name="general_pidfile" xml:space="preserve">
    <value>Process ID file</value>
  </data>
  <data name="general_err" xml:space="preserve">
    <value>Failed to save general options</value>
  </data>
  <data name="general_ehost" xml:space="preserve">
    <value>Missing or invalid server hostname</value>
  </data>
  <data name="general_eelog" xml:space="preserve">
    <value>Missing or invalid error log file</value>
  </data>
  <data name="general_eelogfmt" xml:space="preserve">
    <value>Missing error log format</value>
  </data>
  <data name="general_erlog" xml:space="preserve">
    <value>Missing or invalid traffic log file</value>
  </data>
  <data name="general_erlogfmt" xml:space="preserve">
    <value>Missing traffic log format</value>
  </data>
  <data name="general_epidfile" xml:space="preserve">
    <value>Missing or invalid process ID file</value>
  </data>
  <data name="messages_title" xml:space="preserve">
    <value>Messages</value>
  </data>
  <data name="messages_header" xml:space="preserve">
    <value>Jabber server message for clients</value>
  </data>
  <data name="messages_wsubject" xml:space="preserve">
    <value>Welcome message subject</value>
  </data>
  <data name="messages_wbody" xml:space="preserve">
    <value>Welcome message body</value>
  </data>
  <data name="messages_vcard" xml:space="preserve">
    <value>Server vCard</value>
  </data>
  <data name="messages_rinstr" xml:space="preserve">
    <value>Registration instructions</value>
  </data>
  <data name="messages_rnotify" xml:space="preserve">
    <value>Notify admin on registration?</value>
  </data>
  <data name="messages_rfields" xml:space="preserve">
    <value>Required registration fields</value>
  </data>
  <data name="messages_vcard2jud" xml:space="preserve">
    <value>Send vCard to Jabber user directory?</value>
  </data>
  <data name="messages_err" xml:space="preserve">
    <value>Failed to save messages</value>
  </data>
  <data name="messages_evcard" xml:space="preserve">
    <value>Invalid vCard XML : $1</value>
  </data>
  <data name="messages_etag" xml:space="preserve">
    <value>Server vCard XML does not start with &amp;lt;vCard&amp;gt;</value>
  </data>
  <data name="modules_title" xml:space="preserve">
    <value>Jabber Modules</value>
  </data>
  <data name="modules_desc" xml:space="preserve">
    <value>The modules listed below are used in order to process messages received by the Jabber session manager. You should only change this list if you know what you are doing.</value>
  </data>
  <data name="modules_header" xml:space="preserve">
    <value>Jabber server session manager modules</value>
  </data>
  <data name="modules_mod" xml:space="preserve">
    <value>Module name</value>
  </data>
  <data name="modules_so" xml:space="preserve">
    <value>Shared library</value>
  </data>
  <data name="modules_err" xml:space="preserve">
    <value>Failed to save Jabber modules</value>
  </data>
  <data name="modules_emod" xml:space="preserve">
    <value>'$1' is not a valid module name</value>
  </data>
  <data name="modules_eso" xml:space="preserve">
    <value>Shared library '$1' does not exist</value>
  </data>
  <data name="karma_title" xml:space="preserve">
    <value>Karma Traffic Control</value>
  </data>
  <data name="karma_header" xml:space="preserve">
    <value>Traffic rate control options</value>
  </data>
  <data name="karma_rate" xml:space="preserve">
    <value>Excessive connection handling</value>
  </data>
  <data name="karma_rate_def" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="karma_rate_sel" xml:space="preserve">
    <value>Block client for $2 seconds after $1 connections</value>
  </data>
  <data name="karma_mode" xml:space="preserve">
    <value>Karma mode</value>
  </data>
  <data name="karma_none" xml:space="preserve">
    <value>No limits</value>
  </data>
  <data name="karma_low" xml:space="preserve">
    <value>Low traffic limits</value>
  </data>
  <data name="karma_medium" xml:space="preserve">
    <value>Medium traffic limits</value>
  </data>
  <data name="karma_high" xml:space="preserve">
    <value>High traffic limits</value>
  </data>
  <data name="karma_sel" xml:space="preserve">
    <value>Use settings selected below ..</value>
  </data>
  <data name="karma_heartbeat" xml:space="preserve">
    <value>Period length in seconds (&lt;tt&gt;heartbeat&lt;/tt&gt;)</value>
  </data>
  <data name="karma_init" xml:space="preserve">
    <value>Initialization periods (&lt;tt&gt;init&lt;/tt&gt;)</value>
  </data>
  <data name="karma_max" xml:space="preserve">
    <value>Karma maximum (&lt;tt&gt;max&lt;/tt&gt;)</value>
  </data>
  <data name="karma_inc" xml:space="preserve">
    <value>Karma increment (&lt;tt&gt;inc&lt;/tt&gt;)</value>
  </data>
  <data name="karma_dec" xml:space="preserve">
    <value>Karma decrement (&lt;tt&gt;dec&lt;/tt&gt;)</value>
  </data>
  <data name="karma_penalty" xml:space="preserve">
    <value>Penalty periods (&lt;tt&gt;penalty&lt;/tt&gt;)</value>
  </data>
  <data name="karma_restore" xml:space="preserve">
    <value>Burst restore periods (&lt;tt&gt;restore&lt;/tt&gt;)</value>
  </data>
  <data name="karma_err" xml:space="preserve">
    <value>Failed to save karma options</value>
  </data>
  <data name="karma_eheartbeat" xml:space="preserve">
    <value>Missing or invalid period length</value>
  </data>
  <data name="karma_einit" xml:space="preserve">
    <value>Missing or invalid initialization periods</value>
  </data>
  <data name="karma_emax" xml:space="preserve">
    <value>Missing or invalid karma maximum</value>
  </data>
  <data name="karma_einc" xml:space="preserve">
    <value>Missing or invalid karma increment</value>
  </data>
  <data name="karma_edec" xml:space="preserve">
    <value>Missing or invalid karma decrement</value>
  </data>
  <data name="karma_epenalty" xml:space="preserve">
    <value>Missing or invalid penalty periods</value>
  </data>
  <data name="karma_erestore" xml:space="preserve">
    <value>Missing or invalid restore periods</value>
  </data>
  <data name="karma_epoints" xml:space="preserve">
    <value>Missing or invalid number of connections</value>
  </data>
  <data name="karma_etime" xml:space="preserve">
    <value>Missing or invalid time to block for</value>
  </data>
  <data name="ips_title" xml:space="preserve">
    <value>IP Access Control</value>
  </data>
  <data name="ips_header" xml:space="preserve">
    <value>Jabber server IP access control</value>
  </data>
  <data name="ips_allow" xml:space="preserve">
    <value>Allowed client IPs</value>
  </data>
  <data name="ips_all" xml:space="preserve">
    <value>All addresses</value>
  </data>
  <data name="ips_deny" xml:space="preserve">
    <value>Denied client IPs</value>
  </data>
  <data name="ips_none" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="ips_sel" xml:space="preserve">
    <value>Listed addresses/netmasks ..</value>
  </data>
  <data name="ips_err" xml:space="preserve">
    <value>Failed to save IP access control</value>
  </data>
  <data name="ips_eaddr" xml:space="preserve">
    <value>'$1' is not a valid IP address or IP address/netmask</value>
  </data>
  <data name="file_title" xml:space="preserve">
    <value>Edit Config File</value>
  </data>
  <data name="file_desc" xml:space="preserve">
    <value>Use the form below to edit the Jabber config file directly. This should only be done if you understand the XML configuration format.</value>
  </data>
  <data name="file_header" xml:space="preserve">
    <value>Edit Jabber configuration file</value>
  </data>
  <data name="file_err" xml:space="preserve">
    <value>Failed to save config file</value>
  </data>
  <data name="admin_title" xml:space="preserve">
    <value>Administrative Users</value>
  </data>
  <data name="admin_header" xml:space="preserve">
    <value>Server adminstration users</value>
  </data>
  <data name="admin_read" xml:space="preserve">
    <value>Read access admins</value>
  </data>
  <data name="admin_write" xml:space="preserve">
    <value>Write access admins</value>
  </data>
  <data name="admin_reply" xml:space="preserve">
    <value>Autoreply to admin messages?</value>
  </data>
  <data name="admin_rsubject" xml:space="preserve">
    <value>Autoreply subject</value>
  </data>
  <data name="admin_rbody" xml:space="preserve">
    <value>Autoreply message</value>
  </data>
  <data name="filter_title" xml:space="preserve">
    <value>User Filters</value>
  </data>
  <data name="filter_header" xml:space="preserve">
    <value>User filter permissions</value>
  </data>
  <data name="filter_max" xml:space="preserve">
    <value>Maximum filter rules</value>
  </data>
  <data name="filter_conds" xml:space="preserve">
    <value>Allowed filter conditions</value>
  </data>
  <data name="filter_acts" xml:space="preserve">
    <value>Allowed filter actions</value>
  </data>
  <data name="restart_err" xml:space="preserve">
    <value>Failed to apply changes</value>
  </data>
  <data name="stop_err" xml:space="preserve">
    <value>Failed to stop Jabber</value>
  </data>
  <data name="stop_epid" xml:space="preserve">
    <value>Failed to find Jabber process</value>
  </data>
  <data name="start_err" xml:space="preserve">
    <value>Failed to start Jabber</value>
  </data>
  <data name="__norefs" xml:space="preserve">
    <value>1</value>
  </data>
</root>