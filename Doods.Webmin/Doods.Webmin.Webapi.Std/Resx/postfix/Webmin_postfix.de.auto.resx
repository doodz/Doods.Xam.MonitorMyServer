<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="sni_title" xml:space="preserve">
    <value>Zertifikatzuordnung</value>
  </data>
  <data name="sni_ecannot" xml:space="preserve">
    <value>Sie dürfen die Konfiguration der Zertifikatszuordnung nicht bearbeiten</value>
  </data>
  <data name="opts_sni_maps" xml:space="preserve">
    <value>Nachschlagetabellen für die Zertifikatszuordnung</value>
  </data>
  <data name="sni_return" xml:space="preserve">
    <value>Zertifikatskarten</value>
  </data>
  <data name="sni_dom" xml:space="preserve">
    <value>Hostname</value>
  </data>
  <data name="sni_certs" xml:space="preserve">
    <value>Zertifikatdateien</value>
  </data>
  <data name="acl_sni" xml:space="preserve">
    <value>Kann Zertifikate bearbeiten?</value>
  </data>
  <data name="log_opts" xml:space="preserve">
    <value>Adressumschreibung und Maskierung geändert</value>
  </data>
  <data name="log_aliases" xml:space="preserve">
    <value>Aliase-Optionen geändert</value>
  </data>
  <data name="log_canonical" xml:space="preserve">
    <value>Kanonische Mapping-Optionen ändern</value>
  </data>
  <data name="log_transport" xml:space="preserve">
    <value>Geänderte Transportzuordnungsoptionen</value>
  </data>
  <data name="log_sni" xml:space="preserve">
    <value>Ändern Sie die Zertifikatzuordnungsoptionen</value>
  </data>
  <data name="log_dependent" xml:space="preserve">
    <value>Geberabhängige Adressoptionen geändert</value>
  </data>
  <data name="log_relocated" xml:space="preserve">
    <value>Geänderte Optionen für die Zuordnungszuordnung</value>
  </data>
  <data name="log_header" xml:space="preserve">
    <value>Geänderte Optionen für die Headerprüfung</value>
  </data>
  <data name="log_body" xml:space="preserve">
    <value>Geänderte Body-Check-Optionen</value>
  </data>
  <data name="log_ldap" xml:space="preserve">
    <value>Geänderte LDAP-Lookups</value>
  </data>
  <data name="log_rate" xml:space="preserve">
    <value>Geänderte Lieferraten</value>
  </data>
  <data name="log_resource" xml:space="preserve">
    <value>Allgemeine Ressourcensteuerung geändert</value>
  </data>
  <data name="log_manual_virtual_alias_mapss" xml:space="preserve">
    <value>Manuell bearbeitete virtuelle Domänen in $1</value>
  </data>
  <data name="log_manual_virtual_mapss" xml:space="preserve">
    <value>Manuell bearbeitete virtuelle Domänen in $1</value>
  </data>
  <data name="log_canonical_maps_create" xml:space="preserve">
    <value>Kanonisches Mapping erstellt $1</value>
  </data>
  <data name="log_canonical_maps_modify" xml:space="preserve">
    <value>Geänderte kanonische Zuordnung $1</value>
  </data>
  <data name="log_canonical_maps_delete" xml:space="preserve">
    <value>Kanonische Zuordnung gelöscht $1</value>
  </data>
  <data name="log_delete_canonical_mapss" xml:space="preserve">
    <value>$1 kanonische Zuordnungen gelöscht</value>
  </data>
  <data name="log_manual_canonical_mapss" xml:space="preserve">
    <value>Manuell bearbeitete kanonische Zuordnungen in $1</value>
  </data>
  <data name="log_recipient_canonical_maps_create" xml:space="preserve">
    <value>Kanonische Zuordnung des Empfängers erstellt $1</value>
  </data>
  <data name="log_recipient_canonical_maps_modify" xml:space="preserve">
    <value>Geänderte kanonische Empfängerzuordnung $1</value>
  </data>
  <data name="log_recipient_canonical_maps_delete" xml:space="preserve">
    <value>Kanonische Zuordnung des Empfängers gelöscht $1</value>
  </data>
  <data name="log_delete_recipient_canonical_mapss" xml:space="preserve">
    <value>$1 kanonische Empfängerzuordnungen gelöscht</value>
  </data>
  <data name="log_manual_recipient_canonical_mapss" xml:space="preserve">
    <value>Manuell bearbeitete kanonische Empfängerzuordnungen in $1</value>
  </data>
  <data name="log_sender_canonical_maps_create" xml:space="preserve">
    <value>Kanonische Zuordnung des Absenders erstellt $1</value>
  </data>
  <data name="log_sender_canonical_maps_modify" xml:space="preserve">
    <value>Kanonische Zuordnung des Absenders geändert $1</value>
  </data>
  <data name="log_sender_canonical_maps_delete" xml:space="preserve">
    <value>Kanonische Zuordnung des Absenders gelöscht $1</value>
  </data>
  <data name="log_delete_sender_canonical_mapss" xml:space="preserve">
    <value>$1 kanonische Zuordnungen von Absendern gelöscht</value>
  </data>
  <data name="log_manual_sender_canonical_mapss" xml:space="preserve">
    <value>Manuell bearbeitete kanonische Absenderzuordnungen in $1</value>
  </data>
  <data name="log_transport_maps_create" xml:space="preserve">
    <value>Transportzuordnung erstellt $1</value>
  </data>
  <data name="log_transport_maps_modify" xml:space="preserve">
    <value>Geänderte Transportzuordnung $1</value>
  </data>
  <data name="log_transport_maps_delete" xml:space="preserve">
    <value>Gelöschte Transportzuordnung $1</value>
  </data>
  <data name="log_delete_transport_mapss" xml:space="preserve">
    <value>$1 Transportzuordnungen gelöscht</value>
  </data>
  <data name="log_manual_transport_mapss" xml:space="preserve">
    <value>Manuell bearbeitete Transportzuordnungen in $1</value>
  </data>
  <data name="log_relocated_maps_create" xml:space="preserve">
    <value>Verschobene Zuordnung erstellt $1</value>
  </data>
  <data name="log_relocated_maps_modify" xml:space="preserve">
    <value>Geändertes verschobenes Mapping $1</value>
  </data>
  <data name="log_relocated_maps_delete" xml:space="preserve">
    <value>Gelöschte verschobene Zuordnung $1</value>
  </data>
  <data name="log_delete_relocated_mapss" xml:space="preserve">
    <value>$1 verschobene Zuordnungen gelöscht</value>
  </data>
  <data name="log_manual_relocated_mapss" xml:space="preserve">
    <value>Manuell bearbeitete verschobene Zuordnungen in $1</value>
  </data>
  <data name="log_header_checks_create" xml:space="preserve">
    <value>Header-Check erstellt $1</value>
  </data>
  <data name="log_header_checks_modify" xml:space="preserve">
    <value>Geänderte Header-Prüfung $1</value>
  </data>
  <data name="log_header_checks_delete" xml:space="preserve">
    <value>Überprüfung des gelöschten Headers $1</value>
  </data>
  <data name="log_delete_header_checkss" xml:space="preserve">
    <value>$1 -Headerprüfungen gelöscht</value>
  </data>
  <data name="log_manual_header_checkss" xml:space="preserve">
    <value>Manuell bearbeitete Header-Checks in $1</value>
  </data>
  <data name="log_body_checks_create" xml:space="preserve">
    <value>Body Check $1 erstellt</value>
  </data>
  <data name="log_body_checks_modify" xml:space="preserve">
    <value>Geänderte Body-Prüfung $1</value>
  </data>
  <data name="log_body_checks_delete" xml:space="preserve">
    <value>Körperprüfung $1 gelöscht</value>
  </data>
  <data name="log_delete_body_checkss" xml:space="preserve">
    <value>$1 Body Checks gelöscht</value>
  </data>
  <data name="log_manual_body_checkss" xml:space="preserve">
    <value>Manuell bearbeitete Body-Checks in $1</value>
  </data>
  <data name="log_manual" xml:space="preserve">
    <value>Manuell bearbeitete Konfigurationsdatei $1</value>
  </data>
  <data name="log_delqs" xml:space="preserve">
    <value>$1 -Nachrichten aus der E-Mail-Warteschlange gelöscht</value>
  </data>
  <data name="log_flushq" xml:space="preserve">
    <value>Leere Mail-Warteschlange</value>
  </data>
  <data name="log_backend" xml:space="preserve">
    <value>Aktualisierte Konfigurationsdatei für map $1</value>
  </data>
  <data name="log_sender_dependent_default_transport_maps_create" xml:space="preserve">
    <value>Absenderabhängige Adresse erstellt $1</value>
  </data>
  <data name="log_sender_dependent_default_transport_maps_modify" xml:space="preserve">
    <value>Geänderte senderabhängige Adresse $1</value>
  </data>
  <data name="log_sender_dependent_default_transport_maps_delete" xml:space="preserve">
    <value>Gelöschte senderabhängige Adresse $1</value>
  </data>
  <data name="log_delete_sender_dependent_default_transport_mapss" xml:space="preserve">
    <value>$1 senderabhängige Adressen gelöscht</value>
  </data>
  <data name="log_manual_sender_dependent_default_transport_mapss" xml:space="preserve">
    <value>Manuell bearbeitete senderabhängige Adressen in $1</value>
  </data>
</root>