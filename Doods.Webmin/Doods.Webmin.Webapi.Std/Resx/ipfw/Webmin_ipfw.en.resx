<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>BSD Firewall</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>IPFW version $1</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>Apply Configuration</value>
  </data>
  <data name="index_applydesc" xml:space="preserve">
    <value>Click this button to make the firewall configuration listed above active. Any firewall rules currently in effect will be flushed and replaced </value>
  </data>
  <data name="index_applydesc2" xml:space="preserve">
    <value>Click this button to make the firewall configuration listed above active on all servers in the cluster. Any firewall rules currently in effect will be flushed and replaced </value>
  </data>
  <data name="index_unapply" xml:space="preserve">
    <value>Revert Configuration</value>
  </data>
  <data name="index_unapplydesc" xml:space="preserve">
    <value>Click this button to reset the configuration listed above to the one that is currently active.</value>
  </data>
  <data name="index_boot" xml:space="preserve">
    <value>Activate at boot</value>
  </data>
  <data name="index_bootdesc" xml:space="preserve">
    <value>Change this option to control whether your firewall is activated at boot time or not.</value>
  </data>
  <data name="index_setup" xml:space="preserve">
    <value>No IPFW firewall has been setup yet on your system. Webmin can set one up for you, to be stored in the file $1, with the initial settings based your selection of firewall type below..</value>
  </data>
  <data name="index_rsetup" xml:space="preserve">
    <value>The IPFW firewall configuration on your system is about to be re-set. Webmin will set up new default rules, to be stored in the file $1, with the initial settings based your selection of firewall type below..</value>
  </data>
  <data name="index_auto0" xml:space="preserve">
    <value>Allow all traffic</value>
  </data>
  <data name="index_auto1" xml:space="preserve">
    <value>Do network address translation on external interface:</value>
  </data>
  <data name="index_auto2" xml:space="preserve">
    <value>Block all incoming connections on external interface:</value>
  </data>
  <data name="index_auto3" xml:space="preserve">
    <value>Block all except SSH and IDENT on external interface:</value>
  </data>
  <data name="index_auto4" xml:space="preserve">
    <value>Block all except SSH, IDENT, ping and high ports on interface:</value>
  </data>
  <data name="index_auto" xml:space="preserve">
    <value>Setup Firewall</value>
  </data>
  <data name="index_atboot" xml:space="preserve">
    <value>Enable firewall at boot time?</value>
  </data>
  <data name="index_count1" xml:space="preserve">
    <value>Packets</value>
  </data>
  <data name="index_count2" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="index_reset" xml:space="preserve">
    <value>Reset Firewall</value>
  </data>
  <data name="index_resetdesc" xml:space="preserve">
    <value>Click this button to clear all existing firewall rules and set up new rules for a basic initial configuration.</value>
  </data>
  <data name="index_cluster" xml:space="preserve">
    <value>Cluster Servers</value>
  </data>
  <data name="index_clusterdesc" xml:space="preserve">
    <value>Click this button to set up additional Webmin servers to which the firewall configuration will be automatically copied.</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>firewall rules</value>
  </data>
  <data name="index_num" xml:space="preserve">
    <value>Num</value>
  </data>
  <data name="index_action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="index_desc" xml:space="preserve">
    <value>Condition</value>
  </data>
  <data name="index_cmt" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="index_move" xml:space="preserve">
    <value>Move</value>
  </data>
  <data name="index_radd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="index_add" xml:space="preserve">
    <value>Add a new firewall rule.</value>
  </data>
  <data name="index_add2" xml:space="preserve">
    <value>Add Firewall Rule</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>Delete Selected</value>
  </data>
  <data name="index_existing" xml:space="preserve">
    <value>Webmin has detected $1 IPFW firewall rules currently in use, which are not recorded in the file $2. These rules were probably setup from a script, which this module does not know how to read and edit.&lt;p&gt;If you want to use this module to manage your IPFW firewall, click the button below to convert the existing rules to a save file, and then disable your existing firewall script.</value>
  </data>
  <data name="index_saveex" xml:space="preserve">
    <value>Save Firewall Rules</value>
  </data>
  <data name="index_headerex" xml:space="preserve">
    <value>Existing firewall configuration</value>
  </data>
  <data name="action_skipto" xml:space="preserve">
    <value>Skip to</value>
  </data>
  <data name="action_check-state" xml:space="preserve">
    <value>Check dynamic ruleset</value>
  </data>
  <data name="action_count" xml:space="preserve">
    <value>Update counters</value>
  </data>
  <data name="action_divert" xml:space="preserve">
    <value>Divert to port</value>
  </data>
  <data name="action_fwd" xml:space="preserve">
    <value>Forward to IP and port</value>
  </data>
  <data name="action_pipe" xml:space="preserve">
    <value>Pass to pipe</value>
  </data>
  <data name="action_queue" xml:space="preserve">
    <value>Pass to queue</value>
  </data>
  <data name="action_tee" xml:space="preserve">
    <value>Send copy to port</value>
  </data>
  <data name="action_unreach" xml:space="preserve">
    <value>Return ICMP</value>
  </data>
  <data name="laction_skipto" xml:space="preserve">
    <value>Skip to rule</value>
  </data>
  <data name="edit_title1" xml:space="preserve">
    <value>Create Rule</value>
  </data>
  <data name="edit_title2" xml:space="preserve">
    <value>Edit Rule $1</value>
  </data>
  <data name="edit_header1" xml:space="preserve">
    <value>Rule action</value>
  </data>
  <data name="edit_cmt" xml:space="preserve">
    <value>Rule comment</value>
  </data>
  <data name="edit_action" xml:space="preserve">
    <value>Action to take</value>
  </data>
  <data name="edit_num" xml:space="preserve">
    <value>Ordering number</value>
  </data>
  <data name="edit_log" xml:space="preserve">
    <value>Log matching packets?</value>
  </data>
  <data name="edit_logyes" xml:space="preserve">
    <value>Yes, at most $1 times (leave empty for no limit)</value>
  </data>
  <data name="edit_proto" xml:space="preserve">
    <value>Protocol</value>
  </data>
  <data name="edit_proto_not" xml:space="preserve">
    <value>Any protocol except selected</value>
  </data>
  <data name="edit_any" xml:space="preserve">
    <value>&amp;lt;Any&amp;gt;</value>
  </data>
  <data name="edit_desc" xml:space="preserve">
    <value>The action selected above will only be carried out if &lt;b&gt;all&lt;/b&gt; the conditions below are met.</value>
  </data>
  <data name="edit_headerfrom" xml:space="preserve">
    <value>Packet source conditions</value>
  </data>
  <data name="edit_headerto" xml:space="preserve">
    <value>Packet destination conditions</value>
  </data>
  <data name="edit_from" xml:space="preserve">
    <value>Source address</value>
  </data>
  <data name="edit_sany" xml:space="preserve">
    <value>Any address</value>
  </data>
  <data name="edit_sme" xml:space="preserve">
    <value>Firewall system's addresses</value>
  </data>
  <data name="edit_saddr" xml:space="preserve">
    <value>Address, host or network</value>
  </data>
  <data name="edit_snot" xml:space="preserve">
    <value>All addresses except those selected</value>
  </data>
  <data name="edit_to" xml:space="preserve">
    <value>Destination address</value>
  </data>
  <data name="edit_portfrom" xml:space="preserve">
    <value>Source ports</value>
  </data>
  <data name="edit_pany" xml:space="preserve">
    <value>Any ports</value>
  </data>
  <data name="edit_ports" xml:space="preserve">
    <value>Port numbers, names or ranges</value>
  </data>
  <data name="edit_portto" xml:space="preserve">
    <value>Destination ports</value>
  </data>
  <data name="edit_pnot" xml:space="preserve">
    <value>All ports except those entered</value>
  </data>
  <data name="edit_header2" xml:space="preserve">
    <value>Other rule options</value>
  </data>
  <data name="edit_inout" xml:space="preserve">
    <value>Packet direction</value>
  </data>
  <data name="edit_ignored" xml:space="preserve">
    <value>Ignored</value>
  </data>
  <data name="edit_inout1" xml:space="preserve">
    <value>Incoming</value>
  </data>
  <data name="edit_inout2" xml:space="preserve">
    <value>Outgoing</value>
  </data>
  <data name="edit_via" xml:space="preserve">
    <value>Passed via interface</value>
  </data>
  <data name="edit_recv" xml:space="preserve">
    <value>Received on interface</value>
  </data>
  <data name="edit_xmit" xml:space="preserve">
    <value>Sent on interface</value>
  </data>
  <data name="edit_oifc" xml:space="preserve">
    <value>Other..</value>
  </data>
  <data name="edit_orblock" xml:space="preserve">
    <value>IPFW expression</value>
  </data>
  <data name="edit_established" xml:space="preserve">
    <value>Match established TCP connections?</value>
  </data>
  <data name="edit_keep-state" xml:space="preserve">
    <value>Allow rest of connection?</value>
  </data>
  <data name="edit_bridged" xml:space="preserve">
    <value>Match bridged packets?</value>
  </data>
  <data name="edit_frag" xml:space="preserve">
    <value>Match fragmented packets?</value>
  </data>
  <data name="edit_setup" xml:space="preserve">
    <value>Match TCP connection setup?</value>
  </data>
  <data name="edit_mac1" xml:space="preserve">
    <value>Source MAC address</value>
  </data>
  <data name="edit_mac2" xml:space="preserve">
    <value>Destination MAC address</value>
  </data>
  <data name="edit_macaddr" xml:space="preserve">
    <value>Ethernet address</value>
  </data>
  <data name="edit_uid" xml:space="preserve">
    <value>Send or received by user</value>
  </data>
  <data name="edit_gid" xml:space="preserve">
    <value>Send or received by group</value>
  </data>
  <data name="edit_dstport" xml:space="preserve">
    <value>Optional destination ports are</value>
  </data>
  <data name="edit_srcport" xml:space="preserve">
    <value>Optional source ports are</value>
  </data>
  <data name="edit_user" xml:space="preserve">
    <value>Unix user or #UID</value>
  </data>
  <data name="edit_group" xml:space="preserve">
    <value>Unix group or #GID</value>
  </data>
  <data name="edit_header3" xml:space="preserve">
    <value>Rule conditions</value>
  </data>
  <data name="edit_icmptypes" xml:space="preserve">
    <value>Match ICMP types</value>
  </data>
  <data name="edit_tcpflags" xml:space="preserve">
    <value>Match if TCP flags are set</value>
  </data>
  <data name="edit_not" xml:space="preserve">
    <value>Not $1</value>
  </data>
  <data name="edit_limit" xml:space="preserve">
    <value>Maximum matching connections</value>
  </data>
  <data name="edit_unlimited" xml:space="preserve">
    <value>Unlimited</value>
  </data>
  <data name="edit_src-addr" xml:space="preserve">
    <value>From source address..</value>
  </data>
  <data name="edit_src-port" xml:space="preserve">
    <value>From source port..</value>
  </data>
  <data name="edit_dst-addr" xml:space="preserve">
    <value>To destination address..</value>
  </data>
  <data name="edit_dst-port" xml:space="preserve">
    <value>To destination port..</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>Failed to save rule</value>
  </data>
  <data name="save_enum" xml:space="preserve">
    <value>Missing or invalid rule number</value>
  </data>
  <data name="save_eskipto" xml:space="preserve">
    <value>Missing or invalid rule number to skip to</value>
  </data>
  <data name="save_efwdip" xml:space="preserve">
    <value>Missing or invalid IP address to forward to</value>
  </data>
  <data name="save_efwdport" xml:space="preserve">
    <value>Invalid port number to forward to</value>
  </data>
  <data name="save_eteeport" xml:space="preserve">
    <value>Missing or invalid port number in action</value>
  </data>
  <data name="save_efrom" xml:space="preserve">
    <value>Missing or invalid source address, host or network</value>
  </data>
  <data name="save_eto" xml:space="preserve">
    <value>Missing or invalid destination address, host or network</value>
  </data>
  <data name="save_eportsprotofrom" xml:space="preserve">
    <value>Source ports can only be specified for the TCP or UDP protocols</value>
  </data>
  <data name="save_eportsprototo" xml:space="preserve">
    <value>Destination ports can only be specified for the TCP or UDP protocols</value>
  </data>
  <data name="save_eportsfrom" xml:space="preserve">
    <value>Missing or invalid source port number, name, range or comma-separate list</value>
  </data>
  <data name="save_eportsto" xml:space="preserve">
    <value>Missing or invalid destination port number, name, range or comma-separate list</value>
  </data>
  <data name="save_elogamount" xml:space="preserve">
    <value>Invalid maximum number of times to log</value>
  </data>
  <data name="save_evia" xml:space="preserve">
    <value>Invalid passed via interface</value>
  </data>
  <data name="send_erecv" xml:space="preserve">
    <value>Invalid recieved interface</value>
  </data>
  <data name="send_exmit" xml:space="preserve">
    <value>Invalid transmitted interface</value>
  </data>
  <data name="save_eorblockproto" xml:space="preserve">
    <value>Missing or invalid IPFW expression for protocol</value>
  </data>
  <data name="save_eorblockfrom" xml:space="preserve">
    <value>Missing or invalid IPFW expression for source address</value>
  </data>
  <data name="save_eorblockto" xml:space="preserve">
    <value>Missing or invalid IPFW expression for destination address</value>
  </data>
  <data name="save_eorblockfrom_ports" xml:space="preserve">
    <value>Missing or invalid IPFW expression for source ports</value>
  </data>
  <data name="save_eorblockto_ports" xml:space="preserve">
    <value>Missing or invalid IPFW expression for destination ports</value>
  </data>
  <data name="save_emac1" xml:space="preserve">
    <value>Invalid source MAC address</value>
  </data>
  <data name="save_emac2" xml:space="preserve">
    <value>Invalid destination MAC address</value>
  </data>
  <data name="save_euid" xml:space="preserve">
    <value>Missing or invalid Unix username</value>
  </data>
  <data name="save_egid" xml:space="preserve">
    <value>Missing or invalid Unix group name</value>
  </data>
  <data name="save_eicmptypes" xml:space="preserve">
    <value>ICMP types can only be specified if the protocol is ICMP</value>
  </data>
  <data name="save_etcpflags" xml:space="preserve">
    <value>TCP flags can only be specified if the protocol is TCP</value>
  </data>
  <data name="save_elimit" xml:space="preserve">
    <value>Missing or invalid maximum limit</value>
  </data>
  <data name="save_edstport" xml:space="preserve">
    <value>Missing or invalid destination port</value>
  </data>
  <data name="save_esrcport" xml:space="preserve">
    <value>Missing or invalid source port</value>
  </data>
  <data name="apply_err" xml:space="preserve">
    <value>Failed to apply configuration</value>
  </data>
  <data name="desc_if" xml:space="preserve">
    <value>If $1</value>
  </data>
  <data name="desc_and" xml:space="preserve">
    <value>and</value>
  </data>
  <data name="desc_always" xml:space="preserve">
    <value>Always</value>
  </data>
  <data name="desc_proto" xml:space="preserve">
    <value>protocol is $1</value>
  </data>
  <data name="desc_proto_not" xml:space="preserve">
    <value>protocol is not $1</value>
  </data>
  <data name="desc_from" xml:space="preserve">
    <value>source is $1</value>
  </data>
  <data name="desc_from_not" xml:space="preserve">
    <value>source is not</value>
  </data>
  <data name="desc_to" xml:space="preserve">
    <value>destination is $1</value>
  </data>
  <data name="desc_to_not" xml:space="preserve">
    <value>destination is not $1</value>
  </data>
  <data name="desc_me" xml:space="preserve">
    <value>this host</value>
  </data>
  <data name="desc_from_ports" xml:space="preserve">
    <value>source port is $1</value>
  </data>
  <data name="desc_from_ports_not" xml:space="preserve">
    <value>source port is not $1</value>
  </data>
  <data name="desc_to_ports" xml:space="preserve">
    <value>destination port is $1</value>
  </data>
  <data name="desc_to_ports_not" xml:space="preserve">
    <value>destination port is not $1</value>
  </data>
  <data name="desc_established" xml:space="preserve">
    <value>connection is established</value>
  </data>
  <data name="desc_established_not" xml:space="preserve">
    <value>connection is not established</value>
  </data>
  <data name="desc_bridged" xml:space="preserve">
    <value>is bridged</value>
  </data>
  <data name="desc_bridged_not" xml:space="preserve">
    <value>is not bridged</value>
  </data>
  <data name="desc_frag" xml:space="preserve">
    <value>is fragmented</value>
  </data>
  <data name="desc_frag_not" xml:space="preserve">
    <value>is not fragmented</value>
  </data>
  <data name="desc_setup" xml:space="preserve">
    <value>is TCP setup</value>
  </data>
  <data name="desc_setup_not" xml:space="preserve">
    <value>is not TCP setup</value>
  </data>
  <data name="desc_xmit" xml:space="preserve">
    <value>transmitted on $1</value>
  </data>
  <data name="desc_xmit_not" xml:space="preserve">
    <value>not transmitted on $1</value>
  </data>
  <data name="desc_recv" xml:space="preserve">
    <value>received on $1</value>
  </data>
  <data name="desc_recv_not" xml:space="preserve">
    <value>not received on $1</value>
  </data>
  <data name="desc_via" xml:space="preserve">
    <value>passed via $1</value>
  </data>
  <data name="desc_via_not" xml:space="preserve">
    <value>not passed via $1</value>
  </data>
  <data name="desc_mac" xml:space="preserve">
    <value>destination MAC is $1 and source MAC is $2</value>
  </data>
  <data name="desc_mac1" xml:space="preserve">
    <value>source MAC is $1</value>
  </data>
  <data name="desc_mac2" xml:space="preserve">
    <value>destination MAC is $1</value>
  </data>
  <data name="desc_uid" xml:space="preserve">
    <value>sent by UID $1</value>
  </data>
  <data name="desc_gid" xml:space="preserve">
    <value>sent by GID $1</value>
  </data>
  <data name="desc_dstport" xml:space="preserve">
    <value>optional destination ports are $1</value>
  </data>
  <data name="desc_srcport" xml:space="preserve">
    <value>optional source ports are $1</value>
  </data>
  <data name="desc_icmptypes" xml:space="preserve">
    <value>ICMP type is $1</value>
  </data>
  <data name="desc_tcpflags" xml:space="preserve">
    <value>TCP flags $1 are set</value>
  </data>
  <data name="desc_src-port" xml:space="preserve">
    <value>source port</value>
  </data>
  <data name="desc_src-addr" xml:space="preserve">
    <value>source address</value>
  </data>
  <data name="desc_dst-port" xml:space="preserve">
    <value>destination port</value>
  </data>
  <data name="desc_dst-addr" xml:space="preserve">
    <value>destination address</value>
  </data>
  <data name="desc_limit" xml:space="preserve">
    <value>, with $1 limit of $2</value>
  </data>
  <data name="desc_where" xml:space="preserve">
    <value>where $1</value>
  </data>
  <data name="desc_all" xml:space="preserve">
    <value>for all packets</value>
  </data>
  <data name="desc_in" xml:space="preserve">
    <value>packet is incoming</value>
  </data>
  <data name="desc_out" xml:space="preserve">
    <value>packet is outgoing</value>
  </data>
  <data name="log_create_rule" xml:space="preserve">
    <value>Created $1 rule</value>
  </data>
  <data name="log_delete_rule" xml:space="preserve">
    <value>Deleted $1 rule</value>
  </data>
  <data name="log_modify_rule" xml:space="preserve">
    <value>Modified $1 rule</value>
  </data>
  <data name="log_move_rule" xml:space="preserve">
    <value>Moved $1 rule</value>
  </data>
  <data name="log_create_rule_l" xml:space="preserve">
    <value>Created $1 rule $2</value>
  </data>
  <data name="log_delete_rule_l" xml:space="preserve">
    <value>Deleted $1 rule $2</value>
  </data>
  <data name="log_modify_rule_l" xml:space="preserve">
    <value>Modified $1 rule $2</value>
  </data>
  <data name="log_move_rule_l" xml:space="preserve">
    <value>Moved $1 rule $2</value>
  </data>
  <data name="log_apply" xml:space="preserve">
    <value>Applied firewall configuration</value>
  </data>
  <data name="log_bootup" xml:space="preserve">
    <value>Enabled firewall at boot</value>
  </data>
  <data name="log_bootdown" xml:space="preserve">
    <value>Disabled firewall at boot</value>
  </data>
  <data name="log_convert" xml:space="preserve">
    <value>Converted active firewall rules</value>
  </data>
  <data name="log_setup" xml:space="preserve">
    <value>Performed initial firewall setup</value>
  </data>
  <data name="log_unapply" xml:space="preserve">
    <value>Reverted firewall configuration</value>
  </data>
  <data name="log_delsel" xml:space="preserve">
    <value>Deleted $1 rules</value>
  </data>
  <data name="cluster_title" xml:space="preserve">
    <value>Cluster Firewall Servers</value>
  </data>
  <data name="cluster_none" xml:space="preserve">
    <value>No servers have been added to the firewall cluster yet.</value>
  </data>
  <data name="cluster_host" xml:space="preserve">
    <value>Hostname</value>
  </data>
  <data name="cluster_desc" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="cluster_os" xml:space="preserve">
    <value>Operating system</value>
  </data>
  <data name="cluster_add" xml:space="preserve">
    <value>Add server</value>
  </data>
  <data name="cluster_gadd" xml:space="preserve">
    <value>Add servers in group</value>
  </data>
  <data name="cluster_need" xml:space="preserve">
    <value>You must add servers with a login and password in the Webmin Servers Index module before they can be managed here.</value>
  </data>
  <data name="cluster_return" xml:space="preserve">
    <value>cluster servers</value>
  </data>
  <data name="cluster_delete" xml:space="preserve">
    <value>Remove Selected</value>
  </data>
  <data name="add_title" xml:space="preserve">
    <value>Add Servers</value>
  </data>
  <data name="add_msg" xml:space="preserve">
    <value>Adding $1 ..</value>
  </data>
  <data name="add_gmsg" xml:space="preserve">
    <value>Adding servers in group $1 ..</value>
  </data>
  <data name="add_err" xml:space="preserve">
    <value>Failed to add server</value>
  </data>
  <data name="add_gerr" xml:space="preserve">
    <value>Failed to add group</value>
  </data>
  <data name="add_echeck" xml:space="preserve">
    <value>Server $1 does not have the IPFW Firewall module</value>
  </data>
  <data name="add_emissing" xml:space="preserve">
    <value>Server $1 does not have the IPFW firewall setup</value>
  </data>
  <data name="add_ok" xml:space="preserve">
    <value>Added $1, with $2 active firewall rules.</value>
  </data>
  <data name="__norefs" xml:space="preserve">
    <value>1</value>
  </data>
</root>