<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>System Documentation</value>
  </data>
  <data name="index_header" xml:space="preserve">
    <value>System documentation search</value>
  </data>
  <data name="index_for" xml:space="preserve">
    <value>Search for</value>
  </data>
  <data name="index_where" xml:space="preserve">
    <value>Search in</value>
  </data>
  <data name="index_alldoc" xml:space="preserve">
    <value>All documentation</value>
  </data>
  <data name="index_man" xml:space="preserve">
    <value>Manual pages</value>
  </data>
  <data name="index_doc" xml:space="preserve">
    <value>Package documentation</value>
  </data>
  <data name="index_kernel" xml:space="preserve">
    <value>Kernel documentation</value>
  </data>
  <data name="index_info" xml:space="preserve">
    <value>Info pages</value>
  </data>
  <data name="index_howto" xml:space="preserve">
    <value>HOWTO documents</value>
  </data>
  <data name="index_kde" xml:space="preserve">
    <value>KDE documentation</value>
  </data>
  <data name="index_perl" xml:space="preserve">
    <value>Perl module documentation</value>
  </data>
  <data name="index_custom" xml:space="preserve">
    <value>Custom documentation</value>
  </data>
  <data name="index_help" xml:space="preserve">
    <value>Webmin help</value>
  </data>
  <data name="index_reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="index_search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>search form</value>
  </data>
  <data name="index_type" xml:space="preserve">
    <value>Match</value>
  </data>
  <data name="index_name" xml:space="preserve">
    <value>Name only</value>
  </data>
  <data name="index_data" xml:space="preserve">
    <value>Name and contents</value>
  </data>
  <data name="index_google" xml:space="preserve">
    <value>Google Search</value>
  </data>
  <data name="index_others" xml:space="preserve">
    <value>When searching documentation from another module, allow searching in ..</value>
  </data>
  <data name="index_other_man" xml:space="preserve">
    <value>Manual pages</value>
  </data>
  <data name="index_other_help" xml:space="preserve">
    <value>Webmin Help</value>
  </data>
  <data name="index_other_doc" xml:space="preserve">
    <value>Package documentation</value>
  </data>
  <data name="index_other_kernel" xml:space="preserve">
    <value>Kernel documentation</value>
  </data>
  <data name="index_other_howto" xml:space="preserve">
    <value>HOWTO documents</value>
  </data>
  <data name="index_other_perl" xml:space="preserve">
    <value>Perl module documentation</value>
  </data>
  <data name="index_other_google" xml:space="preserve">
    <value>Google search engine</value>
  </data>
  <data name="index_other_kde" xml:space="preserve">
    <value>KDE documentation</value>
  </data>
  <data name="index_and" xml:space="preserve">
    <value>Match all</value>
  </data>
  <data name="index_or" xml:space="preserve">
    <value>Match any</value>
  </data>
  <data name="search_efor" xml:space="preserve">
    <value>No manual page to search for entered</value>
  </data>
  <data name="search_title" xml:space="preserve">
    <value>Search Results</value>
  </data>
  <data name="search_desc" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="search_type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="search_file" xml:space="preserve">
    <value>Page or file</value>
  </data>
  <data name="search_man" xml:space="preserve">
    <value>Manual page</value>
  </data>
  <data name="search_howto" xml:space="preserve">
    <value>HOWTO document</value>
  </data>
  <data name="search_doc" xml:space="preserve">
    <value>Package documentation</value>
  </data>
  <data name="search_kernel" xml:space="preserve">
    <value>Kernel documentation</value>
  </data>
  <data name="search_kde" xml:space="preserve">
    <value>KDE documentation</value>
  </data>
  <data name="search_perl" xml:space="preserve">
    <value>Perl module</value>
  </data>
  <data name="search_help" xml:space="preserve">
    <value>Webmin help</value>
  </data>
  <data name="search_custom" xml:space="preserve">
    <value>Custom documentation</value>
  </data>
  <data name="search_none" xml:space="preserve">
    <value>No documentation matching $1 found.</value>
  </data>
  <data name="search_for" xml:space="preserve">
    <value>For $1</value>
  </data>
  <data name="search_google" xml:space="preserve">
    <value>Google search result</value>
  </data>
  <data name="search_doxfer" xml:space="preserve">
    <value>Webmin online documentation</value>
  </data>
  <data name="howto_title" xml:space="preserve">
    <value>HOWTO Document</value>
  </data>
  <data name="howto_header" xml:space="preserve">
    <value>HOWTO document file $1</value>
  </data>
  <data name="howto_epath" xml:space="preserve">
    <value>Invalid HOWTO document path</value>
  </data>
  <data name="doc_title" xml:space="preserve">
    <value>Package Documentation</value>
  </data>
  <data name="doc_header" xml:space="preserve">
    <value>Package document file $1</value>
  </data>
  <data name="doc_epath" xml:space="preserve">
    <value>Invalid package documentation path</value>
  </data>
  <data name="man_title" xml:space="preserve">
    <value>Manual Page</value>
  </data>
  <data name="man_header" xml:space="preserve">
    <value>Manual page for $1($2)</value>
  </data>
  <data name="man_noentry" xml:space="preserve">
    <value>Manual page for $1 does not exist!</value>
  </data>
  <data name="man_epath" xml:space="preserve">
    <value>Manual page cannot be path!</value>
  </data>
  <data name="kernel_title" xml:space="preserve">
    <value>Kernel Document</value>
  </data>
  <data name="kernel_header" xml:space="preserve">
    <value>Kernel document file $1</value>
  </data>
  <data name="kernel_epath" xml:space="preserve">
    <value>Invalid kernel document path</value>
  </data>
  <data name="kde_title" xml:space="preserve">
    <value>KDE Documentation</value>
  </data>
  <data name="kde_header" xml:space="preserve">
    <value>KDE document file $1</value>
  </data>
  <data name="kde_epath" xml:space="preserve">
    <value>Invalid KDE documentation path</value>
  </data>
  <data name="perl_title" xml:space="preserve">
    <value>Perl Module</value>
  </data>
  <data name="perl_header" xml:space="preserve">
    <value>Documentation for Perl module $1</value>
  </data>
  <data name="perl_emod" xml:space="preserve">
    <value>Invalid Perl module name</value>
  </data>
  <data name="acl_allow" xml:space="preserve">
    <value>Can edit allowed search types?</value>
  </data>
  <data name="check_ecannot" xml:space="preserve">
    <value>You are not allowed to edit allowed search types</value>
  </data>
  <data name="__norefs" xml:space="preserve">
    <value>1</value>
  </data>
</root>