<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Filter and Forward Mail</value>
  </data>
  <data name="index_condition" xml:space="preserve">
    <value>Filter condition</value>
  </data>
  <data name="index_action" xml:space="preserve">
    <value>Filter action</value>
  </data>
  <data name="index_move" xml:space="preserve">
    <value>Move</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>You do not have any mail filters defined yet. All email will be delivered to your Inbox.</value>
  </data>
  <data name="index_none2" xml:space="preserve">
    <value>None of your existing Procmail rules are simple enough to display here.</value>
  </data>
  <data name="index_add" xml:space="preserve">
    <value>Add a new email filter.</value>
  </data>
  <data name="index_addauto" xml:space="preserve">
    <value>Quick automatic reply setup.</value>
  </data>
  <data name="index_addfwd" xml:space="preserve">
    <value>Quick forwarding setup.</value>
  </data>
  <data name="index_cspam" xml:space="preserve">
    <value>Email is spam</value>
  </data>
  <data name="index_clevel" xml:space="preserve">
    <value>Spam score is at least $1</value>
  </data>
  <data name="index_cheader0" xml:space="preserve">
    <value>Header $1 must start with $2</value>
  </data>
  <data name="index_cheader1" xml:space="preserve">
    <value>Header $1 must contain $2</value>
  </data>
  <data name="index_cheader2" xml:space="preserve">
    <value>Header $1 must end with $2</value>
  </data>
  <data name="edit_modestart" xml:space="preserve">
    <value>starts with</value>
  </data>
  <data name="edit_modecont" xml:space="preserve">
    <value>contains</value>
  </data>
  <data name="edit_modeend" xml:space="preserve">
    <value>ends with</value>
  </data>
  <data name="edit_regexp" xml:space="preserve">
    <value>Regular expression?</value>
  </data>
  <data name="index_cre" xml:space="preserve">
    <value>Headers match $1</value>
  </data>
  <data name="index_cre2" xml:space="preserve">
    <value>Body matches $1</value>
  </data>
  <data name="index_calways" xml:space="preserve">
    <value>Always</value>
  </data>
  <data name="index_csize&lt;" xml:space="preserve">
    <value>Smaller than $1</value>
  </data>
  <data name="index_csize&gt;" xml:space="preserve">
    <value>Larger than $1</value>
  </data>
  <data name="index_aspam" xml:space="preserve">
    <value>Perform spam classification</value>
  </data>
  <data name="index_athrow" xml:space="preserve">
    <value>Throw away</value>
  </data>
  <data name="index_adefault" xml:space="preserve">
    <value>Deliver to your Inbox</value>
  </data>
  <data name="index_aforward" xml:space="preserve">
    <value>Forward to $1</value>
  </data>
  <data name="index_afolder" xml:space="preserve">
    <value>Save in folder $1</value>
  </data>
  <data name="index_afile" xml:space="preserve">
    <value>Write to file $1</value>
  </data>
  <data name="index_areply" xml:space="preserve">
    <value>Send automatic reply $1</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>Delete Selected Filters</value>
  </data>
  <data name="index_acontinue" xml:space="preserve">
    <value>$1, and continue</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>filter list</value>
  </data>
  <data name="index_warn" xml:space="preserve">
    <value>Warning - The program &lt;tt&gt;procmail&lt;/tt&gt; used for mail filtering is not installed on this system. Any filters defined below are unlikely to work.</value>
  </data>
  <data name="index_alias" xml:space="preserve">
    <value>Warning - The system is configured to forward all email to your mailbox to the following destinations. Filters defined here will not be used.</value>
  </data>
  <data name="index_aliasme" xml:space="preserve">
    <value>Note - The system is also configured forward all email to :</value>
  </data>
  <data name="index_force" xml:space="preserve">
    <value>Warning - The system is configured to not process user-defined mail filters. Filters defined here will not be used.</value>
  </data>
  <data name="index_period" xml:space="preserve">
    <value>Minimum time between autoreplies</value>
  </data>
  <data name="index_noperiod" xml:space="preserve">
    <value>No minimum</value>
  </data>
  <data name="index_mins" xml:space="preserve">
    <value>minutes</value>
  </data>
  <data name="index_astart" xml:space="preserve">
    <value>Don't send autoreply before</value>
  </data>
  <data name="index_aend" xml:space="preserve">
    <value>Don't send autoreply after</value>
  </data>
  <data name="index_forever" xml:space="preserve">
    <value>Forever</value>
  </data>
  <data name="index_ondate" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="index_charset" xml:space="preserve">
    <value>Autoreply message character set</value>
  </data>
  <data name="index_subject" xml:space="preserve">
    <value>Autoreply message subject</value>
  </data>
  <data name="index_nowebmin" xml:space="preserve">
    <value>This module is only for use in Usermin. If it is visible in Webmin, the theme you are using is incomplete.</value>
  </data>
  <data name="edit_title1" xml:space="preserve">
    <value>Create Filter</value>
  </data>
  <data name="edit_title2" xml:space="preserve">
    <value>Edit Filter</value>
  </data>
  <data name="edit_header1" xml:space="preserve">
    <value>Condition for filter</value>
  </data>
  <data name="edit_cmode0" xml:space="preserve">
    <value>All email</value>
  </data>
  <data name="edit_cmode4" xml:space="preserve">
    <value>Based on header</value>
  </data>
  <data name="edit_cheader2" xml:space="preserve">
    <value>Header $1$2 $3 $4</value>
  </data>
  <data name="edit_cmode3" xml:space="preserve">
    <value>Email smaller than</value>
  </data>
  <data name="edit_cmode2" xml:space="preserve">
    <value>Email larger than</value>
  </data>
  <data name="edit_cmode5" xml:space="preserve">
    <value>Email classified as spam</value>
  </data>
  <data name="edit_cmode6" xml:space="preserve">
    <value>Spam score is at least</value>
  </data>
  <data name="edit_cmode1" xml:space="preserve">
    <value>Based on regular expression</value>
  </data>
  <data name="edit_cbody" xml:space="preserve">
    <value>Apply to message body</value>
  </data>
  <data name="edit_other" xml:space="preserve">
    <value>Other..</value>
  </data>
  <data name="edit_header2" xml:space="preserve">
    <value>Action if condition is matched</value>
  </data>
  <data name="edit_amode3" xml:space="preserve">
    <value>Deliver to Inbox</value>
  </data>
  <data name="edit_amode5" xml:space="preserve">
    <value>Perform spam classification</value>
  </data>
  <data name="edit_amode4" xml:space="preserve">
    <value>Throw away</value>
  </data>
  <data name="edit_amode1" xml:space="preserve">
    <value>Forward to addresses</value>
  </data>
  <data name="edit_amode0" xml:space="preserve">
    <value>Save to folder</value>
  </data>
  <data name="edit_file" xml:space="preserve">
    <value>Other file..</value>
  </data>
  <data name="edit_continue" xml:space="preserve">
    <value>Continue with other filter rules, even after applying this action</value>
  </data>
  <data name="edit_amode6" xml:space="preserve">
    <value>Send automatic reply</value>
  </data>
  <data name="edit_amode7" xml:space="preserve">
    <value>Save to new folder named</value>
  </data>
  <data name="edit_nobounce" xml:space="preserve">
    <value>Suppress forwarding of bounce messages</value>
  </data>
  <data name="edit_apply" xml:space="preserve">
    <value>Show Matching Email In Folder:</value>
  </data>
  <data name="edit_move" xml:space="preserve">
    <value>Apply To Email In Folder:</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>Failed to save filter</value>
  </data>
  <data name="save_egone" xml:space="preserve">
    <value>Filter no longer exists!</value>
  </data>
  <data name="save_econdheader" xml:space="preserve">
    <value>Missing or invalid email header</value>
  </data>
  <data name="save_econdlevel" xml:space="preserve">
    <value>Minimum spam score must be an integer greater than zero</value>
  </data>
  <data name="save_esmall" xml:space="preserve">
    <value>Missing or invalid maximum mail size</value>
  </data>
  <data name="save_elarge" xml:space="preserve">
    <value>Missing or invalid minimum mail size</value>
  </data>
  <data name="save_econd" xml:space="preserve">
    <value>Missing regular expression</value>
  </data>
  <data name="save_eforward" xml:space="preserve">
    <value>Missing forwarding address</value>
  </data>
  <data name="save_efile" xml:space="preserve">
    <value>Missing mail file for delivery</value>
  </data>
  <data name="save_ereply" xml:space="preserve">
    <value>No autoreply text entered</value>
  </data>
  <data name="save_eperiod" xml:space="preserve">
    <value>Missing or invalid automatic reply interval</value>
  </data>
  <data name="save_eperiodmin" xml:space="preserve">
    <value>Automatic reply interval must be at least $1 minutes</value>
  </data>
  <data name="save_enewfolder" xml:space="preserve">
    <value>Missing new folder name</value>
  </data>
  <data name="save_enewfolder2" xml:space="preserve">
    <value>Invalid new folder name</value>
  </data>
  <data name="save_enewfolder3" xml:space="preserve">
    <value>A folder with the same name already exists</value>
  </data>
  <data name="save_estart" xml:space="preserve">
    <value>Invalid autoreply start date</value>
  </data>
  <data name="save_eend" xml:space="preserve">
    <value>Invalid autoreply end date</value>
  </data>
  <data name="save_echarset" xml:space="preserve">
    <value>Missing or invalid autoreply character set</value>
  </data>
  <data name="delete_err" xml:space="preserve">
    <value>Failed to delete filters</value>
  </data>
  <data name="delete_enone" xml:space="preserve">
    <value>None selected</value>
  </data>
  <data name="aliases_type1" xml:space="preserve">
    <value>Address $1</value>
  </data>
  <data name="aliases_type2" xml:space="preserve">
    <value>Addresses in file $1</value>
  </data>
  <data name="aliases_type3" xml:space="preserve">
    <value>File $1</value>
  </data>
  <data name="aliases_type4" xml:space="preserve">
    <value>Program $1</value>
  </data>
  <data name="aliases_type5" xml:space="preserve">
    <value>Autoreply file $1</value>
  </data>
  <data name="aliases_type6" xml:space="preserve">
    <value>Apply filter file $1</value>
  </data>
  <data name="aliases_your" xml:space="preserve">
    <value>Your mailbox</value>
  </data>
  <data name="aliases_delete" xml:space="preserve">
    <value>Delete mail</value>
  </data>
  <data name="aliases_other" xml:space="preserve">
    <value>Mailbox of user $1</value>
  </data>
  <data name="aliases_auto" xml:space="preserve">
    <value>Autoresponder with message $1</value>
  </data>
  <data name="auto_title" xml:space="preserve">
    <value>Email Automatic Reply</value>
  </data>
  <data name="auto_header" xml:space="preserve">
    <value>Automatic email reply options</value>
  </data>
  <data name="auto_enabled" xml:space="preserve">
    <value>Automatic response enabled?</value>
  </data>
  <data name="auto_reply" xml:space="preserve">
    <value>Reply message</value>
  </data>
  <data name="auto_subject" xml:space="preserve">
    <value>Email subject</value>
  </data>
  <data name="auto_charset" xml:space="preserve">
    <value>Message character set</value>
  </data>
  <data name="auto_charsetdef" xml:space="preserve">
    <value>From current language</value>
  </data>
  <data name="auto_charsetother" xml:space="preserve">
    <value>Other character set</value>
  </data>
  <data name="auto_period" xml:space="preserve">
    <value>Minimum interval between replies</value>
  </data>
  <data name="auto_err" xml:space="preserve">
    <value>Failed to save automatic reply</value>
  </data>
  <data name="forward_title" xml:space="preserve">
    <value>Forward Email</value>
  </data>
  <data name="forward_header" xml:space="preserve">
    <value>Email forwarding options</value>
  </data>
  <data name="forward_enabled" xml:space="preserve">
    <value>Email forwarding enabled?</value>
  </data>
  <data name="forward_to" xml:space="preserve">
    <value>Forward to addresses</value>
  </data>
  <data name="forward_cont" xml:space="preserve">
    <value>Also deliver normally?</value>
  </data>
  <data name="forward_err" xml:space="preserve">
    <value>Failed to save email forwarding</value>
  </data>
  <data name="move_err" xml:space="preserve">
    <value>Failed to apply filter</value>
  </data>
  <data name="move_esrc" xml:space="preserve">
    <value>Source folder $1 does not exist!</value>
  </data>
  <data name="move_edest" xml:space="preserve">
    <value>Destination folder $1 does not exist!</value>
  </data>
  <data name="move_esame" xml:space="preserve">
    <value>Source and destination folder are the same</value>
  </data>
  <data name="move_title" xml:space="preserve">
    <value>Apply Filter</value>
  </data>
  <data name="move_finding" xml:space="preserve">
    <value>Searching for messages matching the filter in $1 ..</value>
  </data>
  <data name="move_none" xml:space="preserve">
    <value>.. none found!</value>
  </data>
  <data name="move_found" xml:space="preserve">
    <value>.. found $1 messages</value>
  </data>
  <data name="move_moving" xml:space="preserve">
    <value>Moving $1 messages to $2 ..</value>
  </data>
  <data name="move_done" xml:space="preserve">
    <value>.. done</value>
  </data>
  <data name="__norefs" xml:space="preserve">
    <value>1</value>
  </data>
</root>