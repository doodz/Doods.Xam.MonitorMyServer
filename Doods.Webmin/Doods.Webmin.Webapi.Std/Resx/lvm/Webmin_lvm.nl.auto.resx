<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_addlv3" xml:space="preserve">
    <value>Maak een dunne pool in &lt;tt&gt;$1&lt;/tt&gt;.</value>
  </data>
  <data name="index_return2" xml:space="preserve">
    <value>fysieke volumes</value>
  </data>
  <data name="index_return3" xml:space="preserve">
    <value>logische volumes</value>
  </data>
  <data name="index_thin" xml:space="preserve">
    <value>LVM dunne pool voor $1 LV's</value>
  </data>
  <data name="lv_thin" xml:space="preserve">
    <value>Maak een dunne laag in het zwembad</value>
  </data>
  <data name="lv_thin2" xml:space="preserve">
    <value>Dun ingericht in zwembad</value>
  </data>
  <data name="lv_nothin" xml:space="preserve">
    <value>Geen (maak als gewone LV)</value>
  </data>
  <data name="lv_sizeallfree" xml:space="preserve">
    <value>Gebruik alle vrije VG-ruimte</value>
  </data>
  <data name="lv_mountiscsi" xml:space="preserve">
    <value>iSCSI gedeeld apparaat $1 </value>
  </data>
  <data name="lv_snaprollback" xml:space="preserve">
    <value>Momentopname terugdraaien</value>
  </data>
  <data name="lv_rusnaprb" xml:space="preserve">
    <value>Weet u zeker dat u de momentopname $1 wilt terugdraaien?</value>
  </data>
  <data name="lv_delthin" xml:space="preserve">
    <value>WAARSCHUWING! Deze LV is een dunne pool voor $1 andere dun ingerichte logische volumes, die ook verloren gaan als deze wordt verwijderd!</value>
  </data>
  <data name="lv_snaprollbackok" xml:space="preserve">
    <value>Nu terugdraaien</value>
  </data>
  <data name="lv_err3" xml:space="preserve">
    <value>Kan momentopname niet terugdraaien</value>
  </data>
  <data name="lv_thincs" xml:space="preserve">
    <value>LVs in dit dunne zwembad</value>
  </data>
  <data name="lv_thinpercent" xml:space="preserve">
    <value>Percentage dun zwembadgebruik</value>
  </data>
  <data name="lv_thinused" xml:space="preserve">
    <value>Dunne zwembadruimte gebruikt</value>
  </data>
  <data name="lv_moveheader" xml:space="preserve">
    <value>Verplaats het fysieke volume</value>
  </data>
  <data name="lv_pvfrom" xml:space="preserve">
    <value>Verplaats blokken van fysiek volume</value>
  </data>
  <data name="lv_pvto" xml:space="preserve">
    <value>Om fysiek volume</value>
  </data>
  <data name="lv_moveok" xml:space="preserve">
    <value>Verplaats blokken</value>
  </data>
  <data name="lv_return" xml:space="preserve">
    <value>logisch volume</value>
  </data>
  <data name="pvmove_err" xml:space="preserve">
    <value>Kan logisch volume niet verplaatsen</value>
  </data>
  <data name="pvmove_title" xml:space="preserve">
    <value>Verplaats logisch volume</value>
  </data>
  <data name="pvmove_start" xml:space="preserve">
    <value>Logisch volume $1 verplaatsen van $2 naar $3 ..</value>
  </data>
  <data name="pvmove_failed" xml:space="preserve">
    <value>.. verplaatsen is mislukt!</value>
  </data>
  <data name="pvmove_done" xml:space="preserve">
    <value>.. verplaats je volledig</value>
  </data>
  <data name="thin_title" xml:space="preserve">
    <value>Maak een dunne pool</value>
  </data>
  <data name="thin_desc" xml:space="preserve">
    <value>Een dunne pool is een paar LV's die kunnen worden gebruikt om extra LV's te maken die groter kunnen zijn dan de beschikbare omvang. Ruimte wordt alleen verbruikt wanneer dat nodig is, in plaats van wanneer de LV's in het zwembad worden gecreëerd. WAARSCHUWING - Alle gegevens op de geselecteerde LV's gaan verloren!</value>
  </data>
  <data name="thin_header" xml:space="preserve">
    <value>Nieuwe dunne zwembaddetails</value>
  </data>
  <data name="thin_datalv" xml:space="preserve">
    <value>Bestaande LV voor gegevens</value>
  </data>
  <data name="thin_metadatalv" xml:space="preserve">
    <value>Bestaande LV voor metadata</value>
  </data>
  <data name="thin_ok" xml:space="preserve">
    <value>Zet LV's om naar dunne pool</value>
  </data>
  <data name="thin_elvs" xml:space="preserve">
    <value>In deze VG zijn geen LV's gevonden die nog niet in gebruik zijn!</value>
  </data>
  <data name="thin_err" xml:space="preserve">
    <value>Kan geen dunne pool maken</value>
  </data>
  <data name="thin_esame" xml:space="preserve">
    <value>Beide geselecteerde LV's zijn hetzelfde</value>
  </data>
  <data name="thin_edata" xml:space="preserve">
    <value>De geselecteerde data LV is al in gebruik</value>
  </data>
  <data name="thin_emetadata" xml:space="preserve">
    <value>De geselecteerde metadata LV is al in gebruik</value>
  </data>
  <data name="log_rollback_lv" xml:space="preserve">
    <value>Momentopname $1 teruggedraaid</value>
  </data>
</root>