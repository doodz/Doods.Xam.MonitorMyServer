<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Logical Volume Management</value>
  </data>
  <data name="index_ecommands" xml:space="preserve">
    <value>The LVM command $1 was not found on your system. Webmin needs the LVM administration commands in order to setup and manage logical volumes.</value>
  </data>
  <data name="index_emodule" xml:space="preserve">
    <value>The LVM status directory $1 does not exist. This indicates that your kernel does not support LVM, or that the $2 kernel module is not loaded.</value>
  </data>
  <data name="index_vgs" xml:space="preserve">
    <value>Volume Groups</value>
  </data>
  <data name="index_pvs" xml:space="preserve">
    <value>Physical Volumes</value>
  </data>
  <data name="index_lvs" xml:space="preserve">
    <value>Logical Volumes</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>No volume groups were found on your system.</value>
  </data>
  <data name="index_add" xml:space="preserve">
    <value>Add a new volume group.</value>
  </data>
  <data name="index_nolvs" xml:space="preserve">
    <value>This volume group has&lt;br&gt;no logical volumes yet.</value>
  </data>
  <data name="index_nopvs" xml:space="preserve">
    <value>This volume group has&lt;br&gt;no physical volumes yet.</value>
  </data>
  <data name="i2ndex_addpv" xml:space="preserve">
    <value>Add a physical volume to the group.</value>
  </data>
  <data name="index_addpv2" xml:space="preserve">
    <value>Add a physical volume to &lt;tt&gt;$1&lt;/tt&gt;.</value>
  </data>
  <data name="index_addlv2" xml:space="preserve">
    <value>Create a logical volume in &lt;tt&gt;$1&lt;/tt&gt;.</value>
  </data>
  <data name="index_addlv2s" xml:space="preserve">
    <value>Create a snapshot in &lt;tt&gt;$1&lt;/tt&gt;.</value>
  </data>
  <data name="index_addlv3" xml:space="preserve">
    <value>Create a thin pool in &lt;tt&gt;$1&lt;/tt&gt;.</value>
  </data>
  <data name="index_addlv" xml:space="preserve">
    <value>Create a new logical volume.</value>
  </data>
  <data name="index_addsnap" xml:space="preserve">
    <value>Create a new snapshot.</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>volume groups</value>
  </data>
  <data name="index_return2" xml:space="preserve">
    <value>physical volumes</value>
  </data>
  <data name="index_return3" xml:space="preserve">
    <value>logical volumes</value>
  </data>
  <data name="index_eversion" xml:space="preserve">
    <value>Webmin only supports LVM versions 1.0 and above. The output from $1 on your system was : $2</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>LVM version $1</value>
  </data>
  <data name="index_vgname" xml:space="preserve">
    <value>Volume group name</value>
  </data>
  <data name="index_vgsize" xml:space="preserve">
    <value>Total size</value>
  </data>
  <data name="index_vgtotal" xml:space="preserve">
    <value>Blocks used</value>
  </data>
  <data name="index_vgtotal2" xml:space="preserve">
    <value>Size used</value>
  </data>
  <data name="index_nopvs2" xml:space="preserve">
    <value>No physical volumes have been added to any volume groups yet.</value>
  </data>
  <data name="index_nolvs2" xml:space="preserve">
    <value>No logical volumes have been created from any volume groups yet.</value>
  </data>
  <data name="index_pvname" xml:space="preserve">
    <value>Physical volume device</value>
  </data>
  <data name="index_pvvg" xml:space="preserve">
    <value>In volume group</value>
  </data>
  <data name="index_pvsize" xml:space="preserve">
    <value>Device size</value>
  </data>
  <data name="index_pvtotal" xml:space="preserve">
    <value>Blocks used</value>
  </data>
  <data name="index_pvtotal2" xml:space="preserve">
    <value>Size used</value>
  </data>
  <data name="index_vgsdesc" xml:space="preserve">
    <value>A volume group is a set of disks that can be allocated to one or more logical volumes. Most systems will have only one, and at least one must be created before any physical or logical volumes can be added.</value>
  </data>
  <data name="index_pvsdesc" xml:space="preserve">
    <value>A physical volume is a disk partition or RAID device that is part of a volume group. Its disk space can then be used by one or more logical volumes.</value>
  </data>
  <data name="index_lvsdesc" xml:space="preserve">
    <value>A logical volume is a virtual partition created from the combined disk space of a volume group. Each can have a filesystem which is then mounted to store files.</value>
  </data>
  <data name="index_lvname" xml:space="preserve">
    <value>Logical volume</value>
  </data>
  <data name="index_lvvg" xml:space="preserve">
    <value>Volume group</value>
  </data>
  <data name="index_lvsize" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="index_lvused" xml:space="preserve">
    <value>Space used</value>
  </data>
  <data name="index_lvuse" xml:space="preserve">
    <value>Used for</value>
  </data>
  <data name="index_snapof" xml:space="preserve">
    <value>(Snapshot of $1)</value>
  </data>
  <data name="index_thin" xml:space="preserve">
    <value>LVM thin pool for $1 LVs</value>
  </data>
  <data name="lv_edit" xml:space="preserve">
    <value>Edit Logical Volume</value>
  </data>
  <data name="lv_edit_snap" xml:space="preserve">
    <value>Edit Snapshot</value>
  </data>
  <data name="lv_create" xml:space="preserve">
    <value>Create Logical Volume</value>
  </data>
  <data name="lv_create_snap" xml:space="preserve">
    <value>Create Snapshot</value>
  </data>
  <data name="lv_vg" xml:space="preserve">
    <value>In volume group $1</value>
  </data>
  <data name="lv_header" xml:space="preserve">
    <value>Logical volume details</value>
  </data>
  <data name="lv_name" xml:space="preserve">
    <value>Volume name</value>
  </data>
  <data name="lv_thin" xml:space="preserve">
    <value>Create as thin LV in pool</value>
  </data>
  <data name="lv_thin2" xml:space="preserve">
    <value>Thin provisioned in pool</value>
  </data>
  <data name="lv_nothin" xml:space="preserve">
    <value>None (create as regular LV)</value>
  </data>
  <data name="lv_size" xml:space="preserve">
    <value>Volume size</value>
  </data>
  <data name="lv_size0" xml:space="preserve">
    <value>Absolute size</value>
  </data>
  <data name="lv_size1" xml:space="preserve">
    <value>Percentage of VG size</value>
  </data>
  <data name="lv_size2" xml:space="preserve">
    <value>Percentage of VG free space</value>
  </data>
  <data name="lv_size3" xml:space="preserve">
    <value>Percentage of PV free space</value>
  </data>
  <data name="lv_size3a" xml:space="preserve">
    <value>$1 of $2</value>
  </data>
  <data name="lv_sizeabs" xml:space="preserve">
    <value>Exact size</value>
  </data>
  <data name="lv_sizesimple" xml:space="preserve">
    <value>Size with units</value>
  </data>
  <data name="lv_sizeallfree" xml:space="preserve">
    <value>Use all free VG space</value>
  </data>
  <data name="lv_device" xml:space="preserve">
    <value>Device file</value>
  </data>
  <data name="lv_status" xml:space="preserve">
    <value>Current status</value>
  </data>
  <data name="lv_mount" xml:space="preserve">
    <value>Mounted on $1 as $2</value>
  </data>
  <data name="lv_umount" xml:space="preserve">
    <value>For mounting on $1 as $2</value>
  </data>
  <data name="lv_mountvm" xml:space="preserve">
    <value>Mounted as virtual memory</value>
  </data>
  <data name="lv_umountvm" xml:space="preserve">
    <value>For mounting as virtual memory</value>
  </data>
  <data name="lv_mountraid" xml:space="preserve">
    <value>Part of RAID device $1</value>
  </data>
  <data name="lv_mountcm" xml:space="preserve">
    <value>Used by Cloudmin system $1</value>
  </data>
  <data name="lv_umountcm" xml:space="preserve">
    <value>For use by Cloudmin system $1</value>
  </data>
  <data name="lv_mountiscsi" xml:space="preserve">
    <value>iSCSI shared device $1</value>
  </data>
  <data name="lv_notused" xml:space="preserve">
    <value>Not in use</value>
  </data>
  <data name="lv_cannot" xml:space="preserve">
    <value>This logical volume cannot be renamed or resized as it is currently in use.</value>
  </data>
  <data name="lv_perm" xml:space="preserve">
    <value>Volume access</value>
  </data>
  <data name="lv_permrw" xml:space="preserve">
    <value>Read/write</value>
  </data>
  <data name="lv_permr" xml:space="preserve">
    <value>Read only</value>
  </data>
  <data name="lv_alloc" xml:space="preserve">
    <value>Allocation method</value>
  </data>
  <data name="lv_allocy" xml:space="preserve">
    <value>Contiguous</value>
  </data>
  <data name="lv_allocn" xml:space="preserve">
    <value>Non-contiguous</value>
  </data>
  <data name="lv_stripe" xml:space="preserve">
    <value>Volume striping</value>
  </data>
  <data name="lv_nostripe" xml:space="preserve">
    <value>Disabled (always allocate from start)</value>
  </data>
  <data name="lv_stripes" xml:space="preserve">
    <value>Stripe across $1 physical volumes</value>
  </data>
  <data name="lv_stripes2" xml:space="preserve">
    <value>Physical volumes to stripe across</value>
  </data>
  <data name="lv_stripesize" xml:space="preserve">
    <value>Stripe size</value>
  </data>
  <data name="lv_readahead" xml:space="preserve">
    <value>Readahead Sectors</value>
  </data>
  <data name="lv_err" xml:space="preserve">
    <value>Failed to save logical volume</value>
  </data>
  <data name="lv_ename" xml:space="preserve">
    <value>Missing or invalid volume name</value>
  </data>
  <data name="lv_esame" xml:space="preserve">
    <value>A logical volume with the same name already exists</value>
  </data>
  <data name="lv_esize" xml:space="preserve">
    <value>Missing or invalid volume size</value>
  </data>
  <data name="lv_evgsize" xml:space="preserve">
    <value>Missing or invalid volume group size percentage</value>
  </data>
  <data name="lv_efreesize" xml:space="preserve">
    <value>Missing or invalid free volume group size percentage</value>
  </data>
  <data name="lv_epvsize" xml:space="preserve">
    <value>Missing or invalid free physical volume size percentage</value>
  </data>
  <data name="lv_estripe" xml:space="preserve">
    <value>Missing or invalid number of stripes</value>
  </data>
  <data name="lv_delete" xml:space="preserve">
    <value>Delete Logical Volume</value>
  </data>
  <data name="lv_snaprollback" xml:space="preserve">
    <value>Rollback Snapshot</value>
  </data>
  <data name="lv_rusure" xml:space="preserve">
    <value>Are you sure you want to delete the logical volume $1 ? Any data in a filesystem on this logical volume will be deleted forever!</value>
  </data>
  <data name="lv_rusnap" xml:space="preserve">
    <value>Are you sure you want to delete the snapshot $1 ?</value>
  </data>
  <data name="lv_rusnaprb" xml:space="preserve">
    <value>Are you sure you want to rollback the snapshot $1 ?</value>
  </data>
  <data name="lv_delthin" xml:space="preserve">
    <value>WARNING! This LV is a thin pool for $1 other thinly provisioned logical volumes, which will also be lost if it is deleted!</value>
  </data>
  <data name="lv_deleteok" xml:space="preserve">
    <value>Delete Now</value>
  </data>
  <data name="lv_snaprollbackok" xml:space="preserve">
    <value>Rollback Now</value>
  </data>
  <data name="lv_err2" xml:space="preserve">
    <value>Failed to delete logical volume</value>
  </data>
  <data name="lv_err3" xml:space="preserve">
    <value>Failed to rollback snapshot</value>
  </data>
  <data name="lv_pesize" xml:space="preserve">
    <value>Allocation block size</value>
  </data>
  <data name="lv_petotal" xml:space="preserve">
    <value>Blocks allocated from volume group</value>
  </data>
  <data name="lv_petotals" xml:space="preserve">
    <value>$1 out of $2</value>
  </data>
  <data name="lv_mkfs" xml:space="preserve">
    <value>Create Filesystem of Type:</value>
  </data>
  <data name="lv_mkfs2" xml:space="preserve">
    <value>Create Filesystem</value>
  </data>
  <data name="lv_mkfsdesc" xml:space="preserve">
    <value>Select a filesystem type and click this button to create a new filesystem on this logical volume. This will erase any data currently on the volume.</value>
  </data>
  <data name="lv_mkfsdesc2" xml:space="preserve">
    <value>Click this button to create a new $1 filesystem on this logical volume. This will erase any data currently on the volume.</value>
  </data>
  <data name="lv_toobig" xml:space="preserve">
    <value>The new volume size is $1 blocks (of $2 each), but only $3 are free in the volume group.</value>
  </data>
  <data name="lv_snapof" xml:space="preserve">
    <value>Snapshot of logical volume</value>
  </data>
  <data name="lv_nosnap" xml:space="preserve">
    <value>Could not determine!</value>
  </data>
  <data name="lv_newmount" xml:space="preserve">
    <value>Mount LV on:</value>
  </data>
  <data name="lv_mountmsg" xml:space="preserve">
    <value>Mount this LV on new directory on your system, so that it can be used to store files. A filesystem must have already been created.</value>
  </data>
  <data name="lv_free" xml:space="preserve">
    <value>Free percentage</value>
  </data>
  <data name="lv_freedisk" xml:space="preserve">
    <value>Free space</value>
  </data>
  <data name="lv_pvs" xml:space="preserve">
    <value>Physical volumes allocated</value>
  </data>
  <data name="lv_thincs" xml:space="preserve">
    <value>LVs in this thin pool</value>
  </data>
  <data name="lv_thinpercent" xml:space="preserve">
    <value>Thin pool use percentage</value>
  </data>
  <data name="lv_thinused" xml:space="preserve">
    <value>Thin pool space used</value>
  </data>
  <data name="lv_snapusage" xml:space="preserve">
    <value>Snapshot use percentage</value>
  </data>
  <data name="lv_egone" xml:space="preserve">
    <value>Logical volume no longer exists!</value>
  </data>
  <data name="lv_moveheader" xml:space="preserve">
    <value>Move off physical volume</value>
  </data>
  <data name="lv_pvfrom" xml:space="preserve">
    <value>Move blocks from physical volume</value>
  </data>
  <data name="lv_pvto" xml:space="preserve">
    <value>To physical volume</value>
  </data>
  <data name="lv_moveok" xml:space="preserve">
    <value>Move Blocks</value>
  </data>
  <data name="lv_return" xml:space="preserve">
    <value>logical volume</value>
  </data>
  <data name="mkfs_title" xml:space="preserve">
    <value>Create Filesystem</value>
  </data>
  <data name="mkfs_desc" xml:space="preserve">
    <value>This form allows you to build a new $2 ($1) filesystem on logical volume $3. All existing data will be erased.</value>
  </data>
  <data name="mkfs_header" xml:space="preserve">
    <value>New filesystem options</value>
  </data>
  <data name="mkfs_err" xml:space="preserve">
    <value>Failed to create filesystem</value>
  </data>
  <data name="mkfs_exec" xml:space="preserve">
    <value>Executing command $1 ..</value>
  </data>
  <data name="mkfs_failed" xml:space="preserve">
    <value>.. command failed!</value>
  </data>
  <data name="mkfs_ok" xml:space="preserve">
    <value>.. command complete.</value>
  </data>
  <data name="resize_title" xml:space="preserve">
    <value>Resize Logical Volume</value>
  </data>
  <data name="resize_mesg" xml:space="preserve">
    <value>The $1 filesystem on this logical volume cannot be resized. If you resize the logical volume, you must re-create the filesystem, which will erase all data in it.</value>
  </data>
  <data name="resize_mesg2" xml:space="preserve">
    <value>Webmin does not know what kind of filesystem is on this logical volume, if any. If you resize the logical volume, you must re-create the filesystem, which will erase all data in it.</value>
  </data>
  <data name="resize_fs" xml:space="preserve">
    <value>There was an error resizing the $1 filesystem on this logical volume : $2  If you resize just the logical volume, you must re-create the filesystem, which will erase all data in it.</value>
  </data>
  <data name="resize_ok" xml:space="preserve">
    <value>Resize Logical Volume</value>
  </data>
  <data name="resize_emounted" xml:space="preserve">
    <value>The filesystem on this logical volume cannot be resized while it is mounted</value>
  </data>
  <data name="resize_emounted2" xml:space="preserve">
    <value>The filesystem on this logical volume cannot be shrunk while it is mounted</value>
  </data>
  <data name="init_title" xml:space="preserve">
    <value>Activate LVM</value>
  </data>
  <data name="init_cmd" xml:space="preserve">
    <value>Running command $1 ..</value>
  </data>
  <data name="pv_edit" xml:space="preserve">
    <value>Edit Physical Volume</value>
  </data>
  <data name="pv_create" xml:space="preserve">
    <value>Add Physical Volume</value>
  </data>
  <data name="pv_vg" xml:space="preserve">
    <value>In volume group $1</value>
  </data>
  <data name="pv_header" xml:space="preserve">
    <value>Physical volume details</value>
  </data>
  <data name="pv_device" xml:space="preserve">
    <value>Disk device</value>
  </data>
  <data name="pv_other" xml:space="preserve">
    <value>Other device..</value>
  </data>
  <data name="pv_alloc" xml:space="preserve">
    <value>Enabled for allocation?</value>
  </data>
  <data name="pv_force" xml:space="preserve">
    <value>Force addition of volume?</value>
  </data>
  <data name="pv_size" xml:space="preserve">
    <value>Disk size</value>
  </data>
  <data name="pv_petotal" xml:space="preserve">
    <value>Blocks allocated</value>
  </data>
  <data name="pv_petotal2" xml:space="preserve">
    <value>Size allocated</value>
  </data>
  <data name="pv_pesize" xml:space="preserve">
    <value>Allocation block size</value>
  </data>
  <data name="pv_warn" xml:space="preserve">
    <value>Warning! All data on the selected device will be erased.</value>
  </data>
  <data name="pv_create2" xml:space="preserve">
    <value>Add to volume group</value>
  </data>
  <data name="pv_delete2" xml:space="preserve">
    <value>Remove from volume group</value>
  </data>
  <data name="pv_resize" xml:space="preserve">
    <value>Resize To Match Device</value>
  </data>
  <data name="pv_err" xml:space="preserve">
    <value>Failed to save physical volume</value>
  </data>
  <data name="pv_err2" xml:space="preserve">
    <value>Failed to remove physical volume</value>
  </data>
  <data name="pv_err3" xml:space="preserve">
    <value>Failed to resize physical volume</value>
  </data>
  <data name="pv_delete" xml:space="preserve">
    <value>Remove Physical Volume</value>
  </data>
  <data name="pv_rusure" xml:space="preserve">
    <value>Are you sure you want to remove physical volume device $1 from its volume group? This will result in any data being shifted to other physical volumes within the group.</value>
  </data>
  <data name="pv_deleteok" xml:space="preserve">
    <value>Remove Volume</value>
  </data>
  <data name="pv_eother" xml:space="preserve">
    <value>Missing or invalid disk device</value>
  </data>
  <data name="pv_raid" xml:space="preserve">
    <value>RAID device $1</value>
  </data>
  <data name="pv_lvs" xml:space="preserve">
    <value>Allocation by logical volumes</value>
  </data>
  <data name="pv_egone" xml:space="preserve">
    <value>Physical volume no longer exists!</value>
  </data>
  <data name="vg_edit" xml:space="preserve">
    <value>Edit Volume Group</value>
  </data>
  <data name="vg_create" xml:space="preserve">
    <value>Create Volume Group</value>
  </data>
  <data name="vg_name" xml:space="preserve">
    <value>Volume group name</value>
  </data>
  <data name="vg_header" xml:space="preserve">
    <value>Volume group details</value>
  </data>
  <data name="vg_size" xml:space="preserve">
    <value>Total size</value>
  </data>
  <data name="vg_petotal" xml:space="preserve">
    <value>Blocks allocated</value>
  </data>
  <data name="vg_petotal2" xml:space="preserve">
    <value>Size allocated</value>
  </data>
  <data name="vg_pesize" xml:space="preserve">
    <value>Allocation block size</value>
  </data>
  <data name="vg_device" xml:space="preserve">
    <value>Initial physical device</value>
  </data>
  <data name="vg_err" xml:space="preserve">
    <value>Failed to save volume group</value>
  </data>
  <data name="vg_err2" xml:space="preserve">
    <value>Failed to delete volume group</value>
  </data>
  <data name="vg_delete" xml:space="preserve">
    <value>Delete Volume Group</value>
  </data>
  <data name="vg_rusure" xml:space="preserve">
    <value>Are you sure you want to delete the volume group $1 ?</value>
  </data>
  <data name="vg_cannot" xml:space="preserve">
    <value>This volume group cannot be deleted because it still has $1 logical volumes.</value>
  </data>
  <data name="vg_deleteok" xml:space="preserve">
    <value>Delete Now</value>
  </data>
  <data name="vg_ename" xml:space="preserve">
    <value>Missing or invalid volume group name</value>
  </data>
  <data name="vg_epesize" xml:space="preserve">
    <value>Missing or invalid allocation block size</value>
  </data>
  <data name="vg_egone" xml:space="preserve">
    <value>Volume group no longer exists!</value>
  </data>
  <data name="pvmove_err" xml:space="preserve">
    <value>Failed to move logical volume</value>
  </data>
  <data name="pvmove_title" xml:space="preserve">
    <value>Move Logical Volume</value>
  </data>
  <data name="pvmove_start" xml:space="preserve">
    <value>Moving logical volume $1 from $2 to $3 ..</value>
  </data>
  <data name="pvmove_failed" xml:space="preserve">
    <value>.. move failed!</value>
  </data>
  <data name="pvmove_done" xml:space="preserve">
    <value>.. move complete</value>
  </data>
  <data name="thin_title" xml:space="preserve">
    <value>Create Thin Pool</value>
  </data>
  <data name="thin_desc" xml:space="preserve">
    <value>A thin pool is a pair of LVs that can be used to create additional LVs that can be larger than the available extents. Space is only consumed when needed, rather than when the LVs inside the pool are created. WARNING - Any data on the selected LVs will be lost!</value>
  </data>
  <data name="thin_header" xml:space="preserve">
    <value>New thin pool details</value>
  </data>
  <data name="thin_datalv" xml:space="preserve">
    <value>Existing LV for data</value>
  </data>
  <data name="thin_metadatalv" xml:space="preserve">
    <value>Existing LV for metadata</value>
  </data>
  <data name="thin_ok" xml:space="preserve">
    <value>Convert LVs To Thin Pool</value>
  </data>
  <data name="thin_elvs" xml:space="preserve">
    <value>No LVs that are not already in use were found in this VG!</value>
  </data>
  <data name="thin_err" xml:space="preserve">
    <value>Failed to create thin pool</value>
  </data>
  <data name="thin_esame" xml:space="preserve">
    <value>Both selected LVs are the same</value>
  </data>
  <data name="thin_edata" xml:space="preserve">
    <value>The selected data LV is already in use</value>
  </data>
  <data name="thin_emetadata" xml:space="preserve">
    <value>The selected metadata LV is already in use</value>
  </data>
  <data name="log_create_vg" xml:space="preserve">
    <value>Created volume group $1</value>
  </data>
  <data name="log_modify_vg" xml:space="preserve">
    <value>Modified volume group $1</value>
  </data>
  <data name="log_delete_vg" xml:space="preserve">
    <value>Deleted volume group $1</value>
  </data>
  <data name="log_create_lv" xml:space="preserve">
    <value>Created logical volume $1 in VG $2</value>
  </data>
  <data name="log_modify_lv" xml:space="preserve">
    <value>Modified logical volume $1 in VG $2</value>
  </data>
  <data name="log_delete_lv" xml:space="preserve">
    <value>Deleted logical volume $1 in VG $2</value>
  </data>
  <data name="log_rollback_lv" xml:space="preserve">
    <value>Rolled back snapshot $1</value>
  </data>
  <data name="log_mkfs_lv" xml:space="preserve">
    <value>Created $1 filesystem on $2</value>
  </data>
  <data name="log_create_pv" xml:space="preserve">
    <value>Added physical volume $1 to VG $1</value>
  </data>
  <data name="log_modify_pv" xml:space="preserve">
    <value>Modified physical volume $1 in VG $2</value>
  </data>
  <data name="log_delete_pv" xml:space="preserve">
    <value>Removed physical volume $1 from VG $2</value>
  </data>
  <data name="log_resize_pv" xml:space="preserve">
    <value>Resized physical volume $1 in VG $2</value>
  </data>
  <data name="blocks" xml:space="preserve">
    <value>blocks</value>
  </data>
  <data name="__norefs" xml:space="preserve">
    <value>1</value>
  </data>
</root>