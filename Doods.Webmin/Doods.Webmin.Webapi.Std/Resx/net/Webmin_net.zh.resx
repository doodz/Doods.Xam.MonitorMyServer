<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>网络配置</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>网络配置</value>
  </data>
  <data name="ifcs_title" xml:space="preserve">
    <value>网络接口</value>
  </data>
  <data name="ifcs_now" xml:space="preserve">
    <value>接口当前活动</value>
  </data>
  <data name="ifcs_name" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="ifcs_type" xml:space="preserve">
    <value>类型</value>
  </data>
  <data name="ifcs_ip" xml:space="preserve">
    <value>IP 地址</value>
  </data>
  <data name="ifcs_mask" xml:space="preserve">
    <value>子网掩码</value>
  </data>
  <data name="ifcs_status" xml:space="preserve">
    <value>状态</value>
  </data>
  <data name="ifcs_virtual" xml:space="preserve">
    <value>虚拟</value>
  </data>
  <data name="ifcs_up" xml:space="preserve">
    <value>启用</value>
  </data>
  <data name="ifcs_down" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="ifcs_add" xml:space="preserve">
    <value>增加接口</value>
  </data>
  <data name="ifcs_boot" xml:space="preserve">
    <value>启动时启用接口</value>
  </data>
  <data name="ifcs_act" xml:space="preserve">
    <value>启动时启用？</value>
  </data>
  <data name="ifcs_bootp" xml:space="preserve">
    <value>来自 BOOTP</value>
  </data>
  <data name="ifcs_dhcp" xml:space="preserve">
    <value>来自 DHCP</value>
  </data>
  <data name="ifcs_broad" xml:space="preserve">
    <value>广播</value>
  </data>
  <data name="ifcs_auto" xml:space="preserve">
    <value>自动</value>
  </data>
  <data name="ifcs_mtu" xml:space="preserve">
    <value>最大传输单元</value>
  </data>
  <data name="ifcs_virts" xml:space="preserve">
    <value>虚拟接口</value>
  </data>
  <data name="ifcs_addvirt" xml:space="preserve">
    <value>增加虚拟接口</value>
  </data>
  <data name="ifcs_return" xml:space="preserve">
    <value>网络接口</value>
  </data>
  <data name="aifc_create" xml:space="preserve">
    <value>创建活动接口</value>
  </data>
  <data name="aifc_edit" xml:space="preserve">
    <value>编辑活动接口</value>
  </data>
  <data name="aifc_desc1" xml:space="preserve">
    <value>活动接口参数</value>
  </data>
  <data name="aifc_desc2" xml:space="preserve">
    <value>活动虚拟接口参数</value>
  </data>
  <data name="aifc_hard" xml:space="preserve">
    <value>硬件地址</value>
  </data>
  <data name="aifc_default" xml:space="preserve">
    <value>缺省</value>
  </data>
  <data name="aifc_err1" xml:space="preserve">
    <value>删除接口失败</value>
  </data>
  <data name="aifc_err2" xml:space="preserve">
    <value>保存接口失败</value>
  </data>
  <data name="aifc_evirt" xml:space="preserve">
    <value>丢失或者错误的虚拟接口号</value>
  </data>
  <data name="aifc_evirtdup" xml:space="preserve">
    <value>该虚拟接口号 $1 已经存在</value>
  </data>
  <data name="aifc_edup" xml:space="preserve">
    <value>接口 $1 已经存在</value>
  </data>
  <data name="aifc_ename" xml:space="preserve">
    <value>丢失或者非法斗接口名称</value>
  </data>
  <data name="aifc_eip" xml:space="preserve">
    <value>'$1' 错误的IP地址</value>
  </data>
  <data name="aifc_emask" xml:space="preserve">
    <value>'$1' 错误的网络掩码</value>
  </data>
  <data name="aifc_ebroad" xml:space="preserve">
    <value>'$1' 错误的广播地址</value>
  </data>
  <data name="aifc_emtu" xml:space="preserve">
    <value>'$1' 错误的最大传输单元</value>
  </data>
  <data name="aifc_ehard" xml:space="preserve">
    <value>'$1' 错误的硬件地址</value>
  </data>
  <data name="aifc_eexist" xml:space="preserve">
    <value>接口 '$1' 不存在</value>
  </data>
  <data name="bifc_create" xml:space="preserve">
    <value>创建引导时接口</value>
  </data>
  <data name="bifc_edit" xml:space="preserve">
    <value>编辑引导时接口</value>
  </data>
  <data name="bifc_desc1" xml:space="preserve">
    <value>引导时接口参数</value>
  </data>
  <data name="bifc_desc2" xml:space="preserve">
    <value>引导时虚拟接口参数</value>
  </data>
  <data name="bifc_apply" xml:space="preserve">
    <value>保存并应用</value>
  </data>
  <data name="bifc_err1" xml:space="preserve">
    <value>删除接口失败</value>
  </data>
  <data name="bifc_err2" xml:space="preserve">
    <value>保存接口失败</value>
  </data>
  <data name="bifc_evirt" xml:space="preserve">
    <value>丢失或错误的虚拟接口号</value>
  </data>
  <data name="bifc_evirtdup" xml:space="preserve">
    <value>虚拟接口 $1 已经存在</value>
  </data>
  <data name="bifc_edup" xml:space="preserve">
    <value>接口 $1 已经存在</value>
  </data>
  <data name="bifc_ename" xml:space="preserve">
    <value>丢失或错误的接口名称</value>
  </data>
  <data name="bifc_eip" xml:space="preserve">
    <value>'$1' 错误的IP地址</value>
  </data>
  <data name="bifc_emask" xml:space="preserve">
    <value>'$1' 错误的网络掩码</value>
  </data>
  <data name="bifc_ebroad" xml:space="preserve">
    <value>'$1' 错误的广播地址</value>
  </data>
  <data name="bifc_emtu" xml:space="preserve">
    <value>'$1' 错误的最大传输单元</value>
  </data>
  <data name="bifc_err3" xml:space="preserve">
    <value>启用接口失败</value>
  </data>
  <data name="routes_title" xml:space="preserve">
    <value>路由和网关</value>
  </data>
  <data name="routes_boot" xml:space="preserve">
    <value>&lt;i&gt;引导时&lt;/i&gt;启用的路由配置</value>
  </data>
  <data name="routes_default" xml:space="preserve">
    <value>缺省路由器</value>
  </data>
  <data name="routes_none" xml:space="preserve">
    <value>无</value>
  </data>
  <data name="routes_device" xml:space="preserve">
    <value>设备</value>
  </data>
  <data name="routes_gateway" xml:space="preserve">
    <value>网关</value>
  </data>
  <data name="routes_forward" xml:space="preserve">
    <value>作路由器？</value>
  </data>
  <data name="routes_routed" xml:space="preserve">
    <value>启动路由查找守护程序？</value>
  </data>
  <data name="routes_edefault" xml:space="preserve">
    <value>'$1' 错误的缺省路由器</value>
  </data>
  <data name="routes_edevice" xml:space="preserve">
    <value>'$1'不是一个有效设备</value>
  </data>
  <data name="routes_device2" xml:space="preserve">
    <value>缺省路由设备</value>
  </data>
  <data name="routes_static" xml:space="preserve">
    <value>静态路由</value>
  </data>
  <data name="routes_ifc" xml:space="preserve">
    <value>接口</value>
  </data>
  <data name="routes_net" xml:space="preserve">
    <value>网络</value>
  </data>
  <data name="routes_mask" xml:space="preserve">
    <value>子网掩码</value>
  </data>
  <data name="routes_enet" xml:space="preserve">
    <value>'$1' 错误网络</value>
  </data>
  <data name="routes_emask" xml:space="preserve">
    <value>'$1' 错误网络掩码</value>
  </data>
  <data name="routes_egateway" xml:space="preserve">
    <value>'$1' 错误的网关</value>
  </data>
  <data name="routes_defaults" xml:space="preserve">
    <value>缺省路由器</value>
  </data>
  <data name="routes_possible" xml:space="preserve">
    <value>如果可能</value>
  </data>
  <data name="routes_local" xml:space="preserve">
    <value>本地路由</value>
  </data>
  <data name="routes_err" xml:space="preserve">
    <value>存储路由失败</value>
  </data>
  <data name="dns_title" xml:space="preserve">
    <value>DNS 客户</value>
  </data>
  <data name="dns_options" xml:space="preserve">
    <value>DNS 客户选项</value>
  </data>
  <data name="dns_hostname" xml:space="preserve">
    <value>主机名</value>
  </data>
  <data name="dns_order" xml:space="preserve">
    <value>解析顺序</value>
  </data>
  <data name="dns_servers" xml:space="preserve">
    <value>DNS 服务器</value>
  </data>
  <data name="dns_search" xml:space="preserve">
    <value>搜索域</value>
  </data>
  <data name="dns_none" xml:space="preserve">
    <value>无</value>
  </data>
  <data name="dns_listed" xml:space="preserve">
    <value>列表 ..</value>
  </data>
  <data name="dns_eorder" xml:space="preserve">
    <value>丢失解析次序</value>
  </data>
  <data name="hosts_title" xml:space="preserve">
    <value>主机地址</value>
  </data>
  <data name="hosts_ip" xml:space="preserve">
    <value>IP 地址</value>
  </data>
  <data name="hosts_host" xml:space="preserve">
    <value>主机名</value>
  </data>
  <data name="hosts_add" xml:space="preserve">
    <value>增加主机地址</value>
  </data>
  <data name="hosts_edit" xml:space="preserve">
    <value>编辑主机地址</value>
  </data>
  <data name="hosts_create" xml:space="preserve">
    <value>创建主机地址</value>
  </data>
  <data name="hosts_detail" xml:space="preserve">
    <value>主机和地址</value>
  </data>
  <data name="hosts_return" xml:space="preserve">
    <value>主机地址列表</value>
  </data>
  <data name="log_create_host" xml:space="preserve">
    <value>已创建客户地址 $1</value>
  </data>
  <data name="log_delete_host" xml:space="preserve">
    <value>已删除客户地址 $1</value>
  </data>
  <data name="log_modify_host" xml:space="preserve">
    <value>已更新客户地址 $1</value>
  </data>
  <data name="log_dns" xml:space="preserve">
    <value>已改变 DNS 客户设置选项</value>
  </data>
  <data name="log_routes" xml:space="preserve">
    <value>已改变路由和网关选项</value>
  </data>
  <data name="log_create_aifc" xml:space="preserve">
    <value>启用的接口 $1 地址 $2</value>
  </data>
  <data name="log_modify_aifc" xml:space="preserve">
    <value>重新启用的接口 $1 地址 $2</value>
  </data>
  <data name="log_delete_aifc" xml:space="preserve">
    <value>禁用的接口 $1 地址 $2</value>
  </data>
  <data name="log_create_bifc" xml:space="preserve">
    <value>已创建的接口 $1 地址 $2</value>
  </data>
  <data name="log_modify_bifc" xml:space="preserve">
    <value>已更新的接口 $1 地址 $2</value>
  </data>
  <data name="log_delete_bifc" xml:space="preserve">
    <value>已删除的接口 $1 地址 $2</value>
  </data>
</root>