<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>SMARTドライブステータス</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>SMARTsuiteバージョン $1</value>
  </data>
  <data name="index_show" xml:space="preserve">
    <value>ドライブのステータスを表示：</value>
  </data>
  <data name="index_ok" xml:space="preserve">
    <value>公演</value>
  </data>
  <data name="index_eidescsi" xml:space="preserve">
    <value>システムにIDE、SCSI、またはSATAドライブが見つかりませんでした。</value>
  </data>
  <data name="index_drive" xml:space="preserve">
    <value>ドライブ $1のステータス</value>
  </data>
  <data name="index_drivesub" xml:space="preserve">
    <value>ドライブ $1、ディスク $2のステータス</value>
  </data>
  <data name="index_desc" xml:space="preserve">
    <value>ロケーション</value>
  </data>
  <data name="index_size" xml:space="preserve">
    <value>ドライブサイズ</value>
  </data>
  <data name="index_model" xml:space="preserve">
    <value>作成とモデル化</value>
  </data>
  <data name="index_support" xml:space="preserve">
    <value>SMARTをサポートしていますか？</value>
  </data>
  <data name="index_enabled" xml:space="preserve">
    <value>SMARTは有効ですか？</value>
  </data>
  <data name="index_check" xml:space="preserve">
    <value>ドライブチェックに合格しましたか？</value>
  </data>
  <data name="index_short" xml:space="preserve">
    <value>ショートセルフテスト</value>
  </data>
  <data name="index_ext" xml:space="preserve">
    <value>拡張セルフテスト</value>
  </data>
  <data name="index_data" xml:space="preserve">
    <value>データ収集テスト</value>
  </data>
  <data name="index_errors" xml:space="preserve">
    <value>ログに記録されたエラー</value>
  </data>
  <data name="index_ecount" xml:space="preserve">
    <value>$1個のエラーが検出されました</value>
  </data>
  <data name="index_attrs" xml:space="preserve">
    <value>追加のSMART属性</value>
  </data>
  <data name="index_raw" xml:space="preserve">
    <value>完全なSMARTステータスレポート</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>モジュールインデックス</value>
  </data>
  <data name="index_family" xml:space="preserve">
    <value>モデルファミリー</value>
  </data>
  <data name="index_serial" xml:space="preserve">
    <value>シリアルナンバー</value>
  </data>
  <data name="index_capacity" xml:space="preserve">
    <value>容量</value>
  </data>
  <data name="index_norm" xml:space="preserve">
    <value>正規化：</value>
  </data>
  <data name="monitor_type" xml:space="preserve">
    <value>SMARTドライブチェック</value>
  </data>
  <data name="monitor_type2" xml:space="preserve">
    <value>SSDの摩耗</value>
  </data>
  <data name="monitor_drive" xml:space="preserve">
    <value>チェックするドライブ</value>
  </data>
  <data name="monitor_errors" xml:space="preserve">
    <value>エラーログも確認しますか？</value>
  </data>
  <data name="monitor_errorsinc" xml:space="preserve">
    <value>はい。ただし、エラーカウントが増加した場合にのみ警告します</value>
  </data>
  <data name="monitor_other" xml:space="preserve">
    <value>その他 ..</value>
  </data>
  <data name="monitor_edrive" xml:space="preserve">
    <value>チェックするドライブがないか無効です</value>
  </data>
  <data name="monitor_nosuch" xml:space="preserve">
    <value>そのようなドライブはありません</value>
  </data>
  <data name="monitor_nosmart" xml:space="preserve">
    <value>SMARTサポートなし</value>
  </data>
  <data name="monitor_errorsfound" xml:space="preserve">
    <value>報告された $1エラー</value>
  </data>
  <data name="monitor_errorsinced" xml:space="preserve">
    <value>エラーが $2から $1に増加しました</value>
  </data>
  <data name="monitor_wearlevel" xml:space="preserve">
    <value>摩耗レベルが下がった場合は不合格</value>
  </data>
  <data name="monitor_ewearlevel" xml:space="preserve">
    <value>摩耗レベルの割合が無効です</value>
  </data>
  <data name="monitor_nowearout" xml:space="preserve">
    <value>ドライブがSSD摩耗インジケータを報告しない</value>
  </data>
  <data name="monitor_wornout" xml:space="preserve">
    <value>摩耗レベルが $1に低下しました</value>
  </data>
  <data name="short_title" xml:space="preserve">
    <value>ショートセルフテスト</value>
  </data>
  <data name="short_doing" xml:space="preserve">
    <value>$1の短いセルフテストを開始しています ..</value>
  </data>
  <data name="short_failed" xml:space="preserve">
    <value>..失敗しました！</value>
  </data>
  <data name="short_ok" xml:space="preserve">
    <value>..テストは正常に開始されました。結果については、モジュールのメインページのドライブステータスを参照してください。</value>
  </data>
  <data name="ext_title" xml:space="preserve">
    <value>拡張セルフテスト</value>
  </data>
  <data name="ext_doing" xml:space="preserve">
    <value>$1の拡張セルフテストを開始しています ..</value>
  </data>
  <data name="ext_failed" xml:space="preserve">
    <value>..失敗しました！</value>
  </data>
  <data name="ext_ok" xml:space="preserve">
    <value>..テストは正常に開始されました。結果については、モジュールのメインページのドライブステータスを参照してください。</value>
  </data>
  <data name="data_title" xml:space="preserve">
    <value>データ収集テスト</value>
  </data>
  <data name="data_doing" xml:space="preserve">
    <value>$1でオフラインデータ収集を開始しています ..</value>
  </data>
  <data name="data_failed" xml:space="preserve">
    <value>..失敗しました！</value>
  </data>
  <data name="data_ok" xml:space="preserve">
    <value>..収集は正常に開始されました。結果については、モジュールのメインページのドライブステータスを参照してください。</value>
  </data>
</root>