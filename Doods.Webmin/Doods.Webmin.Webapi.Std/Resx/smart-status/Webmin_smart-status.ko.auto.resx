<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>스마트 드라이브 상태</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>스마트 스위트 버전 $1 </value>
  </data>
  <data name="index_show" xml:space="preserve">
    <value>드라이브 상태 표시 :</value>
  </data>
  <data name="index_ok" xml:space="preserve">
    <value>보여 주다</value>
  </data>
  <data name="index_eidescsi" xml:space="preserve">
    <value>시스템에 IDE, SCSI 또는 SATA 드라이브가 없습니다.</value>
  </data>
  <data name="index_drive" xml:space="preserve">
    <value>드라이브 $1 의 상태</value>
  </data>
  <data name="index_drivesub" xml:space="preserve">
    <value>드라이브 $1, 디스크 $2 의 상태</value>
  </data>
  <data name="index_desc" xml:space="preserve">
    <value>위치</value>
  </data>
  <data name="index_size" xml:space="preserve">
    <value>드라이브 크기</value>
  </data>
  <data name="index_model" xml:space="preserve">
    <value>제작 및 모델</value>
  </data>
  <data name="index_support" xml:space="preserve">
    <value>SMART를 지원합니까?</value>
  </data>
  <data name="index_enabled" xml:space="preserve">
    <value>스마트 가능?</value>
  </data>
  <data name="index_check" xml:space="preserve">
    <value>드라이브 확인을 통과 했습니까?</value>
  </data>
  <data name="index_short" xml:space="preserve">
    <value>짧은 자체 테스트</value>
  </data>
  <data name="index_ext" xml:space="preserve">
    <value>확장 된 자체 테스트</value>
  </data>
  <data name="index_data" xml:space="preserve">
    <value>데이터 수집 테스트</value>
  </data>
  <data name="index_errors" xml:space="preserve">
    <value>기록 된 오류</value>
  </data>
  <data name="index_ecount" xml:space="preserve">
    <value>$1 오류 감지</value>
  </data>
  <data name="index_attrs" xml:space="preserve">
    <value>추가 SMART 속성</value>
  </data>
  <data name="index_raw" xml:space="preserve">
    <value>전체 SMART 상태 보고서</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>모듈 색인</value>
  </data>
  <data name="index_family" xml:space="preserve">
    <value>모델 군</value>
  </data>
  <data name="index_serial" xml:space="preserve">
    <value>일련 번호</value>
  </data>
  <data name="index_capacity" xml:space="preserve">
    <value>생산 능력</value>
  </data>
  <data name="index_norm" xml:space="preserve">
    <value>정규화 :</value>
  </data>
  <data name="monitor_type" xml:space="preserve">
    <value>스마트 드라이브 점검</value>
  </data>
  <data name="monitor_type2" xml:space="preserve">
    <value>SSD 마모</value>
  </data>
  <data name="monitor_drive" xml:space="preserve">
    <value>확인할 드라이브</value>
  </data>
  <data name="monitor_errors" xml:space="preserve">
    <value>오류 로그도 확인 하시겠습니까?</value>
  </data>
  <data name="monitor_errorsinc" xml:space="preserve">
    <value>예, 그러나 오류 수가 증가하는 경우에만 경고</value>
  </data>
  <data name="monitor_other" xml:space="preserve">
    <value>다른 ..</value>
  </data>
  <data name="monitor_edrive" xml:space="preserve">
    <value>확인할 드라이브가 없거나 유효하지 않습니다</value>
  </data>
  <data name="monitor_nosuch" xml:space="preserve">
    <value>그런 드라이브가 없습니다</value>
  </data>
  <data name="monitor_nosmart" xml:space="preserve">
    <value>SMART가 지원되지 않습니다</value>
  </data>
  <data name="monitor_errorsfound" xml:space="preserve">
    <value>보고 된 $1 오류</value>
  </data>
  <data name="monitor_errorsinced" xml:space="preserve">
    <value>오류가 $2 에서 $1 (으)로 증가했습니다</value>
  </data>
  <data name="monitor_wearlevel" xml:space="preserve">
    <value>마모 수준이 아래로 떨어지면 실패</value>
  </data>
  <data name="monitor_ewearlevel" xml:space="preserve">
    <value>유효하지 않은 마모 수준</value>
  </data>
  <data name="monitor_nowearout" xml:space="preserve">
    <value>드라이브가 SSD 마모 표시기를보고하지 않습니다</value>
  </data>
  <data name="monitor_wornout" xml:space="preserve">
    <value>마모 수준이 $1 로 떨어졌습니다.</value>
  </data>
  <data name="short_title" xml:space="preserve">
    <value>짧은 자체 테스트</value>
  </data>
  <data name="short_doing" xml:space="preserve">
    <value>$1 의 간단한 자체 테스트 시작</value>
  </data>
  <data name="short_failed" xml:space="preserve">
    <value>.. 실패했습니다!</value>
  </data>
  <data name="short_ok" xml:space="preserve">
    <value>.. 테스트가 시작되었습니다. 결과는 모듈 메인 페이지의 드라이브 상태를 참조하십시오.</value>
  </data>
  <data name="ext_title" xml:space="preserve">
    <value>확장 된 자체 테스트</value>
  </data>
  <data name="ext_doing" xml:space="preserve">
    <value>$1 의 확장 자체 테스트를 시작합니다.</value>
  </data>
  <data name="ext_failed" xml:space="preserve">
    <value>.. 실패했습니다!</value>
  </data>
  <data name="ext_ok" xml:space="preserve">
    <value>.. 테스트가 시작되었습니다. 결과는 모듈 메인 페이지의 드라이브 상태를 참조하십시오.</value>
  </data>
  <data name="data_title" xml:space="preserve">
    <value>데이터 수집 테스트</value>
  </data>
  <data name="data_doing" xml:space="preserve">
    <value>$1 에서 오프라인 데이터 수집을 시작하는 중입니다.</value>
  </data>
  <data name="data_failed" xml:space="preserve">
    <value>.. 실패했습니다!</value>
  </data>
  <data name="data_ok" xml:space="preserve">
    <value>.. 수집이 시작되었습니다. 결과는 모듈 메인 페이지의 드라이브 상태를 참조하십시오.</value>
  </data>
</root>