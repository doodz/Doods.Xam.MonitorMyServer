<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>SMART Drive-status</value>
  </data>
  <data name="index_version" xml:space="preserve">
    <value>SMARTsuite weergawe $1 </value>
  </data>
  <data name="index_show" xml:space="preserve">
    <value>Wys die status van die skyf:</value>
  </data>
  <data name="index_ok" xml:space="preserve">
    <value>Wys</value>
  </data>
  <data name="index_eidescsi" xml:space="preserve">
    <value>Geen IDE-, SCSI- of SATA-aandrywers is op u stelsel gevind nie.</value>
  </data>
  <data name="index_drive" xml:space="preserve">
    <value>Status van drywer $1 </value>
  </data>
  <data name="index_drivesub" xml:space="preserve">
    <value>Status van skyf $1, skyf $2 </value>
  </data>
  <data name="index_desc" xml:space="preserve">
    <value>plek</value>
  </data>
  <data name="index_size" xml:space="preserve">
    <value>Ry grootte</value>
  </data>
  <data name="index_model" xml:space="preserve">
    <value>Maak en modelleer</value>
  </data>
  <data name="index_support" xml:space="preserve">
    <value>Ondersteun SMART?</value>
  </data>
  <data name="index_enabled" xml:space="preserve">
    <value>SMART geaktiveer?</value>
  </data>
  <data name="index_check" xml:space="preserve">
    <value>Bestuurstjek geslaag?</value>
  </data>
  <data name="index_short" xml:space="preserve">
    <value>Kort selftoets</value>
  </data>
  <data name="index_ext" xml:space="preserve">
    <value>Uitgebreide selftoets</value>
  </data>
  <data name="index_data" xml:space="preserve">
    <value>Toets van data-insameling</value>
  </data>
  <data name="index_errors" xml:space="preserve">
    <value>Foute aangeteken</value>
  </data>
  <data name="index_ecount" xml:space="preserve">
    <value>$1 foute bespeur</value>
  </data>
  <data name="index_attrs" xml:space="preserve">
    <value>Bykomende SMART-eienskappe</value>
  </data>
  <data name="index_raw" xml:space="preserve">
    <value>Volledige SMART-statusverslag</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>module-indeks</value>
  </data>
  <data name="index_family" xml:space="preserve">
    <value>Modelfamilie</value>
  </data>
  <data name="index_serial" xml:space="preserve">
    <value>Reeksnommer</value>
  </data>
  <data name="index_capacity" xml:space="preserve">
    <value>kapasiteit</value>
  </data>
  <data name="index_norm" xml:space="preserve">
    <value>genormaliseer:</value>
  </data>
  <data name="monitor_type" xml:space="preserve">
    <value>SMART Drive Check</value>
  </data>
  <data name="monitor_type2" xml:space="preserve">
    <value>SSD Wearout</value>
  </data>
  <data name="monitor_drive" xml:space="preserve">
    <value>Ry om na te gaan</value>
  </data>
  <data name="monitor_errors" xml:space="preserve">
    <value>Gaan foutfout ook na?</value>
  </data>
  <data name="monitor_errorsinc" xml:space="preserve">
    <value>Ja, maar slegs waarskuwing as fouttelling toeneem</value>
  </data>
  <data name="monitor_other" xml:space="preserve">
    <value>Ander ..</value>
  </data>
  <data name="monitor_edrive" xml:space="preserve">
    <value>Ontbrekende of ongeldige stasie om na te gaan</value>
  </data>
  <data name="monitor_nosuch" xml:space="preserve">
    <value>Geen so ry nie</value>
  </data>
  <data name="monitor_nosmart" xml:space="preserve">
    <value>Geen SMART-ondersteuning nie</value>
  </data>
  <data name="monitor_errorsfound" xml:space="preserve">
    <value>Gerapporteer $1 foute</value>
  </data>
  <data name="monitor_errorsinced" xml:space="preserve">
    <value>Foute het toegeneem van $2 tot $1 </value>
  </data>
  <data name="monitor_wearlevel" xml:space="preserve">
    <value>Misluk as die slytasievlak onder is</value>
  </data>
  <data name="monitor_ewearlevel" xml:space="preserve">
    <value>Ongeldige slytasiepersentasie</value>
  </data>
  <data name="monitor_nowearout" xml:space="preserve">
    <value>Drive meld nie 'n SSD-wearout-aanwyser aan nie</value>
  </data>
  <data name="monitor_wornout" xml:space="preserve">
    <value>Dravlak het tot $1 gedaal</value>
  </data>
  <data name="short_title" xml:space="preserve">
    <value>Kort selftoets</value>
  </data>
  <data name="short_doing" xml:space="preserve">
    <value>Begin kort selftoets van $1.</value>
  </data>
  <data name="short_failed" xml:space="preserve">
    <value>.. misluk!</value>
  </data>
  <data name="short_ok" xml:space="preserve">
    <value>.. toets begin OK. U kan die resultate op die hoofblad van die module sien.</value>
  </data>
  <data name="ext_title" xml:space="preserve">
    <value>Uitgebreide selftoets</value>
  </data>
  <data name="ext_doing" xml:space="preserve">
    <value>Begin met uitgebreide selftoets van $1.</value>
  </data>
  <data name="ext_failed" xml:space="preserve">
    <value>.. misluk!</value>
  </data>
  <data name="ext_ok" xml:space="preserve">
    <value>.. toets begin OK. U kan die resultate op die hoofblad van die module sien.</value>
  </data>
  <data name="data_title" xml:space="preserve">
    <value>Toets van data-insameling</value>
  </data>
  <data name="data_doing" xml:space="preserve">
    <value>Begin vanlyn data-insameling op $1.</value>
  </data>
  <data name="data_failed" xml:space="preserve">
    <value>.. misluk!</value>
  </data>
  <data name="data_ok" xml:space="preserve">
    <value>.. versameling begin OK. U kan die resultate op die hoofblad van die module sien.</value>
  </data>
</root>