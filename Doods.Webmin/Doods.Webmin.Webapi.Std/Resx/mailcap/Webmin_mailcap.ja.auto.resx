<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>MIMEタイププログラム</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>MIMEタイプハンドラプログラムはまだ定義されていません。</value>
  </data>
  <data name="index_add" xml:space="preserve">
    <value>新しいMIMEタイプのプログラムを追加します。</value>
  </data>
  <data name="index_type" xml:space="preserve">
    <value>MIMEタイプ</value>
  </data>
  <data name="index_program" xml:space="preserve">
    <value>ハンドラープログラム</value>
  </data>
  <data name="index_cmt" xml:space="preserve">
    <value>説明</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>選択を削除します</value>
  </data>
  <data name="index_disable" xml:space="preserve">
    <value>選択を無効にする</value>
  </data>
  <data name="index_enable" xml:space="preserve">
    <value>選択を有効にする</value>
  </data>
  <data name="index_enabled" xml:space="preserve">
    <value>有効にしましたか？</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>プログラムのリスト</value>
  </data>
  <data name="edit_title1" xml:space="preserve">
    <value>MIMEタイププログラムの作成</value>
  </data>
  <data name="edit_title2" xml:space="preserve">
    <value>MIMEタイププログラムの編集</value>
  </data>
  <data name="edit_header" xml:space="preserve">
    <value>MIMEタイプハンドラプログラムの詳細</value>
  </data>
  <data name="edit_type" xml:space="preserve">
    <value>MIMEタイプ</value>
  </data>
  <data name="edit_enabled" xml:space="preserve">
    <value>有効にしましたか？</value>
  </data>
  <data name="edit_program" xml:space="preserve">
    <value>ハンドラープログラム</value>
  </data>
  <data name="edit_cmt" xml:space="preserve">
    <value>説明</value>
  </data>
  <data name="edit_egone" xml:space="preserve">
    <value>プログラムはもう存在しません！</value>
  </data>
  <data name="edit_test" xml:space="preserve">
    <value>テストコマンド</value>
  </data>
  <data name="edit_none" xml:space="preserve">
    <value>なし（常にプログラムを使用）</value>
  </data>
  <data name="edit_term" xml:space="preserve">
    <value>端末に出力を表示しますか？</value>
  </data>
  <data name="edit_copious" xml:space="preserve">
    <value>大量の出力を生成しますか？</value>
  </data>
  <data name="edit_desc" xml:space="preserve">
    <value>MIMEタイプの説明</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>MIMEタイププログラムを保存できませんでした</value>
  </data>
  <data name="save_etype" xml:space="preserve">
    <value>MIMEタイプが見つからないか無効です</value>
  </data>
  <data name="save_eprogram" xml:space="preserve">
    <value>ハンドラープログラムがありません</value>
  </data>
  <data name="save_eclash" xml:space="preserve">
    <value>入力されたMIMEタイプの有効なプログラムは既に存在します</value>
  </data>
  <data name="save_etest" xml:space="preserve">
    <value>テストコマンドが見つからないか無効です</value>
  </data>
  <data name="save_edesc" xml:space="preserve">
    <value>無効なMIMEタイプの説明</value>
  </data>
  <data name="delete_err" xml:space="preserve">
    <value>MIMEタイプのプログラムを削除できませんでした</value>
  </data>
  <data name="disable_err" xml:space="preserve">
    <value>MIMEタイプのプログラムを無効にできませんでした</value>
  </data>
  <data name="disable_eclash" xml:space="preserve">
    <value>$1の無効なMIMEタイププログラムは既に存在します</value>
  </data>
  <data name="enable_err" xml:space="preserve">
    <value>MIMEタイプのプログラムを有効にできませんでした</value>
  </data>
  <data name="enable_eclash" xml:space="preserve">
    <value>$1の有効なMIMEタイププログラムは既に存在します</value>
  </data>
  <data name="delete_enone" xml:space="preserve">
    <value>何も選択されていません</value>
  </data>
  <data name="log_delete_mailcap" xml:space="preserve">
    <value>$1のMIMEタイププログラムを削除します</value>
  </data>
  <data name="log_create_mailcap" xml:space="preserve">
    <value>$1のMIMEタイププログラムを作成しました</value>
  </data>
  <data name="log_modify_mailcap" xml:space="preserve">
    <value>$1の変更されたMIMEタイププログラム</value>
  </data>
  <data name="log_delete_mailcaps" xml:space="preserve">
    <value>$1 MIMEタイプのプログラムを削除しました</value>
  </data>
  <data name="log_disable_mailcaps" xml:space="preserve">
    <value>$1 MIMEタイプのプログラムを無効にしました</value>
  </data>
  <data name="log_enable_mailcaps" xml:space="preserve">
    <value>有効な $1 MIMEタイププログラム</value>
  </data>
</root>