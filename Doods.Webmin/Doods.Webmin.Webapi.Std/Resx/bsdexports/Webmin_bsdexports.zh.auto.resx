<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>NFS出口</value>
  </data>
  <data name="index_add" xml:space="preserve">
    <value>添加一个新的导出。</value>
  </data>
  <data name="index_dirs" xml:space="preserve">
    <value>目录</value>
  </data>
  <data name="index_clients" xml:space="preserve">
    <value>客户群</value>
  </data>
  <data name="index_everyone" xml:space="preserve">
    <value>大家</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>尚未定义出口。</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>删除选定的导出</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>应用更改</value>
  </data>
  <data name="index_applydesc" xml:space="preserve">
    <value>单击此按钮以应用当前文件导出配置。这将使上面列出的所有目录都具有指定的选项。</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>出口清单</value>
  </data>
  <data name="index_echeck" xml:space="preserve">
    <value>NFS服务器不能在此系统上使用： $1</value>
  </data>
  <data name="check_ecmd" xml:space="preserve">
    <value>未安装NFS服务器命令 $1</value>
  </data>
  <data name="delete_err" xml:space="preserve">
    <value>无法删除导出</value>
  </data>
  <data name="delete_enone" xml:space="preserve">
    <value>未选择</value>
  </data>
  <data name="edit_title1" xml:space="preserve">
    <value>编辑导出</value>
  </data>
  <data name="edit_title2" xml:space="preserve">
    <value>创建导出</value>
  </data>
  <data name="edit_header1" xml:space="preserve">
    <value>导出选项</value>
  </data>
  <data name="edit_dirs" xml:space="preserve">
    <value>出口目录</value>
  </data>
  <data name="edit_alldirs" xml:space="preserve">
    <value>导出子目录？</value>
  </data>
  <data name="edit_ro" xml:space="preserve">
    <value>只读？</value>
  </data>
  <data name="edit_kerb" xml:space="preserve">
    <value>使用Kerberos？</value>
  </data>
  <data name="edit_header2" xml:space="preserve">
    <value>远程用户映射</value>
  </data>
  <data name="edit_maproot" xml:space="preserve">
    <value>将root用户映射到</value>
  </data>
  <data name="edit_mapusers" xml:space="preserve">
    <value>将所有用户映射到</value>
  </data>
  <data name="edit_unpriv" xml:space="preserve">
    <value>非特权用户</value>
  </data>
  <data name="edit_uid" xml:space="preserve">
    <value>用户/ UID</value>
  </data>
  <data name="edit_gids" xml:space="preserve">
    <value>和组/ GID</value>
  </data>
  <data name="edit_mapall" xml:space="preserve">
    <value>将所有用户映射到</value>
  </data>
  <data name="edit_header3" xml:space="preserve">
    <value>此出口的客户</value>
  </data>
  <data name="edit_clients" xml:space="preserve">
    <value>客户群</value>
  </data>
  <data name="edit_hosts" xml:space="preserve">
    <value>主机/网络组</value>
  </data>
  <data name="edit_network" xml:space="preserve">
    <value>网络</value>
  </data>
  <data name="edit_mask" xml:space="preserve">
    <value>面具</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>无法保存导出</value>
  </data>
  <data name="save_edir" xml:space="preserve">
    <value>'$1'不是目录或不存在</value>
  </data>
  <data name="save_enone" xml:space="preserve">
    <value>您必须至少输入一个目录才能导出</value>
  </data>
  <data name="save_esub" xml:space="preserve">
    <value>如果选择&lt;b&gt;导出子目录&lt;/b&gt;选项，则只能指定一个目录</value>
  </data>
  <data name="save_eroot" xml:space="preserve">
    <value>使用&lt;b&gt;export子目录&lt;/b&gt;选项时，导出的目录必须是&lt;i&gt;local&lt;/i&gt;文件系统的根目录</value>
  </data>
  <data name="save_euser" xml:space="preserve">
    <value>'$1'不是有效的用户或UID</value>
  </data>
  <data name="save_egroup" xml:space="preserve">
    <value>'$1'不是有效的群组或GID</value>
  </data>
  <data name="save_ekerb" xml:space="preserve">
    <value>映射根用户，映射所有用户和kerberos选项是互斥的</value>
  </data>
  <data name="save_ehosts" xml:space="preserve">
    <value>您必须输入至少一台主机才能导出到</value>
  </data>
  <data name="save_enetwork" xml:space="preserve">
    <value>“$1”不是有效的网络</value>
  </data>
  <data name="save_enetmask" xml:space="preserve">
    <value>'$1'不是有效的网络掩码</value>
  </data>
  <data name="save_esame1" xml:space="preserve">
    <value>目录&lt;tt&gt;$1&lt;/tt&gt;已被导出到&lt;tt&gt;$2&lt;/tt&gt;。您的操作系统不允许将同一&lt;i&gt;local&lt;/i&gt;文件系统上的目录分别导出到同一主机</value>
  </data>
  <data name="save_esame2" xml:space="preserve">
    <value>目录&lt;tt&gt;$1&lt;/tt&gt;已被导出到&lt;tt&gt;$2&lt;/tt&gt;。您的操作系统不允许将同一&lt;i&gt;local&lt;/i&gt;文件系统上的目录分别导出到同一网络</value>
  </data>
  <data name="restart_err" xml:space="preserve">
    <value>无法应用更改</value>
  </data>
</root>