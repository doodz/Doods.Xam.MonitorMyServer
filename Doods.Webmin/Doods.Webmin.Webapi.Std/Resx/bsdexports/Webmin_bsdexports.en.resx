<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>NFS Exports</value>
  </data>
  <data name="index_add" xml:space="preserve">
    <value>Add a new export.</value>
  </data>
  <data name="index_dirs" xml:space="preserve">
    <value>Directories</value>
  </data>
  <data name="index_clients" xml:space="preserve">
    <value>Clients</value>
  </data>
  <data name="index_everyone" xml:space="preserve">
    <value>Everyone</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>No exports have been defined yet.</value>
  </data>
  <data name="index_delete" xml:space="preserve">
    <value>Delete Selected Exports</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>Apply Changes</value>
  </data>
  <data name="index_applydesc" xml:space="preserve">
    <value>Click this button to apply the current file exports configuration. This will make all the directories listed above available with the options specified.</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>exports list</value>
  </data>
  <data name="index_echeck" xml:space="preserve">
    <value>The NFS server cannot be used on this system : $1</value>
  </data>
  <data name="check_ecmd" xml:space="preserve">
    <value>NFS server command $1 is not installed</value>
  </data>
  <data name="delete_err" xml:space="preserve">
    <value>Failed to delete exports</value>
  </data>
  <data name="delete_enone" xml:space="preserve">
    <value>None selected</value>
  </data>
  <data name="edit_title1" xml:space="preserve">
    <value>Edit Export</value>
  </data>
  <data name="edit_title2" xml:space="preserve">
    <value>Create Export</value>
  </data>
  <data name="edit_header1" xml:space="preserve">
    <value>Export options</value>
  </data>
  <data name="edit_dirs" xml:space="preserve">
    <value>Directories to export</value>
  </data>
  <data name="edit_alldirs" xml:space="preserve">
    <value>Export subdirectories?</value>
  </data>
  <data name="edit_ro" xml:space="preserve">
    <value>Read only?</value>
  </data>
  <data name="edit_kerb" xml:space="preserve">
    <value>Use Kerberos?</value>
  </data>
  <data name="edit_header2" xml:space="preserve">
    <value>Remote user mapping</value>
  </data>
  <data name="edit_maproot" xml:space="preserve">
    <value>Map root user to</value>
  </data>
  <data name="edit_mapusers" xml:space="preserve">
    <value>Map all users to</value>
  </data>
  <data name="edit_unpriv" xml:space="preserve">
    <value>Unprivileged user</value>
  </data>
  <data name="edit_uid" xml:space="preserve">
    <value>User / UID</value>
  </data>
  <data name="edit_gids" xml:space="preserve">
    <value>And groups / GIDs</value>
  </data>
  <data name="edit_mapall" xml:space="preserve">
    <value>Map all users to</value>
  </data>
  <data name="edit_header3" xml:space="preserve">
    <value>Clients for this export</value>
  </data>
  <data name="edit_clients" xml:space="preserve">
    <value>Clients</value>
  </data>
  <data name="edit_hosts" xml:space="preserve">
    <value>Hosts / netgroups</value>
  </data>
  <data name="edit_network" xml:space="preserve">
    <value>Network</value>
  </data>
  <data name="edit_mask" xml:space="preserve">
    <value>Mask</value>
  </data>
  <data name="save_err" xml:space="preserve">
    <value>Failed to save export</value>
  </data>
  <data name="save_edir" xml:space="preserve">
    <value>'$1' is not a directory or does not exist</value>
  </data>
  <data name="save_enone" xml:space="preserve">
    <value>You must enter at least one directory to export</value>
  </data>
  <data name="save_esub" xml:space="preserve">
    <value>Only one directory can be given if the &lt;b&gt;export subdirectories&lt;/b&gt; option is chosen</value>
  </data>
  <data name="save_eroot" xml:space="preserve">
    <value>When using the &lt;b&gt;export subdirectories&lt;/b&gt; option, the exported directory must be the root of a &lt;i&gt;local&lt;/i&gt; filesystem</value>
  </data>
  <data name="save_euser" xml:space="preserve">
    <value>'$1' is not a valid user or UID</value>
  </data>
  <data name="save_egroup" xml:space="preserve">
    <value>'$1' is not a valid group or GID</value>
  </data>
  <data name="save_ekerb" xml:space="preserve">
    <value>The map root users, map all users and kerberos options are mutually exclusive</value>
  </data>
  <data name="save_ehosts" xml:space="preserve">
    <value>You must enter at least one host to export to</value>
  </data>
  <data name="save_enetwork" xml:space="preserve">
    <value>'$1' is not a valid network</value>
  </data>
  <data name="save_enetmask" xml:space="preserve">
    <value>'$1' is not a valid netmask</value>
  </data>
  <data name="save_esame1" xml:space="preserve">
    <value>The directory &lt;tt&gt;$1&lt;/tt&gt; is already being exported to &lt;tt&gt;$2&lt;/tt&gt;. Your operating system does not allow directories on the same &lt;i&gt;local&lt;/i&gt; filesystem to be exported to the same host separately</value>
  </data>
  <data name="save_esame2" xml:space="preserve">
    <value>The directory &lt;tt&gt;$1&lt;/tt&gt; is already being exported to &lt;tt&gt;$2&lt;/tt&gt;. Your operating system does not allow directories on the same &lt;i&gt;local&lt;/i&gt; filesystem to be exported to the same network separately</value>
  </data>
  <data name="restart_err" xml:space="preserve">
    <value>Failed to apply changes</value>
  </data>
  <data name="__norefs" xml:space="preserve">
    <value>1</value>
  </data>
</root>