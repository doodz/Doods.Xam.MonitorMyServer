<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="edit_usage" xml:space="preserve">
    <value>Uso de disco</value>
  </data>
  <data name="edit_nfs_opt4" xml:space="preserve">
    <value>Opções específicas do NFSv4</value>
  </data>
  <data name="smb_eworkgroup" xml:space="preserve">
    <value>Nenhum grupo de trabalho definido na página Configuração do módulo</value>
  </data>
  <data name="smb_emaster" xml:space="preserve">
    <value>Nenhum mestre de navegação foi encontrado para o grupo de trabalho $1</value>
  </data>
  <data name="solaris_lvm" xml:space="preserve">
    <value>Dispositivo LVM</value>
  </data>
  <data name="solaris_vg" xml:space="preserve">
    <value>Grupo de volume</value>
  </data>
  <data name="solaris_lv" xml:space="preserve">
    <value>Volume lógico</value>
  </data>
  <data name="solaris_vxfs" xml:space="preserve">
    <value>Dispositivo VXFS</value>
  </data>
  <data name="solaris_hfs" xml:space="preserve">
    <value>Dispositivo HFS</value>
  </data>
  <data name="linux_nodev" xml:space="preserve">
    <value>Proibir arquivos de dispositivo?</value>
  </data>
  <data name="linux_noexec" xml:space="preserve">
    <value>Proibir a execução de binários?</value>
  </data>
  <data name="linux_ifuser" xml:space="preserve">
    <value>Se montável pelos usuários</value>
  </data>
  <data name="linux_quotaj" xml:space="preserve">
    <value>Tipo de armazenamento de cota</value>
  </data>
  <data name="linux_quotaj1" xml:space="preserve">
    <value>Journalling</value>
  </data>
  <data name="linux_quotaj0" xml:space="preserve">
    <value>Regular</value>
  </data>
  <data name="linux_etimeo" xml:space="preserve">
    <value>O tempo limite deve ser um número</value>
  </data>
  <data name="linux_netdev" xml:space="preserve">
    <value>Aguarde até que as interfaces de rede estejam ativadas?</value>
  </data>
  <data name="linux_nofail" xml:space="preserve">
    <value>Continuar a inicialização mesmo se a montagem falhar?</value>
  </data>
  <data name="linux_nfsvers" xml:space="preserve">
    <value>Forçar versão NFS</value>
  </data>
  <data name="linux_nfsdefault" xml:space="preserve">
    <value>Usar versão padrão</value>
  </data>
  <data name="linux_nounix" xml:space="preserve">
    <value>Desativar extensões CIFS Unix?</value>
  </data>
  <data name="linux_noserverino" xml:space="preserve">
    <value>Gerar números de inode no lado do cliente?</value>
  </data>
  <data name="linux_cvers" xml:space="preserve">
    <value>Versão CIFS</value>
  </data>
  <data name="linux_ecvers" xml:space="preserve">
    <value>A versão CIFS deve ser um número</value>
  </data>
  <data name="freebsd_ide" xml:space="preserve">
    <value>Disco rígido IDE</value>
  </data>
  <data name="freebsd_device" xml:space="preserve">
    <value>Dispositivo</value>
  </data>
  <data name="freebsd_slice" xml:space="preserve">
    <value>Fatia</value>
  </data>
  <data name="freebsd_part" xml:space="preserve">
    <value>Partição</value>
  </data>
  <data name="freebsd_scsi" xml:space="preserve">
    <value>Disco SCSI</value>
  </data>
  <data name="freebsd_other" xml:space="preserve">
    <value>Outro dispositivo</value>
  </data>
  <data name="freebsd_select" xml:space="preserve">
    <value>Partição de disco</value>
  </data>
  <data name="freebsd_idedev" xml:space="preserve">
    <value>Dispositivo IDE $1, fatia $2, partição $3</value>
  </data>
  <data name="freebsd_scsidev" xml:space="preserve">
    <value>Dispositivo SCSI $1, fatia $2, partição $3</value>
  </data>
  <data name="freebsd_edevpath" xml:space="preserve">
    <value>Outro dispositivo deve ser um caminho absoluto, como &lt;tt&gt;/dev/cdrom&lt;/tt&gt;</value>
  </data>
  <data name="freebsd_edevfile" xml:space="preserve">
    <value>O arquivo do dispositivo '$1' não existe</value>
  </data>
  <data name="cswap_file" xml:space="preserve">
    <value>O arquivo de troca $1 não existe.</value>
  </data>
  <data name="cswap_size" xml:space="preserve">
    <value>Crie e monte um arquivo de troca com tamanho</value>
  </data>
  <data name="acl_sysinfo" xml:space="preserve">
    <value>Mostrar dados de disco disponíveis no Painel?</value>
  </data>
  <data name="sysinfo_total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="sysinfo_dev" xml:space="preserve">
    <value>ID de dispositivo</value>
  </data>
</root>