<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>GRUB Boot Loader</value>
  </data>
  <data name="index_add" xml:space="preserve">
    <value>Add a new boot option.</value>
  </data>
  <data name="index_global" xml:space="preserve">
    <value>Edit Global Options</value>
  </data>
  <data name="index_globalmsg" xml:space="preserve">
    <value>Edit global bootup options that apply to all boot menu choices, and choose the device that GRUB is installed onto.</value>
  </data>
  <data name="index_install" xml:space="preserve">
    <value>Install GRUB</value>
  </data>
  <data name="index_installmsg" xml:space="preserve">
    <value>Install the GRUB boot loader on $1 to display the options above at bootup time. This will override any existing boot loader such as LILO, and may render your system unbootable!</value>
  </data>
  <data name="index_none" xml:space="preserve">
    <value>No boot options have been defined. Make sure you add at least one before installing grub.</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>options list</value>
  </data>
  <data name="title_add" xml:space="preserve">
    <value>Add Boot Option</value>
  </data>
  <data name="title_edit" xml:space="preserve">
    <value>Edit Boot Option</value>
  </data>
  <data name="title_header" xml:space="preserve">
    <value>Boot menu option details</value>
  </data>
  <data name="title_title" xml:space="preserve">
    <value>Option title</value>
  </data>
  <data name="title_root" xml:space="preserve">
    <value>Boot image partition</value>
  </data>
  <data name="title_noverify" xml:space="preserve">
    <value>Don't mount and verify partition</value>
  </data>
  <data name="title_other" xml:space="preserve">
    <value>Other device file</value>
  </data>
  <data name="title_sel" xml:space="preserve">
    <value>Selected</value>
  </data>
  <data name="title_boot" xml:space="preserve">
    <value>Operating system to boot</value>
  </data>
  <data name="title_kernel" xml:space="preserve">
    <value>Kernel</value>
  </data>
  <data name="title_kfile" xml:space="preserve">
    <value>Path to kernel</value>
  </data>
  <data name="title_args" xml:space="preserve">
    <value>Kernel options</value>
  </data>
  <data name="title_initrd" xml:space="preserve">
    <value>Initial ramdisk file</value>
  </data>
  <data name="title_modules" xml:space="preserve">
    <value>Extra modules</value>
  </data>
  <data name="title_chain" xml:space="preserve">
    <value>Other OS</value>
  </data>
  <data name="title_chain_def" xml:space="preserve">
    <value>From first sector of partition</value>
  </data>
  <data name="title_chain_file" xml:space="preserve">
    <value>From chainloader file</value>
  </data>
  <data name="title_makeactive" xml:space="preserve">
    <value>Make root partition active?</value>
  </data>
  <data name="title_none1" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="title_none2" xml:space="preserve">
    <value>(non-booting menu entry)</value>
  </data>
  <data name="title_err" xml:space="preserve">
    <value>Failed to save boot option</value>
  </data>
  <data name="title_etitle" xml:space="preserve">
    <value>Missing option title</value>
  </data>
  <data name="title_eroot" xml:space="preserve">
    <value>Missing root partition</value>
  </data>
  <data name="title_ekernel" xml:space="preserve">
    <value>Missing or invalid kernel path</value>
  </data>
  <data name="title_echain" xml:space="preserve">
    <value>Missing or invalid chainloader file</value>
  </data>
  <data name="title_edev" xml:space="preserve">
    <value>Unsupported root partition device $1</value>
  </data>
  <data name="title_einitrd" xml:space="preserve">
    <value>Missing initial ramdisk filename</value>
  </data>
  <data name="title_lock" xml:space="preserve">
    <value>Password locked?</value>
  </data>
  <data name="global_title" xml:space="preserve">
    <value>Global Options</value>
  </data>
  <data name="global_header" xml:space="preserve">
    <value>Global boot menu options</value>
  </data>
  <data name="global_default" xml:space="preserve">
    <value>Default boot option</value>
  </data>
  <data name="global_fallback" xml:space="preserve">
    <value>Fallback boot option</value>
  </data>
  <data name="global_first" xml:space="preserve">
    <value>First on list</value>
  </data>
  <data name="global_timeout" xml:space="preserve">
    <value>Timeout before loading default</value>
  </data>
  <data name="global_forever" xml:space="preserve">
    <value>Wait forever</value>
  </data>
  <data name="global_secs" xml:space="preserve">
    <value>seconds</value>
  </data>
  <data name="global_install" xml:space="preserve">
    <value>Install GRUB on disk/partition</value>
  </data>
  <data name="global_sel" xml:space="preserve">
    <value>Selected</value>
  </data>
  <data name="global_other" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="global_password" xml:space="preserve">
    <value>Boot password</value>
  </data>
  <data name="global_none" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="global_password_file" xml:space="preserve">
    <value>Use menu file if password is entered:</value>
  </data>
  <data name="global_err" xml:space="preserve">
    <value>Failed to save global options</value>
  </data>
  <data name="global_etimeout" xml:space="preserve">
    <value>Missing or invalid timeout</value>
  </data>
  <data name="global_edev" xml:space="preserve">
    <value>Unsupported install disk/partition $1</value>
  </data>
  <data name="global_eother" xml:space="preserve">
    <value>Missing or invalid disk/partition</value>
  </data>
  <data name="global_epassword" xml:space="preserve">
    <value>Missing or invalid boot password</value>
  </data>
  <data name="global_epasswordfile" xml:space="preserve">
    <value>Missing alternate menu filename</value>
  </data>
  <data name="install_title" xml:space="preserve">
    <value>Install GRUB</value>
  </data>
  <data name="install_err" xml:space="preserve">
    <value>Failed to install GRUB</value>
  </data>
  <data name="install_efind" xml:space="preserve">
    <value>Could not find menu file</value>
  </data>
  <data name="install_desc" xml:space="preserve">
    <value>Installing GRUB on $1 with commands $2 and $3 ..</value>
  </data>
  <data name="install_ok" xml:space="preserve">
    <value>.. install complete.</value>
  </data>
  <data name="install_failed" xml:space="preserve">
    <value>.. install failed!</value>
  </data>
  <data name="log_create_title" xml:space="preserve">
    <value>Created boot option $1</value>
  </data>
  <data name="log_delete_title" xml:space="preserve">
    <value>Deleted boot option $1</value>
  </data>
  <data name="log_modify_title" xml:space="preserve">
    <value>Modified boot option $1</value>
  </data>
  <data name="log_up_title" xml:space="preserve">
    <value>Moved up boot option $1</value>
  </data>
  <data name="log_down_title" xml:space="preserve">
    <value>Moved down  boot option $1</value>
  </data>
  <data name="log_global" xml:space="preserve">
    <value>Changed global options</value>
  </data>
  <data name="log_install" xml:space="preserve">
    <value>Installed GRUB</value>
  </data>
  <data name="__norefs" xml:space="preserve">
    <value>1</value>
  </data>
</root>