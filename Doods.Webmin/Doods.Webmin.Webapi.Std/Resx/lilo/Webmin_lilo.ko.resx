<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>??? 부팅 구성</value>
  </data>
  <data name="index_addk" xml:space="preserve">
    <value>새 부트 커널 작성</value>
  </data>
  <data name="index_addp" xml:space="preserve">
    <value>새 부트 파티션 작성</value>
  </data>
  <data name="index_global" xml:space="preserve">
    <value>글로벌 옵션 편집</value>
  </data>
  <data name="index_globalmsg" xml:space="preserve">
    <value>모든 커널과 파티션에 적용되는 글로벌 부팅 옵션을 편집합니다.</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>구성 적용</value>
  </data>
  <data name="index_applymsg1" xml:space="preserve">
    <value>$1의 부트 섹터에 현재 구성을 적용합니다.</value>
  </data>
  <data name="index_applymsg2" xml:space="preserve">
    <value>현재 루트 장치의 부트 섹터에 현재 구성을 적용합니다.</value>
  </data>
  <data name="index_applymsg3" xml:space="preserve">
    <value>재부팅하기 전에 구성이 올바른지 확인하십시오!</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>커널 및 파티션</value>
  </data>
  <data name="index_earch" xml:space="preserve">
    <value>LILO는 x86 아키텍처 시스템에서만 지원됩니다</value>
  </data>
  <data name="global_title" xml:space="preserve">
    <value>글로벌 옵션</value>
  </data>
  <data name="global_desc" xml:space="preserve">
    <value>글로벌 부트 옵션</value>
  </data>
  <data name="global_boot" xml:space="preserve">
    <value>부트 로더 쓰기 대상</value>
  </data>
  <data name="global_root" xml:space="preserve">
    <value>루트 장치</value>
  </data>
  <data name="global_default" xml:space="preserve">
    <value>기본 커널/파티션</value>
  </data>
  <data name="global_first" xml:space="preserve">
    <value>목록의 첫번째</value>
  </data>
  <data name="global_prompt" xml:space="preserve">
    <value>LILO 프롬프트를 표시합니까?</value>
  </data>
  <data name="global_timeout" xml:space="preserve">
    <value>LILO 프롬프트에서 대기하는 시간</value>
  </data>
  <data name="global_forever" xml:space="preserve">
    <value>계속</value>
  </data>
  <data name="global_lock" xml:space="preserve">
    <value>사용자 커널 옵션을 기억합니까?</value>
  </data>
  <data name="global_delay" xml:space="preserve">
    <value>부팅하기 전에 대기하는 시간</value>
  </data>
  <data name="global_imm" xml:space="preserve">
    <value>즉시</value>
  </data>
  <data name="global_compact" xml:space="preserve">
    <value>읽기 요청을 병합합니까?</value>
  </data>
  <data name="global_optional" xml:space="preserve">
    <value>존재하지 않는 커널을 건너뜁니까?</value>
  </data>
  <data name="global_password" xml:space="preserve">
    <value>기본 부트 암호</value>
  </data>
  <data name="global_none" xml:space="preserve">
    <value>없음</value>
  </data>
  <data name="global_restricted" xml:space="preserve">
    <value>암호가 필요한 경우</value>
  </data>
  <data name="global_extra" xml:space="preserve">
    <value>추가 옵션을 사용하여 커널 부팅 시</value>
  </data>
  <data name="global_any" xml:space="preserve">
    <value>모든 부팅 시</value>
  </data>
  <data name="global_secs" xml:space="preserve">
    <value>초</value>
  </data>
  <data name="global_lba" xml:space="preserve">
    <value>1024 실린더 이상에서 부팅할 수 있습니까?</value>
  </data>
  <data name="global_err" xml:space="preserve">
    <value>글로벌 옵션을 저장하지 못했습니다</value>
  </data>
  <data name="apply_title" xml:space="preserve">
    <value>구성 적용</value>
  </data>
  <data name="apply_exec" xml:space="preserve">
    <value>명령 $1을(를) 사용하여 LILO 구성 적용 중..</value>
  </data>
  <data name="image_title1" xml:space="preserve">
    <value>부트 커널 작성</value>
  </data>
  <data name="image_title2" xml:space="preserve">
    <value>부트 커널 편집</value>
  </data>
  <data name="image_options" xml:space="preserve">
    <value>부트 커널 옵션</value>
  </data>
  <data name="image_name" xml:space="preserve">
    <value>이름</value>
  </data>
  <data name="image_kernel" xml:space="preserve">
    <value>부팅할 커널</value>
  </data>
  <data name="image_opts" xml:space="preserve">
    <value>커널 옵션</value>
  </data>
  <data name="image_default" xml:space="preserve">
    <value>기본값</value>
  </data>
  <data name="image_add" xml:space="preserve">
    <value>옵션 추가..</value>
  </data>
  <data name="image_replace" xml:space="preserve">
    <value>옵션 바꾸기..</value>
  </data>
  <data name="image_root" xml:space="preserve">
    <value>루트 장치</value>
  </data>
  <data name="image_fromkern" xml:space="preserve">
    <value>커널로부터</value>
  </data>
  <data name="image_rcurr" xml:space="preserve">
    <value>현재 루트</value>
  </data>
  <data name="image_rdev" xml:space="preserve">
    <value>장치..</value>
  </data>
  <data name="image_initrd" xml:space="preserve">
    <value>초기 ramdisk 파일</value>
  </data>
  <data name="image_mode" xml:space="preserve">
    <value>루트 마운트 모드</value>
  </data>
  <data name="image_ro" xml:space="preserve">
    <value>읽기 전용</value>
  </data>
  <data name="image_rw" xml:space="preserve">
    <value>읽기/쓰기</value>
  </data>
  <data name="image_vga" xml:space="preserve">
    <value>VGA 텍스트 모드</value>
  </data>
  <data name="image_ask" xml:space="preserve">
    <value>사용자에게 묻기</value>
  </data>
  <data name="image_other" xml:space="preserve">
    <value>그 외</value>
  </data>
  <data name="image_lock" xml:space="preserve">
    <value>사용자 커널 옵션을 저장합니까?</value>
  </data>
  <data name="image_optional" xml:space="preserve">
    <value>존재하지 않는 커널을 건너뜁니까?</value>
  </data>
  <data name="image_password" xml:space="preserve">
    <value>부트 암호</value>
  </data>
  <data name="image_restricted" xml:space="preserve">
    <value>암호가 필요한 경우</value>
  </data>
  <data name="image_extra" xml:space="preserve">
    <value>추가 옵션을 사용하여 커널 부팅 시</value>
  </data>
  <data name="image_any" xml:space="preserve">
    <value>모든 부팅 시</value>
  </data>
  <data name="image_none" xml:space="preserve">
    <value>없음</value>
  </data>
  <data name="image_ename" xml:space="preserve">
    <value>없는 부트 커널 이름</value>
  </data>
  <data name="image_ekernel" xml:space="preserve">
    <value>커널 이미지 '$1'이(가) 존재하지 않습니다</value>
  </data>
  <data name="image_einitrd" xml:space="preserve">
    <value>초기 ramdisk 파일 '$1'이(가) 존재하지 않습니다</value>
  </data>
  <data name="other_title1" xml:space="preserve">
    <value>부트 파티션 작성</value>
  </data>
  <data name="other_title2" xml:space="preserve">
    <value>부트 파티션 편집</value>
  </data>
  <data name="other_details" xml:space="preserve">
    <value>파티션 세부 정보</value>
  </data>
  <data name="other_name" xml:space="preserve">
    <value>이름</value>
  </data>
  <data name="other_part" xml:space="preserve">
    <value>부팅할 파티션</value>
  </data>
  <data name="other_pass" xml:space="preserve">
    <value>운영 체제에 파티션 테이블을 전달합니까?</value>
  </data>
  <data name="other_yes" xml:space="preserve">
    <value>예, 다음으로부터:</value>
  </data>
  <data name="other_password" xml:space="preserve">
    <value>부트 암호</value>
  </data>
  <data name="other_none" xml:space="preserve">
    <value>없음</value>
  </data>
  <data name="other_ename" xml:space="preserve">
    <value>없는 부트 파티션 이름</value>
  </data>
  <data name="log_create_image" xml:space="preserve">
    <value>부트 커널 $1 작성됨</value>
  </data>
  <data name="log_modify_image" xml:space="preserve">
    <value>부트 커널 $1 수정됨</value>
  </data>
  <data name="log_delete_image" xml:space="preserve">
    <value>부트 커널 $1 삭제됨</value>
  </data>
  <data name="log_create_image_l" xml:space="preserve">
    <value>$2의 부트 커널 $1 작성됨</value>
  </data>
  <data name="log_modify_image_l" xml:space="preserve">
    <value>$2의 부트 커널 $1 수정됨</value>
  </data>
  <data name="log_delete_image_l" xml:space="preserve">
    <value>$2의 부트 커널 $1 삭제됨</value>
  </data>
  <data name="log_create_other" xml:space="preserve">
    <value>부트 파티션 $1 작성됨</value>
  </data>
  <data name="log_modify_other" xml:space="preserve">
    <value>부트 파티션 $1 수정됨</value>
  </data>
  <data name="log_delete_other" xml:space="preserve">
    <value>부트 파티션 $1 삭제됨</value>
  </data>
  <data name="log_create_other_l" xml:space="preserve">
    <value>$2에서 부트 파티션 $1 작성됨</value>
  </data>
  <data name="log_modify_other_l" xml:space="preserve">
    <value>$2에서 부트 파티션 $1 수정됨</value>
  </data>
  <data name="log_delete_other_l" xml:space="preserve">
    <value>$2에서 부트 파티션 $1 삭제됨</value>
  </data>
  <data name="log_apply" xml:space="preserve">
    <value>구성 적용됨</value>
  </data>
  <data name="log_global" xml:space="preserve">
    <value>글로벌 옵션 변경됨</value>
  </data>
</root>