<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Configuration du démarrage de Linux</value>
  </data>
  <data name="index_addk" xml:space="preserve">
    <value>Créer un nouveau noyau de démarrage</value>
  </data>
  <data name="index_addp" xml:space="preserve">
    <value>Créer une nouvelle partition de démarrage</value>
  </data>
  <data name="index_global" xml:space="preserve">
    <value>Éditer les Options Globale</value>
  </data>
  <data name="index_globalmsg" xml:space="preserve">
    <value>Éditer les options globales de démarrage qui s'applique à tous les noyaux et partitions</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>Appliquer la Configuration</value>
  </data>
  <data name="index_applymsg1" xml:space="preserve">
    <value>Appliquer la configuration courante au secteur de démarrage sur $1.</value>
  </data>
  <data name="index_applymsg2" xml:space="preserve">
    <value>Appliquer la configuration courante au secteur de démarrage du périphérique racine courant</value>
  </data>
  <data name="index_applymsg3" xml:space="preserve">
    <value>S'assurer que votre configuration est correcte avant de redémarrer!</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>noyaux et partitions</value>
  </data>
  <data name="index_earch" xml:space="preserve">
    <value>LILO est seulement supporté sur les architectures x86</value>
  </data>
  <data name="index_econf" xml:space="preserve">
    <value>Le fichier de configuration de LILO $1 n'existe pas. Il se peut que vous utilisez déjà un autre gestionnaire de démarrage sur votre système.</value>
  </data>
  <data name="global_title" xml:space="preserve">
    <value>Options Globale</value>
  </data>
  <data name="global_desc" xml:space="preserve">
    <value>Options Globale de Démarrage</value>
  </data>
  <data name="global_boot" xml:space="preserve">
    <value>Écrire le chargeur de démarrage sur</value>
  </data>
  <data name="global_root" xml:space="preserve">
    <value>Périphérique racine</value>
  </data>
  <data name="global_default" xml:space="preserve">
    <value>Partition ou noyau par défaut</value>
  </data>
  <data name="global_first" xml:space="preserve">
    <value>Premier de la liste</value>
  </data>
  <data name="global_prompt" xml:space="preserve">
    <value>Afficher l'indicatif LILO?</value>
  </data>
  <data name="global_timeout" xml:space="preserve">
    <value>Temps d'attente à l'indicatif LILO</value>
  </data>
  <data name="global_forever" xml:space="preserve">
    <value>Infini</value>
  </data>
  <data name="global_lock" xml:space="preserve">
    <value>Se souvient des options usager du noyau?</value>
  </data>
  <data name="global_delay" xml:space="preserve">
    <value>Temps d'attente avant de démarrer</value>
  </data>
  <data name="global_imm" xml:space="preserve">
    <value>Immédiat</value>
  </data>
  <data name="global_compact" xml:space="preserve">
    <value>Joindre les requêtes de lecture?</value>
  </data>
  <data name="global_optional" xml:space="preserve">
    <value>Passer le noyau s'il n'existe pas?</value>
  </data>
  <data name="global_password" xml:space="preserve">
    <value>Mot de passe de démarrage par défaut</value>
  </data>
  <data name="global_none" xml:space="preserve">
    <value>Aucun</value>
  </data>
  <data name="global_restricted" xml:space="preserve">
    <value>Mot de passe nécessaire pour</value>
  </data>
  <data name="global_extra" xml:space="preserve">
    <value>Démarrer le noyau avec des options supplémentaires</value>
  </data>
  <data name="global_any" xml:space="preserve">
    <value>Tout démarrage</value>
  </data>
  <data name="global_secs" xml:space="preserve">
    <value>secondes</value>
  </data>
  <data name="global_lba" xml:space="preserve">
    <value>Permettre le démarrage au-delà des 1024 cylindres ?</value>
  </data>
  <data name="global_err" xml:space="preserve">
    <value>Impossible de sauvegarder les options globales</value>
  </data>
  <data name="apply_title" xml:space="preserve">
    <value>Appliquer la Configuration</value>
  </data>
  <data name="apply_exec" xml:space="preserve">
    <value>Appliquer la configuration LILO avec la commande '$1'</value>
  </data>
  <data name="image_title1" xml:space="preserve">
    <value>Créer un Noyau de Démarrage</value>
  </data>
  <data name="image_title2" xml:space="preserve">
    <value>Éditer un Noyau de Démarrage</value>
  </data>
  <data name="image_options" xml:space="preserve">
    <value>Options du Noyau de Démarrage</value>
  </data>
  <data name="image_name" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="image_kernel" xml:space="preserve">
    <value>Noyau à démarrer</value>
  </data>
  <data name="image_opts" xml:space="preserve">
    <value>Options du noyau</value>
  </data>
  <data name="image_default" xml:space="preserve">
    <value>Défaut</value>
  </data>
  <data name="image_add" xml:space="preserve">
    <value>Ajouter des options</value>
  </data>
  <data name="image_replace" xml:space="preserve">
    <value>Remplacer des options</value>
  </data>
  <data name="image_root" xml:space="preserve">
    <value>Périphérique racine</value>
  </data>
  <data name="image_fromkern" xml:space="preserve">
    <value>À partir du noyau</value>
  </data>
  <data name="image_rcurr" xml:space="preserve">
    <value>Racine courante</value>
  </data>
  <data name="image_rdev" xml:space="preserve">
    <value>Périphérique</value>
  </data>
  <data name="image_initrd" xml:space="preserve">
    <value>Fichier disque mémoire initial</value>
  </data>
  <data name="image_mode" xml:space="preserve">
    <value>Mode de montage racine</value>
  </data>
  <data name="image_ro" xml:space="preserve">
    <value>Lecture seule</value>
  </data>
  <data name="image_rw" xml:space="preserve">
    <value>Lecture et écriture</value>
  </data>
  <data name="image_vga" xml:space="preserve">
    <value>Mode texte VGA</value>
  </data>
  <data name="image_ask" xml:space="preserve">
    <value>Demander à l'usager</value>
  </data>
  <data name="image_other" xml:space="preserve">
    <value>Autre</value>
  </data>
  <data name="image_lock" xml:space="preserve">
    <value>Se souvenir des options usager du noyau?</value>
  </data>
  <data name="image_optional" xml:space="preserve">
    <value>Passer le noyau s'il n'existe pas?</value>
  </data>
  <data name="image_password" xml:space="preserve">
    <value>Mot de passe de démarrage</value>
  </data>
  <data name="image_restricted" xml:space="preserve">
    <value>Mot de passe nécessaire pour</value>
  </data>
  <data name="image_extra" xml:space="preserve">
    <value>Démarrer le noyau avec des options supplémentaires</value>
  </data>
  <data name="image_any" xml:space="preserve">
    <value>Tout démarrage</value>
  </data>
  <data name="image_none" xml:space="preserve">
    <value>Aucun</value>
  </data>
  <data name="image_ename" xml:space="preserve">
    <value>Nom introuvable pour ce noyau de démarrage</value>
  </data>
  <data name="image_ekernel" xml:space="preserve">
    <value>Image du noyau '$1' introuvable</value>
  </data>
  <data name="image_einitrd" xml:space="preserve">
    <value>Le fichier disque mémoire initial '$1' n'existe pas</value>
  </data>
  <data name="other_title1" xml:space="preserve">
    <value>Créer une Partition de Démarrage</value>
  </data>
  <data name="other_title2" xml:space="preserve">
    <value>Éditer une Partition de Démarrage</value>
  </data>
  <data name="other_details" xml:space="preserve">
    <value>Détails sur la Partition</value>
  </data>
  <data name="other_name" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="other_part" xml:space="preserve">
    <value>Partition à démarrer</value>
  </data>
  <data name="other_pass" xml:space="preserve">
    <value>Passer la table de partition au système d'exploitation?</value>
  </data>
  <data name="other_yes" xml:space="preserve">
    <value>Oui, à partir de</value>
  </data>
  <data name="other_password" xml:space="preserve">
    <value>Mot de passe au démarrage</value>
  </data>
  <data name="other_none" xml:space="preserve">
    <value>Aucune</value>
  </data>
  <data name="other_ename" xml:space="preserve">
    <value>Nom introuvable pour cette partition de démarrage</value>
  </data>
  <data name="log_create_image" xml:space="preserve">
    <value>Noyau $1 créé</value>
  </data>
  <data name="log_modify_image" xml:space="preserve">
    <value>Noyau $1 modifié</value>
  </data>
  <data name="log_delete_image" xml:space="preserve">
    <value>Noyau $1 supprimé</value>
  </data>
  <data name="log_create_image_l" xml:space="preserve">
    <value>Noyau $1 créé pour $2</value>
  </data>
  <data name="log_modify_image_l" xml:space="preserve">
    <value>Noyau $1 modifié pour $2</value>
  </data>
  <data name="log_delete_image_l" xml:space="preserve">
    <value>Noyau $1 supprimé pour $2</value>
  </data>
  <data name="log_create_other" xml:space="preserve">
    <value>Partition de démarrage $1 créée</value>
  </data>
  <data name="log_modify_other" xml:space="preserve">
    <value>Partition de démarrage $1 modifiée</value>
  </data>
  <data name="log_delete_other" xml:space="preserve">
    <value>Partition de démarrage $1 supprimée</value>
  </data>
  <data name="log_create_other_l" xml:space="preserve">
    <value>Partition de démarrage $1 créée sur $2</value>
  </data>
  <data name="log_modify_other_l" xml:space="preserve">
    <value>Partition de démarrage $1 modifiée sur $2</value>
  </data>
  <data name="log_delete_other_l" xml:space="preserve">
    <value>Partition de démarrage $1 supprimée sur $2</value>
  </data>
  <data name="log_apply" xml:space="preserve">
    <value>Configuration appliquée</value>
  </data>
  <data name="log_global" xml:space="preserve">
    <value>Options globales modifiées</value>
  </data>
</root>