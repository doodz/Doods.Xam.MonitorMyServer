<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Configuração de Arranque do Linux</value>
  </data>
  <data name="index_addk" xml:space="preserve">
    <value>Criar novo kernel de arranque</value>
  </data>
  <data name="index_addp" xml:space="preserve">
    <value>Criar nova partição de arranque</value>
  </data>
  <data name="index_global" xml:space="preserve">
    <value>Editar Opções Gerais</value>
  </data>
  <data name="index_globalmsg" xml:space="preserve">
    <value>Editar opções gerais de arranque que se apliquem a todos os kernels e partições.</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>Aplicar Configuração</value>
  </data>
  <data name="index_applymsg1" xml:space="preserve">
    <value>Aplicar a configuração corrente ao sector de arranque $1.</value>
  </data>
  <data name="index_applymsg2" xml:space="preserve">
    <value>Aplicar a configuração corrente ao sector de arranque no dispositivo root corrente.</value>
  </data>
  <data name="index_applymsg3" xml:space="preserve">
    <value>Certifique-se que a sua configuração está correcta antes de reiniciar o sistema!</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>kernels e partições</value>
  </data>
  <data name="global_title" xml:space="preserve">
    <value>Opções Gerais</value>
  </data>
  <data name="global_desc" xml:space="preserve">
    <value>Opções Gerais de Arranque</value>
  </data>
  <data name="global_boot" xml:space="preserve">
    <value>Escrever o carregador de arranque para</value>
  </data>
  <data name="global_root" xml:space="preserve">
    <value>Dispositivo root</value>
  </data>
  <data name="global_default" xml:space="preserve">
    <value>kernel/partição predefinida</value>
  </data>
  <data name="global_first" xml:space="preserve">
    <value>Primeira da lista</value>
  </data>
  <data name="global_prompt" xml:space="preserve">
    <value>Mostrar a prompt do LILO?</value>
  </data>
  <data name="global_timeout" xml:space="preserve">
    <value>Tempo de espera na prompt do LILO</value>
  </data>
  <data name="global_forever" xml:space="preserve">
    <value>Para sempre</value>
  </data>
  <data name="global_lock" xml:space="preserve">
    <value>Lembrar opções de kernel do utilizador?</value>
  </data>
  <data name="global_delay" xml:space="preserve">
    <value>Tempo de espera antes do arranque</value>
  </data>
  <data name="global_imm" xml:space="preserve">
    <value>Imediato</value>
  </data>
  <data name="global_compact" xml:space="preserve">
    <value>Misturar pedidos de leitura?</value>
  </data>
  <data name="global_optional" xml:space="preserve">
    <value>Omitir kernels que não existam?</value>
  </data>
  <data name="global_password" xml:space="preserve">
    <value>Password de arranque predefinida</value>
  </data>
  <data name="global_none" xml:space="preserve">
    <value>Nenhuma</value>
  </data>
  <data name="global_restricted" xml:space="preserve">
    <value>Password necessária para</value>
  </data>
  <data name="global_extra" xml:space="preserve">
    <value>Iniciar kernels com opções extra</value>
  </data>
  <data name="global_any" xml:space="preserve">
    <value>Qualquer arranque</value>
  </data>
  <data name="global_secs" xml:space="preserve">
    <value>segundos</value>
  </data>
  <data name="global_err" xml:space="preserve">
    <value>Falha ao guardar as opções gerais</value>
  </data>
  <data name="apply_title" xml:space="preserve">
    <value>Aplicar Configuração</value>
  </data>
  <data name="apply_exec" xml:space="preserve">
    <value>A aplicar configuração do LILO com o comando $1 ..</value>
  </data>
  <data name="image_title1" xml:space="preserve">
    <value>Criar Kernel de Arranque</value>
  </data>
  <data name="image_title2" xml:space="preserve">
    <value>Editar Kernel de Arranque</value>
  </data>
  <data name="image_options" xml:space="preserve">
    <value>Opções do Kernel de Arranque</value>
  </data>
  <data name="image_name" xml:space="preserve">
    <value>Nome</value>
  </data>
  <data name="image_kernel" xml:space="preserve">
    <value>Kernel a iniciar</value>
  </data>
  <data name="image_opts" xml:space="preserve">
    <value>Opções de Kernel</value>
  </data>
  <data name="image_default" xml:space="preserve">
    <value>Predefinido</value>
  </data>
  <data name="image_add" xml:space="preserve">
    <value>Adicionar opções..</value>
  </data>
  <data name="image_replace" xml:space="preserve">
    <value>Substituir opções..</value>
  </data>
  <data name="image_root" xml:space="preserve">
    <value>Dispositivo root</value>
  </data>
  <data name="image_fromkern" xml:space="preserve">
    <value>Do kernel</value>
  </data>
  <data name="image_rcurr" xml:space="preserve">
    <value>Root corrente</value>
  </data>
  <data name="image_rdev" xml:space="preserve">
    <value>Dispositivo ..</value>
  </data>
  <data name="image_mode" xml:space="preserve">
    <value>Modo de montagem em root</value>
  </data>
  <data name="image_ro" xml:space="preserve">
    <value>Leitura apenas</value>
  </data>
  <data name="image_rw" xml:space="preserve">
    <value>Leitura-escrita</value>
  </data>
  <data name="image_vga" xml:space="preserve">
    <value>Modo de texto VGA</value>
  </data>
  <data name="image_ask" xml:space="preserve">
    <value>Perguntar ao utilizador</value>
  </data>
  <data name="image_other" xml:space="preserve">
    <value>Outro</value>
  </data>
  <data name="image_lock" xml:space="preserve">
    <value>Lembrar opções de kernel do utilizador?</value>
  </data>
  <data name="image_optional" xml:space="preserve">
    <value>Omitir kernels que não existam?</value>
  </data>
  <data name="image_password" xml:space="preserve">
    <value>Password de arranque</value>
  </data>
  <data name="image_restricted" xml:space="preserve">
    <value>Password necessária para</value>
  </data>
  <data name="image_extra" xml:space="preserve">
    <value>Iniciar kernels com opções extra</value>
  </data>
  <data name="image_any" xml:space="preserve">
    <value>Qualquer arranque</value>
  </data>
  <data name="image_none" xml:space="preserve">
    <value>Nenhum</value>
  </data>
  <data name="image_ename" xml:space="preserve">
    <value>Falta o nome para este kernel de arranque</value>
  </data>
  <data name="image_ekernel" xml:space="preserve">
    <value>A imagem do kernel '$1' não existe</value>
  </data>
  <data name="other_title1" xml:space="preserve">
    <value>Criar Partição de Arranque</value>
  </data>
  <data name="other_title2" xml:space="preserve">
    <value>Editar Partição de Arranque</value>
  </data>
  <data name="other_details" xml:space="preserve">
    <value>Detalhes da Partição</value>
  </data>
  <data name="other_name" xml:space="preserve">
    <value>Nome</value>
  </data>
  <data name="other_part" xml:space="preserve">
    <value>Paratição para arrancar</value>
  </data>
  <data name="other_pass" xml:space="preserve">
    <value>Passar a tabela de partição para o SO?</value>
  </data>
  <data name="other_yes" xml:space="preserve">
    <value>Sim, de</value>
  </data>
  <data name="other_password" xml:space="preserve">
    <value>Password de arranque</value>
  </data>
  <data name="other_none" xml:space="preserve">
    <value>Nenhum</value>
  </data>
  <data name="other_ename" xml:space="preserve">
    <value>Falta o nome para esta partição de arranque</value>
  </data>
</root>