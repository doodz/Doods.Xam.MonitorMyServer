<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Linux 開機組態</value>
  </data>
  <data name="index_addk" xml:space="preserve">
    <value>建立一個新的開機核心</value>
  </data>
  <data name="index_addp" xml:space="preserve">
    <value>建立一個新的開機分割區</value>
  </data>
  <data name="index_global" xml:space="preserve">
    <value>編輯全域選項</value>
  </data>
  <data name="index_globalmsg" xml:space="preserve">
    <value>編輯全域開機選項將會套用在全部的核心與分割區之上.</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>套用組態</value>
  </data>
  <data name="index_applymsg1" xml:space="preserve">
    <value>套用目前的組態到 $1 的開機磁區.</value>
  </data>
  <data name="index_applymsg2" xml:space="preserve">
    <value>套用目前的組態到目前根目錄設備的開機磁區.</value>
  </data>
  <data name="index_applymsg3" xml:space="preserve">
    <value>再重新開機前傾確認您的組態是正確的!</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>核心與分割區</value>
  </data>
  <data name="index_earch" xml:space="preserve">
    <value>LILO 之支援在 x86 的系統上面</value>
  </data>
  <data name="global_title" xml:space="preserve">
    <value>全域選項</value>
  </data>
  <data name="global_desc" xml:space="preserve">
    <value>全域開機選項</value>
  </data>
  <data name="global_boot" xml:space="preserve">
    <value>將開機載入器寫入到</value>
  </data>
  <data name="global_root" xml:space="preserve">
    <value>根目錄設備</value>
  </data>
  <data name="global_default" xml:space="preserve">
    <value>預設的核心/分割區</value>
  </data>
  <data name="global_first" xml:space="preserve">
    <value>列表中的第一個</value>
  </data>
  <data name="global_prompt" xml:space="preserve">
    <value>是否顯示 LILO 提示符號?</value>
  </data>
  <data name="global_timeout" xml:space="preserve">
    <value>在 LILO 提示符號等待的時間</value>
  </data>
  <data name="global_forever" xml:space="preserve">
    <value>永遠</value>
  </data>
  <data name="global_lock" xml:space="preserve">
    <value>是否記憶使用者的核心選項?</value>
  </data>
  <data name="global_delay" xml:space="preserve">
    <value>重新啟動之前等待的時間</value>
  </data>
  <data name="global_imm" xml:space="preserve">
    <value>立刻</value>
  </data>
  <data name="global_compact" xml:space="preserve">
    <value>是否合併讀取要求?</value>
  </data>
  <data name="global_optional" xml:space="preserve">
    <value>是否放棄不存在的核心?</value>
  </data>
  <data name="global_password" xml:space="preserve">
    <value>預設的開機密碼</value>
  </data>
  <data name="global_none" xml:space="preserve">
    <value>無</value>
  </data>
  <data name="global_restricted" xml:space="preserve">
    <value>需要密碼給</value>
  </data>
  <data name="global_extra" xml:space="preserve">
    <value>含有額外選項的開機核心</value>
  </data>
  <data name="global_any" xml:space="preserve">
    <value>任何啟動</value>
  </data>
  <data name="global_secs" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="global_err" xml:space="preserve">
    <value>無法儲存全域選項</value>
  </data>
  <data name="apply_title" xml:space="preserve">
    <value>套用組態</value>
  </data>
  <data name="apply_exec" xml:space="preserve">
    <value>以命令 $1 套用 LILO 組態檔中...</value>
  </data>
  <data name="image_title1" xml:space="preserve">
    <value>建立開機核心</value>
  </data>
  <data name="image_title2" xml:space="preserve">
    <value>編輯開機核心</value>
  </data>
  <data name="image_options" xml:space="preserve">
    <value>開機核心選項</value>
  </data>
  <data name="image_name" xml:space="preserve">
    <value>名稱</value>
  </data>
  <data name="image_kernel" xml:space="preserve">
    <value>開機要用的核心</value>
  </data>
  <data name="image_opts" xml:space="preserve">
    <value>核心選項</value>
  </data>
  <data name="image_default" xml:space="preserve">
    <value>預設</value>
  </data>
  <data name="image_add" xml:space="preserve">
    <value>增加選項...</value>
  </data>
  <data name="image_replace" xml:space="preserve">
    <value>取代選項...</value>
  </data>
  <data name="image_root" xml:space="preserve">
    <value>根目錄設備</value>
  </data>
  <data name="image_fromkern" xml:space="preserve">
    <value>從核心</value>
  </data>
  <data name="image_rcurr" xml:space="preserve">
    <value>目前的根目錄</value>
  </data>
  <data name="image_rdev" xml:space="preserve">
    <value>設備...</value>
  </data>
  <data name="image_initrd" xml:space="preserve">
    <value>起始記憶體磁碟檔案</value>
  </data>
  <data name="image_mode" xml:space="preserve">
    <value>根目錄掛載模式</value>
  </data>
  <data name="image_ro" xml:space="preserve">
    <value>唯讀</value>
  </data>
  <data name="image_rw" xml:space="preserve">
    <value>可讀寫</value>
  </data>
  <data name="image_vga" xml:space="preserve">
    <value>VGA 文字模式</value>
  </data>
  <data name="image_ask" xml:space="preserve">
    <value>詢問使用者</value>
  </data>
  <data name="image_other" xml:space="preserve">
    <value>其他</value>
  </data>
  <data name="image_lock" xml:space="preserve">
    <value>是否要記憶使用者的核心選項?</value>
  </data>
  <data name="image_optional" xml:space="preserve">
    <value>是否放棄不存在的核心?</value>
  </data>
  <data name="image_password" xml:space="preserve">
    <value>開機密碼</value>
  </data>
  <data name="image_restricted" xml:space="preserve">
    <value>需要密碼給</value>
  </data>
  <data name="image_extra" xml:space="preserve">
    <value>含有額外選項的開機核心</value>
  </data>
  <data name="image_any" xml:space="preserve">
    <value>任何啟動</value>
  </data>
  <data name="image_none" xml:space="preserve">
    <value>無</value>
  </data>
  <data name="image_ename" xml:space="preserve">
    <value>遺失給這個開機核心的名稱</value>
  </data>
  <data name="image_ekernel" xml:space="preserve">
    <value>核心影像檔 '$1' 不存在</value>
  </data>
  <data name="image_einitrd" xml:space="preserve">
    <value>起始記憶體磁碟檔案 '$1' 不存在</value>
  </data>
  <data name="other_title1" xml:space="preserve">
    <value>建立開機分割區</value>
  </data>
  <data name="other_title2" xml:space="preserve">
    <value>編輯開機分割區</value>
  </data>
  <data name="other_details" xml:space="preserve">
    <value>分割區詳細資料</value>
  </data>
  <data name="other_name" xml:space="preserve">
    <value>名稱</value>
  </data>
  <data name="other_part" xml:space="preserve">
    <value>開機使用的分割區</value>
  </data>
  <data name="other_pass" xml:space="preserve">
    <value>是否傳遞分割區表給作業系統?</value>
  </data>
  <data name="other_yes" xml:space="preserve">
    <value>是, 從</value>
  </data>
  <data name="other_password" xml:space="preserve">
    <value>開機密碼</value>
  </data>
  <data name="other_none" xml:space="preserve">
    <value>無</value>
  </data>
  <data name="other_ename" xml:space="preserve">
    <value>遺失這個開機分割區的名稱</value>
  </data>
</root>