<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="index_title" xml:space="preserve">
    <value>Linux Bootup-Konfiguration</value>
  </data>
  <data name="index_addk" xml:space="preserve">
    <value>Einen neuen Boot-Kernel erstellen</value>
  </data>
  <data name="index_addp" xml:space="preserve">
    <value>Eine neue Boot-Partition erstellen</value>
  </data>
  <data name="index_global" xml:space="preserve">
    <value>Globale Einstellungen bearbeiten</value>
  </data>
  <data name="index_globalmsg" xml:space="preserve">
    <value>Globale Einstellungen, die alle Kernel und Partitionen betreffen, bearbeiten.</value>
  </data>
  <data name="index_apply" xml:space="preserve">
    <value>Konfiguration anwenden</value>
  </data>
  <data name="index_applymsg1" xml:space="preserve">
    <value>Aktuelle Konfiguration auf den Boot-Sektor auf $1 anwenden</value>
  </data>
  <data name="index_applymsg2" xml:space="preserve">
    <value>Aktuelle Konfiguration auf den Boot-Sektor auf $1 anwenden.</value>
  </data>
  <data name="index_applymsg3" xml:space="preserve">
    <value>Stellen Sie sicher, dass die Konfiguration korrekt ist, bevor Sie das System neu starten!</value>
  </data>
  <data name="index_return" xml:space="preserve">
    <value>Kernel und Partitionen</value>
  </data>
  <data name="index_earch" xml:space="preserve">
    <value>LILO wird nur auf Systemen mit x86-Architektur unterstützt</value>
  </data>
  <data name="index_econf" xml:space="preserve">
    <value>Die LILO Konfigurations-Datei $1 existiert nicht. Möglicherweise wird ein anderer 'Boot-Loader' auf Ihrem System benutzt.</value>
  </data>
  <data name="global_title" xml:space="preserve">
    <value>Globale Einstellungen</value>
  </data>
  <data name="global_desc" xml:space="preserve">
    <value>Globale Boot-Einstellungen</value>
  </data>
  <data name="global_boot" xml:space="preserve">
    <value>Schreibe 'Boot-Loader' auf</value>
  </data>
  <data name="global_root" xml:space="preserve">
    <value>Root-Gerät</value>
  </data>
  <data name="global_default" xml:space="preserve">
    <value>Standard-Kernel/-Partition</value>
  </data>
  <data name="global_first" xml:space="preserve">
    <value>Erster in Liste</value>
  </data>
  <data name="global_prompt" xml:space="preserve">
    <value>LILO-Eingabezeile anzeigen?</value>
  </data>
  <data name="global_timeout" xml:space="preserve">
    <value>Wartezeit der LILO-Eingabezeile</value>
  </data>
  <data name="global_forever" xml:space="preserve">
    <value>Endlos</value>
  </data>
  <data name="global_lock" xml:space="preserve">
    <value>Benutzer-Kernel-Optionen merken?</value>
  </data>
  <data name="global_delay" xml:space="preserve">
    <value>Wartezeit vor dem Booten</value>
  </data>
  <data name="global_imm" xml:space="preserve">
    <value>Sofort</value>
  </data>
  <data name="global_compact" xml:space="preserve">
    <value>Leseanfragen zusammenfassen?</value>
  </data>
  <data name="global_optional" xml:space="preserve">
    <value>Überspringe Kernel, die nicht existieren?</value>
  </data>
  <data name="global_password" xml:space="preserve">
    <value>Standard Boot-Passwort</value>
  </data>
  <data name="global_none" xml:space="preserve">
    <value>Keines</value>
  </data>
  <data name="global_restricted" xml:space="preserve">
    <value>Passwort benötigt für</value>
  </data>
  <data name="global_extra" xml:space="preserve">
    <value>Booten der Kernel mit zusätzlichen Einstellungen</value>
  </data>
  <data name="global_any" xml:space="preserve">
    <value>Jegliches Booten</value>
  </data>
  <data name="global_secs" xml:space="preserve">
    <value>Sekunden</value>
  </data>
  <data name="global_lba" xml:space="preserve">
    <value>Erlaube Booten oberhalb von 1024 Zylindern?</value>
  </data>
  <data name="global_err" xml:space="preserve">
    <value>Fehler beim Speichern der globalen Einstellungen</value>
  </data>
  <data name="apply_title" xml:space="preserve">
    <value>Konfiguration anwenden</value>
  </data>
  <data name="apply_exec" xml:space="preserve">
    <value>Wende LILO-Konfiguration an mit dem Befehl $1 ..</value>
  </data>
  <data name="image_title1" xml:space="preserve">
    <value>Boot-Kernel erstellen</value>
  </data>
  <data name="image_title2" xml:space="preserve">
    <value>Boot-Kernel bearbeiten</value>
  </data>
  <data name="image_options" xml:space="preserve">
    <value>Boot-Kernel Einstellungen</value>
  </data>
  <data name="image_name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="image_kernel" xml:space="preserve">
    <value>Zu bootender Kernel</value>
  </data>
  <data name="image_opts" xml:space="preserve">
    <value>Kernel-Parameter</value>
  </data>
  <data name="image_default" xml:space="preserve">
    <value>Standard</value>
  </data>
  <data name="image_add" xml:space="preserve">
    <value>Füge Optionen hinzu ..</value>
  </data>
  <data name="image_replace" xml:space="preserve">
    <value>Ersetze Optionen ..</value>
  </data>
  <data name="image_root" xml:space="preserve">
    <value>Root-Gerät</value>
  </data>
  <data name="image_fromkern" xml:space="preserve">
    <value>Von Kernel</value>
  </data>
  <data name="image_rcurr" xml:space="preserve">
    <value>Aktuelles Stammverzeichnis</value>
  </data>
  <data name="image_rdev" xml:space="preserve">
    <value>Gerät ..</value>
  </data>
  <data name="image_initrd" xml:space="preserve">
    <value>Anfängliche RAM-Disk-Datei</value>
  </data>
  <data name="image_mode" xml:space="preserve">
    <value>Root-Mount-Modus</value>
  </data>
  <data name="image_ro" xml:space="preserve">
    <value>Schreibgeschützt</value>
  </data>
  <data name="image_rw" xml:space="preserve">
    <value>Lesen und Schreiben</value>
  </data>
  <data name="image_vga" xml:space="preserve">
    <value>VGA-Textmodus</value>
  </data>
  <data name="image_ask" xml:space="preserve">
    <value>Benutzer fragen</value>
  </data>
  <data name="image_other" xml:space="preserve">
    <value>Andere</value>
  </data>
  <data name="image_lock" xml:space="preserve">
    <value>Benutzer-Kernel-Optionen merken?</value>
  </data>
  <data name="image_optional" xml:space="preserve">
    <value>Überspringe Kernel, die nicht existieren?</value>
  </data>
  <data name="image_password" xml:space="preserve">
    <value>Boot-Passwort</value>
  </data>
  <data name="image_restricted" xml:space="preserve">
    <value>Passwort benötigt für</value>
  </data>
  <data name="image_extra" xml:space="preserve">
    <value>Booten der Kernel mit zusätzlichen Einstellungen</value>
  </data>
  <data name="image_any" xml:space="preserve">
    <value>Jegliches Booten</value>
  </data>
  <data name="image_none" xml:space="preserve">
    <value>Keines</value>
  </data>
  <data name="image_ename" xml:space="preserve">
    <value>Fehlender Name für diesen Kernel</value>
  </data>
  <data name="image_ekernel" xml:space="preserve">
    <value>Kernel-Abbild '$1' existiert nicht</value>
  </data>
  <data name="image_einitrd" xml:space="preserve">
    <value>Anfängliche RAM-Disk-Datei '$1' existiert nicht</value>
  </data>
  <data name="other_title1" xml:space="preserve">
    <value>Boot-Partition erstellen</value>
  </data>
  <data name="other_title2" xml:space="preserve">
    <value>Boot-Partition bearbeiten</value>
  </data>
  <data name="other_details" xml:space="preserve">
    <value>Partitionsdetails</value>
  </data>
  <data name="other_name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="other_part" xml:space="preserve">
    <value>Zu bootende Partition</value>
  </data>
  <data name="other_pass" xml:space="preserve">
    <value>Übergebe die Partitionstabelle an das Betriebssystem?</value>
  </data>
  <data name="other_yes" xml:space="preserve">
    <value>Ja, von</value>
  </data>
  <data name="other_password" xml:space="preserve">
    <value>Boot-Passwort</value>
  </data>
  <data name="other_none" xml:space="preserve">
    <value>Keines</value>
  </data>
  <data name="other_ename" xml:space="preserve">
    <value>Es fehlt der Name für diese Boot-Partition</value>
  </data>
  <data name="log_create_image" xml:space="preserve">
    <value>Boot-Kernel $1 erzeugt</value>
  </data>
  <data name="log_modify_image" xml:space="preserve">
    <value>Boot-Kernel $1 verändert</value>
  </data>
  <data name="log_delete_image" xml:space="preserve">
    <value>Boot-Kernel $1 gelöscht</value>
  </data>
  <data name="log_create_image_l" xml:space="preserve">
    <value>Erzeugter Boot-Kernel $1 für $2</value>
  </data>
  <data name="log_modify_image_l" xml:space="preserve">
    <value>Veränderter Boot-Kernel $1 für $2</value>
  </data>
  <data name="log_delete_image_l" xml:space="preserve">
    <value>Gelöschter Boot-Kernel $1 für $2</value>
  </data>
  <data name="log_create_other" xml:space="preserve">
    <value>Boot-Partition $1 erzeugt</value>
  </data>
  <data name="log_modify_other" xml:space="preserve">
    <value>Boot-Partition $1 verändert</value>
  </data>
  <data name="log_delete_other" xml:space="preserve">
    <value>Boot-Partition $1 gelöscht</value>
  </data>
  <data name="log_create_other_l" xml:space="preserve">
    <value>Erzeugte Boot-Partition $1 on $2</value>
  </data>
  <data name="log_modify_other_l" xml:space="preserve">
    <value>Veränderte Boot-Partition $1 auf $2</value>
  </data>
  <data name="log_delete_other_l" xml:space="preserve">
    <value>Gelöschte Boot-Partition $1 on $2</value>
  </data>
  <data name="log_apply" xml:space="preserve">
    <value>Angewandte Konfiguration</value>
  </data>
  <data name="log_global" xml:space="preserve">
    <value>Geänderte globale Optionen</value>
  </data>
</root>